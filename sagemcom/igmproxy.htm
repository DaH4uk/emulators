<!DOCTYPE html>
<html><head>
<meta http-equiv="Pragma" content="no-cache">
<meta http-equiv="Refresh" content="480;url=http://192.168.0.1">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<link href="files/reset.css" rel="stylesheet" type="text/css">
<link href="files/base.css" rel="stylesheet" type="text/css">
<link href="files/style.css" rel="stylesheet" type="text/css">
<script src="files/share.js" type="text/javascript">
</script>

 <title>IGMP Proxy </title>
    <script>

        function disableRadioGroup(radioArrOrButton) {
            if (!radioArrOrButton)
                return;

            if (radioArrOrButton.type && radioArrOrButton.type == "radio") {
                var radioButton = radioArrOrButton;
                var radioArray = radioButton.form[radioButton.name];
            }
            else
                var radioArray = radioArrOrButton;
            radioArray.disabled = true;
            for (var b = 0; b < radioArray.length; b++) {
                if (radioArray[b].checked) {
                    radioArray.checkedElement = radioArray[b];
                    break;
                }
            }
            for (var b = 0; b < radioArray.length; b++) {
                radioArray[b].disabled = true;
                radioArray[b].checkedElement = radioArray.checkedElement;
            }
        }

        function enableRadioGroup(radioArrOrButton) {
            if (!radioArrOrButton)
                return;

            if (radioArrOrButton.type && radioArrOrButton.type == "radio") {
                var radioButton = radioArrOrButton;
                var radioArray = radioButton.form[radioButton.name];
            }
            else
                var radioArray = radioArrOrButton;

            radioArray.disabled = false;
            radioArray.checkedElement = null;
            for (var b = 0; b < radioArray.length; b++) {
                radioArray[b].disabled = false;
                radioArray[b].checkedElement = null;
            }
        }

        function disableTextField(field) {
            if (!field)
                return;
            if (document.all || document.getElementById)
                field.disabled = true;
            else {
                field.oldOnFocus = field.onfocus;
                field.onfocus = skip;
            }
        }
        function enableTextField(field) {
            if (!field)
                return;
            if (document.all || document.getElementById)
                field.disabled = false;
            else {
                field.onfocus = field.oldOnFocus;
            }
        }

        function resetClick() {
            if (initIgmpDisable) {

                disableRadioGroup(document.igmp.mcastAllowed);
                disableTextField(document.igmp.robustCount);
                disableTextField(document.igmp.queryIntvl);
                disableTextField(document.igmp.queryRespIntvl);
                disableTextField(document.igmp.LastQueryCnt);
                disableTextField(document.igmp.grpLeaveDelay);
                disableRadioGroup(document.igmp.igmppassthru);
            }
            else {

                enableRadioGroup(document.igmp.mcastAllowed);
                enableTextField(document.igmp.robustCount);
                enableTextField(document.igmp.queryIntvl);
                enableTextField(document.igmp.queryRespIntvl);
                enableTextField(document.igmp.LastQueryCnt);
                enableTextField(document.igmp.grpLeaveDelay);
                enableRadioGroup(document.igmp.igmppassthru);
            }
        }

        function proxySelection() {
            if (document.igmp.proxy[0].checked) {

                disableRadioGroup(document.igmp.mcastAllowed);
                disableTextField(document.igmp.robustCount);
                disableTextField(document.igmp.queryIntvl);
                disableTextField(document.igmp.queryRespIntvl);
                disableTextField(document.igmp.LastQueryCnt);
                disableTextField(document.igmp.grpLeaveDelay);
                disableRadioGroup(document.igmp.igmppassthru);
            }
            else {

                enableRadioGroup(document.igmp.mcastAllowed);
                enableTextField(document.igmp.robustCount);
                enableTextField(document.igmp.queryIntvl);
                enableTextField(document.igmp.queryRespIntvl);
                enableTextField(document.igmp.LastQueryCnt);
                enableTextField(document.igmp.grpLeaveDelay);
                enableRadioGroup(document.igmp.igmppassthru);
            }
        }

        function validateKey(str) {
            for (var i = 0; i < str.length; i++) {
                if ((str.charAt(i) >= '0' && str.charAt(i) <= '9') || (str.charAt(i) == '.'))
                    continue;
                return 0;
            }
            return 1;
        }

        function checkPS(num) {
            if (num.value == "") {
                alert("Не может быть пустым!");
                num.value = num.defaultValue;
                num.focus();
                return 0;
            }
            if (validateKey(num.value) == 0) {
                alert("Неверное значение, он должно быть в интервале 0-9.");
                num.value = num.defaultValue;
                num.focus();
                return 0;
            }
            return 1;
        }

        function checkRespInterval(str) {
            if (str.length < 3)
                return 1;

            if (str.length > 3)
                return 0;

            if (str.charAt(0) > 2)
                return 0;
            else if (str.charAt(0) < 2)
                return 1;
            else {
                if (str.charAt(1) > 5)
                    return 0;
                else if (str.charAt(1) < 5)
                    return 1;
                else {
                    if (str.charAt(2) > 5)
                        return 0;
                    else
                        return 1;
                }
            }
        }

        function saveChanges() {
            if (!checkPS(document.igmp.robustCount)) {
                return false;
            }

            if (!checkPS(document.igmp.queryIntvl)) {
                return false;
            }

            if (!checkPS(document.igmp.queryRespIntvl)) {
                return false;
            } else if (!checkRespInterval(document.igmp.queryRespIntvl.value)) {
                alert("Интервал ответа на запрос должен быть меньше 256!");
                document.igmp.queryRespIntvl.value = document.igmp.queryRespIntvl.defaultValue;
                document.igmp.queryRespIntvl.focus();
                return false;
            }

            if (!checkPS(document.igmp.LastQueryCnt)) {
                return false;
            }

            if (!checkPS(document.igmp.grpLeaveDelay)) {
                return false;
            }

            return true;
        }
    </script>

</head>

<body>


    <div class="intro_main ">

        <p class="intro_title">IGMP Proxy</p>
        <p class="intro_content">С включенной функцией IGMP Proxy роутер
 работает с внешней сетью от имени IGMP-клиентов в LAN. Для включения 
IGMP Proxy нужно произвести следующие действия:<br>
        . Включить IGMP Proxy на интерфейсе WAN, подключенном к оборудованию доступа с включенным IGMP.<br>
        . Включить IGMP на интерфейсе LAN, к которому подключены клиенты IGMP (например, STB).
        </p>

    </div>

    <div class="data_common data_common_notitle">

        <table>

            <tbody><tr class="hide_gui">

                <th>IGMP Proxy:</th>
                <td>

                    <input value="0" name="proxy" onclick="proxySelection()" type="radio">Отключена&nbsp;&nbsp;
                    <input value="1" name="proxy" checked="checked" onclick="proxySelection()" type="radio">Включена
                </td>

            </tr>

 <tr style=""> 
	<th width="30%">Мальтикаст разрешен:</th> 
	<td width="35%"> 
	   	<input value="0" name="mcastAllowed" type="radio">Выкл.&nbsp;&nbsp; 
	   	<input value="1" name="mcastAllowed" checked="checked" type="radio">Вкл. 
	</td> 
 </tr> 

 <tr style=""> 
  <th width="30%">Robust Count:</th> 
  <td width="35%"><input name="robustCount" size="6" maxlength="6" value="2" type="text"> </td> 
</tr> 

 <tr style=""> 
   <th width="30%">Last Member Query Count:</th> 
   <td width="35%"><input name="LastQueryCnt" size="6" maxlength="6" value="2" type="text"> </td> 
</tr> 

 <tr style=""> 
    <th width="30%">Интервал опроса:</th> 
    <td width="35%"><input name="queryIntvl" size="6" maxlength="6" value="60" type="text"> (секунд)</td> 
</tr> 

 <tr style=""> 
    <th width="30%">Интервал ответа на запрос:</th> 
    <td width="35%"><input name="queryRespIntvl" size="6" maxlength="6" value="100" type="text"> (*100мс)</td> 
</tr> 

 <tr style=""> 
   <th width="30%">Задержка покидания Группы:</th> 
   <td width="35%"><input name="grpLeaveDelay" size="6" maxlength="6" value="2000" type="text"> (мс)</td> 
</tr> 


        </tbody></table>

    </div>


    <div class="btn_ctl clearfix">

        <input class="link_bg" name="save" value="Применить" onclick="return saveChanges()" type="submit">
        <input class="link_bg" name="reset" onclick="resetClick()" value="Отменить" type="reset">
        <input name="submit.htm?igmproxy.htm" value="Send" type="hidden">

    </div>

    <script>

        initIgmpDisable = document.igmp.proxy[0].checked;
        proxySelection();
    </script>


<script src="files/jquip_sizzle.js" type="text/javascript"></script>
<script src="files/jquip.js" type="text/javascript"></script>
<script src="files/readonly.js" type="text/javascript"></script>







</body></html>