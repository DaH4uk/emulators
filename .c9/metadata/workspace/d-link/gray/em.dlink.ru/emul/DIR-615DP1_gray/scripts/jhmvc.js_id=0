{"filter":false,"title":"jhmvc.js?id=0","tooltip":"/d-link/gray/em.dlink.ru/emul/DIR-615DP1_gray/scripts/jhmvc.js?id=0","undoManager":{"mark":5,"position":5,"stack":[[{"start":{"row":3760,"column":3},"end":{"row":3760,"column":4},"action":"insert","lines":["/"],"id":4}],[{"start":{"row":3760,"column":4},"end":{"row":3760,"column":5},"action":"insert","lines":["/"],"id":5}],[{"start":{"row":3387,"column":17},"end":{"row":3387,"column":18},"action":"insert","lines":["й"],"id":6}],[{"start":{"row":3387,"column":18},"end":{"row":3387,"column":19},"action":"insert","lines":["й"],"id":7}],[{"start":{"row":3387,"column":18},"end":{"row":3387,"column":19},"action":"remove","lines":["й"],"id":8}],[{"start":{"row":3387,"column":17},"end":{"row":3387,"column":18},"action":"remove","lines":["й"],"id":9}],[{"start":{"row":0,"column":0},"end":{"row":13128,"column":0},"action":"remove","lines":["/*!"," * jHMVC JavaScript Library v1.0pre"," *"," * Date: Wed Mar 24 16:16:13 2010 -0400"," */","//(function( window, undefined ) {","","/**"," * @fileoverview Главный модуль библиотеки jHMVC."," * Библиотека jHMVC представляет собой набор базовых класов для построения клиентских web приложений в соответcтвии"," * с архитетурой HMVC (Hierarchical Model View Controller).<br>"," * Основные понятия:"," * <ul>"," * \t<li>"," * \t\tМодель. Объект, который хранит данные в наболее подходящем для их обработки виде."," * \t</li>"," * \t<li>"," * \t\tПредставление. Объект, который представляет данные модели в наиболее понятном для пользователя виде."," * \t</li>"," * \t<li>"," * \t\tКонтроллер. Объект, управляющий связкой модели и представлений, а также иерархическими связями."," * \t</li>"," * \t<li>"," * \t\tИнтерфейс. Совокупность представлений на разных уровнях иерархии и имеющих один и тот-же индекс."," * \t\tИнтерфейсы объявляются в контроллере полем ifaceTypes."," * \t</li>"," * \t<li>"," * \t\tЭлемент. Контроллер в совокупности с моделью и, возможно, имеющий один или более интерфейсов."," * </ul>"," * Основная задача базовых классов jsModel, jsView, jsController это поддержка буквы \"H\" в названии библиотеки, т.е."," * иерархии элементов. Общение с сервером производится тоже с помощью интерфейса, при этом сервер рассматривается как пользователь,"," * и наиболее удобным представлением данных для этого пользователя являтся HTTP запрос. Базовым классом серверного представления является"," * jsSSideView. Базовым классом клиентского является jsCSideView. Также в главном модуле определён класс клиентского представления "," * для отрисовки деревьев так как он является естевственным представлением иерархической сущности библиотеки."," */","","","/*"," * TODO: Загнать все глобальные функции в \"фирменное\" пространство имён"," * Все конструкторы классов должны быть написаны таким образом, чтобы, при отсутствии"," * хотя-бы одного обязательного аргумента, они немедленно возвращали управление и не вызывали"," * ошибок. Это связано с тем, что, в случае когда вызывающий хранит список аргументов в массиве,"," * он может вызвать конструктор следующим образом в 2 этапа:"," * myObj = new myClass(); \t\t\t//создание неинициализированного объекта"," * myClass.apply(myObj, myArgs);\t//инициализация объекта; myArgs - объект типа Array"," * Если myArgs, перед передачей вызывающему, был создан так:"," * myArgs = [1, 2, 3];"," * то приведённый пример аналогичен вызову:"," * myObj = new myClass(1, 2, 3)"," */ ","","if (!window.INIT_SCRIPT) {","\t$('head').prepend(\"<script src='scripts/init.js'></script>\");","}","","var jhmvcUID = 0;","","","controlTypes = {","};","","/** Возвращает уникальный идентификатор."," *  Пока это просто счётчик."," *  @type int"," * \t@return Уникальное, в пределах window, число."," */","function getUID(){","\treturn window.jhmvcUID++;","}","","","/** Пустая функция."," */","function dummyFunc(){};","","/** Берёт два класса и делает первый потомком второго.<br>"," *  Есть разные мнения, кто придумал функцию extend, но популяризацией она обязана Дугласу Крокфорду (http://www.crockford.com/).<br>"," * \tФункция модифицирована по сравнению с оригиналом: в прототип классов добавляется функция getAncestry(), которая"," *\tвозвращает родословную класса в виде массива предков в порядке от базового к производному классу."," *  @param {Function} Child Производный класс."," * \t@param {Function} Parent Базовый класс."," */","function extend(Child, Parent) {","\tvar F = function(){};","\tF.prototype = Parent.prototype;","\tChild.prototype = new F();","\tChild.prototype.constructor = Child;","\tChild.superclass = Parent.prototype;","\tChild.prototype.getAncestry = function(){","\t\tarr = Child.superclass.getAncestry();","\t\tarr.push(Child);","\t\treturn arr;","\t}","\tif(!Parent.superclass)\tParent.prototype.getAncestry = function(){return [Parent];}","}","","/** Тест на существование значения.<br>"," *  Если тестируется переменная в глобальной области видимости,"," * \tиспользуйте функцию так: no(window.val)."," *  @param {} arguments тестируемые значения."," *  @return true если хотя бы один аргумент имеет зн. undefined или null.<br>"," *  false - все аргументы имеют адекватное значение."," *  @type boolum"," */","function no(){","\tfor(var i=0;i<arguments.length;i++){","\t\tval = arguments[i];","\t\tif(val == undefined || val == null) return true;","\t}","\treturn false","}","","","/** Запускает callback в нужном контексте.<br>"," * \tusage: context(&lt;context&gt;).callback('&lt;method&gt;')<br>"," * \tИдея взята из статьи Jason Pincin <a href='http://knol.google.com/k/jquery-callback-contexts'>jQuery Callback Contexts</a>"," *  @param {Object}\tcontext Контекст."," *  @type Object"," *  @return\tcallback-оболочка запускающаю целевой callback."," */","/*function context(context){","\tvar co = {","\t\tcallback: function(method){","//\t\t\tif(typeof method == 'string') method = context[method];","\t\t\tvar cb = function(){return method.apply(context, arguments);}","\t\t\treturn cb;","\t\t}","\t};","\treturn co;","}*/","","/** Безопасный поиск перевода."," *  Предполагается, что если список ключевых слов есть, то он в объекте lang."," *  @param {String}\tkey Ключевое слово."," *  @return\tПеревод или key."," */","/*function lng(key){","\tvar trans = key;","\tvar lang = window.lang;","\tvar baselang = window.baselang;","\tif(lang && lang[key]){","\t\ttrans = lang[key];","\t}","\telse if(baselang && baselang[key]){","\t\ttrans = baselang[key];","\t}","\treturn trans;","}*/","","/*","======================================================================","sprintf()","======================================================================","Purpose : format a string","Author : Antoine Hurkmans, January 2002","","----------------------------------------------------------------------","Parameters :","you may figure this one out yourself (hint: www.php.net/sprintf)","----------------------------------------------------------------------","Returns : a formatted string","----------------------------------------------------------------------","Revision History :","16-Jul-08 SA - Fixed bug with using undefined aMatch[...] values","               and added integer precision support like \"%.2d\"","12-Feb-02 AH - Added support for alternate padding char","05-Feb-02 AH - Fixed bug in display of decimal part for floats","28-Jan-02 AH - Initial Version","======================================================================","*/","function sprintf() {","var iCount, iPadLength, aMatch, iMatchIndex = 1;","var bAlignLeft, sPad, iWidth, iPrecision, sType;","var aArgs = sprintf.arguments;","if (aArgs.length < 2) return '';"," var sFormat = aArgs[0];"," var re = /%(-)?(0| |'.)?(\\d+)?(\\.\\d*)?([bcdfosxX]{1})/;"," var i;",""," while (re.test(sFormat)) {","  aMatch = re.exec(sFormat);","  for(i=0;i<aMatch.length;i++){","\t  aMatch[i] = aMatch[i]?aMatch[i]:\"\";","  }","  bAlignLeft = (aMatch[1] == '-');","  sPad = (aMatch[2] == '' ? ' ' : aMatch[2]);","  if (sPad.substring(0, 1) == \"'\") sPad = sPad.substring(1);","  sPad = \"\";","  iWidth = (aMatch[3] > 0 ? parseInt(aMatch[3]) : 0);","  sType = aMatch[5];","  mArgument = (aArgs[iMatchIndex] != null ? aArgs[iMatchIndex] : '');","  ++iMatchIndex;","  if (mArgument.toString().length) {","   if ('fbcdoxX'.indexOf(sType) != -1 && isNaN(mArgument)) mArgument = 0;","   switch (sType) {","    case 'f': // floats","     var iPower = Math.pow(10, iPrecision);","     mArgument = (Math.round(parseFloat(mArgument) * iPower) / iPower).toString();","     var aFloatParts = mArgument.split('.');","     iPrecision = (aMatch[4].length > 1 ? parseInt(aMatch[4].substring(1)) : 6);","     if (iPrecision > 0) {","      if (aFloatParts.length == 1) aFloatParts[1] = '';","      // pad with zeroes to precision","      for (iCount = aFloatParts[1].length; iCount < iPrecision; iCount++)","       aFloatParts[1] += '0';","      mArgument = aFloatParts[0] + '.' + aFloatParts[1];","     } else mArgument = aFloatParts[0];","     iPadLength = aFloatParts[0].length;","     break;","    case 'b': // binary","     mArgument = parseInt(mArgument).toString(2);","     iPadLength = mArgument.length;","     break;","    case 'c': // character","     mArgument = String.fromCharCode(parseInt(mArgument));","     break;","    case 'd': // decimal","     mArgument = mArgument.toString();","     iPadLength = mArgument.length;","     break;","    case 'o': // octal","     mArgument = parseInt(mArgument).toString(8);","     iPadLength = mArgument.length;","     break;","    case 'x': // hexadecimal (lowercase)","     mArgument = parseInt(mArgument).toString(16);","     iPadLength = mArgument.length;","     break;","    case 'X': // hexadecimal (uppercase)","     mArgument = parseInt(mArgument).toString(16).toUpperCase();","     iPadLength = mArgument.length;","     break;","    default: // strings","     mArgument = mArgument.toString();","     iPadLength = mArgument.length;","    }","   if(sType == 'b' || sType == 'd' || sType == 'o' || sType == 'x' || sType == 'X'){","       iPrecision = (aMatch[4].length > 1 ? parseInt(aMatch[4].substring(1)) : 1);","\t   if(iPrecision > mArgument.length){","           zeros = \"\";","\t\t   for(i=0;i<(iPrecision-mArgument.length);i++){","\t\t\t   zeros += \"0\";","\t\t   }","\t\t   mArgument = zeros + mArgument;","\t   }","   }","    if ('fbdoxX'.indexOf(sType) != -1) {","     // pad with padding-char to width","     if (bAlignLeft)","      for (iCount = iPadLength; iCount < iWidth; iCount++)","       mArgument += sPad;","     else","      for (iCount = iPadLength; iCount < iWidth; iCount++)","     mArgument = sPad + mArgument;","    }","   }","   sFormat = sFormat.replace(re, mArgument);","  }",""," return sFormat;","}","","/** Создаёт новый экземпляр класса jsModel."," *  @class Представляет базовую функциональность модели."," *  @constructor"," */","function jsModel(){","\t/**Ссылка на контроллер.*/","\tthis.ctrl = null;","}","","/** Создаёт новый экземпляр класса jsView"," *  @class Представляет базовую функциональность представления."," *  @constructor"," *  @param {int} viewInx Индекс интерфейса, к которому будет принадлежать представление."," * \t\t\t\t\t\t Нужен для вызова конструкторов детей."," * \t@param {Object}\tctrl Ссылка на контроллер."," * \t@param {Object}\toptions Опции представления."," */","function jsView(ctrl, viewInx, options){","\tif(no(ctrl, viewInx)) return;","","\t/**Индекс интерфейса, к которому будет принадлежать представление.*/","\tthis.viewInx = viewInx;","\t/**Ссылка на контроллер.*/","\tthis.ctrl = ctrl;","\t/**Опции представления.*/","\tthis.options = options?options:{};","","\t/** Вызов updateModel детей и запуск события updmodel.<br>","\t*   Методы производного класса должны вызывать его в КОНЦЕ, а не в начале.","\t*   @type\tbool","\t* \t@return\tРезультат обновления модели.","\t*/","\tjsView.prototype.updateModel = function(){","\t\tvar child = null;","\t\tvar children = null;","\t\tvar res = !this.statusCode;","\t\t","\t\tchildren = this.ctrl.children;","\t\tfor(var i in children){","\t\t\tchild = this.getChild(i);","\t\t\tif(child instanceof jsView){","\t\t\t\tres &= child.updateModel();","\t\t\t}","\t\t}","\t\tthis.ctrl.event(\"updmodel\", this.ctrl.model);","\t\treturn res;","\t}","","\t/** Вызов updateView детей","\t*/","\tjsView.prototype.updateView = function(){","\t\tvar child = null;","\t\tvar children = null;","","\t\tchildren = this.ctrl.children;","\t\tfor(var i in children){","\t\t\tchild = this.getChild(i);","\t\t\tif(child instanceof jsView) child.updateView();","\t\t}","\t}","\t","\t/** Привязывает обработчик к событию контроллера.","\t*   @param {String}\teventType\tТип события.","\t* \t@param {int}\tviewInx\t\tИндекс представления.","\t*/","\tjsView.prototype.bind = function(eventType, handler){","\t\tthis.ctrl.addEventHandler(eventType, handler, this.viewInx);","\t}","","\t/** Простой доступ к любому представлению-предку в иерархии.","\t * @param\targ\t\tНомер в иерархии или тип контроллера.","\t * \t\t\t\t\tЕсли аргумент не задан считается что был передан номер в иерархии равный 1.","\t * \t\t\t\t\tЕсли был передан тип контроллера, то будет найден первый контроллер заданного типа.","\t * @return\t\t\tОбъект представления или пустой объект {}.","\t */","\tthis.getParent = function(arg){","\t\tvar obj = this.ctrl.getParent(arg);","\t\tif(obj.views){","\t\t\tobj = obj.views[this.viewInx];","\t\t}","\t\treturn obj;","\t}","","\t/** Простой доступ к любому представлению-потомку в иерархии.","\t*   @param\targuments\tМассив аргументов - массив индексов для доступа в массив children","\t*   @type\tObject","\t*   @return\t\t\t\tОбъект представления или пустой объект {}","\t*/","\tthis.getChild = function(){","\t\tvar obj = this.ctrl.getChild.apply(this.ctrl, arguments);","\t\tif(obj.views){","\t\t\tobj = obj.views[this.viewInx];","\t\t}","\t\treturn obj;","\t}","","\tif(!options.plainIface){","\t\tvar children = this.ctrl.children;","\t\tvar child;","\t\tfor(var i in children){","\t\t\tchild = children[i];","\t\t\tif(child instanceof jsController){","\t\t\t\tchild.changeIface(viewInx, this, this.options);","\t\t\t}","\t\t}","\t}","\t\t","\t/**Вызов валидаторов детей и запуск события validate.<br>","\t * statusCode устанавливается методами validate","\t * производного класса, которые должны вызывать в КОНЦЕ работы","\t * validate базового класса.","\t * statusCode должен являеться ключём глобального объекта lang.","\t * @type\tbool","\t * @return\tfalse - содержимое неких полей не корректно.","\t * \t\t\ttrue - содержимое неких полей корректно.","\t */","\tjsView.prototype.validate = function(){","\t\tvar res = !this.statusCode;","\t\tvar obj = null;","\t\tvar children = this.ctrl.children;","\t\tif(children.length){","\t\t\tfor(var i in children){","\t\t\t\tobj = this.getChild(i);","\t\t\t\tif(obj instanceof jsView){","\t\t\t\t\tres &= obj.validate();","\t\t\t\t}","\t\t\t}","\t\t}","\t\treturn res;","\t};","","\t/**Установить опцию.","\t * @param \tname\tИмя.","\t * @param\tvalue\tЗначение.","\t */","\tjsView.prototype.setOption = function(name, value){","\t\tvar children = this.ctrl.children;","\t\tvar child;","","\t\tthis.options[name] = value;","\t\tfor(var i=0;i<children.length;i++){","\t\t\tchild = this.getChild(i);","\t\t\tif(child instanceof jsView)\tchild.setOption(name, value);","\t\t}","\t\t","\t}","\t","\t/**Код ошибки выявленной валидатором. Он должен являеться ключём глобального объекта lang.*/","\tthis.statusCode = null;","}","","/**Создаёт новый экземпляр класса jsController"," * @class Представляет базовую функциональность контроллера."," * @constructor"," */ ","function jsController(){","","\t/**Добавить интерфейс.<br>","\t * Эта функция всего лиш обёртка чтобы добавлять интерфейс в более привычной форме.","\t * @param\t{jsView}\t\tparentView - родительское представление, конструктор которого ещё не вернул управление, ","\t * \t\t\t\t\t\t\tпотому нельзя брать через this.ctrl.parent.","\t * @param\t{Object}\t\tparentOptions Опции родительского представления.","\t * @type\tint","\t */","\tthis.addIface = function(parentView, parentOptions){","//\t\tvar viewInx = this.views.length;","\t\tvar viewInx = window.getUID();","\t\tthis.changeIface(viewInx, parentView, parentOptions);","\t\treturn viewInx;","\t}","","\t/**Вычеркнуть интерфейс из списка.","\t * @param\t{int}\tviewInx\tИндекс представления в массиве представлений.","\t */","\tthis.unlinkIface = function(viewInx){","\t\tvar children = this.children;","\t\tvar handlers = this.handlers;","\t\tvar child;","\t\tfor(var i in children){","\t\t\tchild = children[i];","\t\t\tif(child instanceof jsController){","\t\t\t\tchild.unlinkIface(viewInx);","\t\t\t}","\t\t}","\t\tthis.views[viewInx] = null;","\t\t//удалить хандлеры для этого интерфейса","\t\t//TODO: добавить это в тесты","\t\tfor(var i in handlers){","\t\t\thandlers[i][viewInx] = null;","\t\t}","\t}","","\t/**Изменить интерфейс на интерфейс другого типа.","\t * Кроме аргументов на работу метода влияет поле nextIface, которое является ключём","\t * в объекте ifaceTypes. Если nextIface == null, то метод пытается найти представление","\t * имеющего ближайшего общего предка с типом parentView. Чтобы прервать создание интерфейса","\t * на этом контроллере надо установить nextIface в значение, которого нет ifaceTypes.","\t * @param\t{int}\t\tviewInx\t\t\tИндекс представления в массиве представлений.","\t * @param\t{jsView}\tparentView\t\tРодительское представление, конструктор которого ещё не вернул управление, ","\t * \t\t\t\t\t\t\t\t\t\tпотому нельзя брать через this.ctrl.parent.","\t * @param\t{Object}\tparentOptions\tОпции родительского представления.","\t * \t\t\t\t\t\t\t\t\t\tМетод осуществляет наследование опции родительского представления.","\t */","\tthis.changeIface = function(viewInx, parentView, parentOptions){","\t\tvar options = new Object();","\t\tvar pOptions = parentOptions?parentOptions:{};","\t\tvar integrate = null;","\t\t","\t\t","\t\tif(this.nextIface){","\t\t\tiface = this.ifaceTypes[this.nextIface];","\t\t\tthis.lastIface = this.nextIface;","\t\t\tthis.nextIface = null;","\t\t\tif(iface){","\t\t\t\t$.extend(options, pOptions, iface.options?iface.options:{});","\t\t\t\tthis.views[viewInx] = new iface.type(this, viewInx, options);","\t\t\t}","\t\t}","\t\telse{","\t\t\tif(this.parent){","//\t\t\t\tif(this.constructor == this.parent.constructor){","\t\t\t\tif(false){","\t\t\t\t\t//наследование в смысле DOM происходит только в случае если контроллер this","\t\t\t\t\t//имеет тот-же тип или является производным от this.parent","\t\t\t\t\t//это упрощённый вариант","\t\t\t\t\t//TODO: чтобы можно было взять отдельно опции конструкторов представлений каждого базового класса","\t\t\t\t\t//      в этом случае можно наследовать от this.parent только опции общих предков","\t\t\t\t\tthis.views[viewInx] = new parentView.constructor(this, viewInx, parentView.options);","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\t//если наследования в смысле DOM не получилось,","\t\t\t\t\t//создаём интерфейс по умолчанию имеющий ближайшего общего предка с типом parentView","\t\t\t\t\tancestors1 = parentView.getAncestry();","\t\t\t\t\tiface = null;","\t\t\t\t\tifaceTypes = this.ifaceTypes;","\t\t\t\t\tfor(var i=ancestors1.length-1;i>=0;i--){","\t\t\t\t\t\tancestor1 = ancestors1[i];","\t\t\t\t\t\tcmin = 1000000;","\t\t\t\t\t\tjj = -1;","\t\t\t\t\t\tfor(var j in ifaceTypes){","\t\t\t\t\t\t\tancestors2 = ifaceTypes[j].type.prototype.getAncestry();","\t\t\t\t\t\t\tinx = $.inArray(ancestor1, ancestors2);","\t\t\t\t\t\t\tif(inx >= 0){","\t\t\t\t\t\t\t\tccur = ancestors2.length - 1 - inx;","\t\t\t\t\t\t\t\tif(ccur <= cmin){","\t\t\t\t\t\t\t\t\tif(ccur == cmin){","\t\t\t\t\t\t\t\t\t\tif(ifaceTypes[j].def){","\t\t\t\t\t\t\t\t\t\t\tiface = ifaceTypes[j];","\t\t\t\t\t\t\t\t\t\t}","\t\t\t\t\t\t\t\t\t}","\t\t\t\t\t\t\t\t\telse{","\t\t\t\t\t\t\t\t\t\tiface = ifaceTypes[j];","\t\t\t\t\t\t\t\t\t\tcmin = ccur;","\t\t\t\t\t\t\t\t\t}","\t\t\t\t\t\t\t\t}","\t\t\t\t\t\t\t}","\t\t\t\t\t\t}","\t\t\t\t\t\tif(iface) break;","\t\t\t\t\t}","\t\t\t\t\tif(iface){","\t\t\t\t\t\t$.extend(options, pOptions, iface.options?iface.options:{});","\t\t\t\t\t\tthis.views[viewInx] = new iface.type(this, viewInx, options);","\t\t\t\t\t}","\t\t\t\t}","\t\t\t}","\t\t}","\t}","\t","\t","","\t/**Изменить дочерний объект на другой дочерний объект.","\t * @param\t{int}\t\t\tchildInx\tИндекс дочернего объекта.","\t * @param\t{jsController}\tchildObj\tДочерний объект.","\t * @param\t{String}\t\talias\t\tПсевдоним объекта.","\t * @type\tjsController","\t * @return\tСозданный объект.","\t */","\tthis.changeChild = function(childInx, childObj, alias){","\t\tthis.children[childInx] = childObj;","\t\tchildObj.integrate(childInx, this);","\t\tif(alias) this.children[childInx].setAlias(alias);","\t\tif(this.active && !childInx && this.activateToBottom) childObj.activate();","\t\treturn childObj;","\t}","","\t/**Установить псевдоним контроллеру по которому к нему будет можно обращаться вместо индекса в массиве children.","\t * @param\t{String}\talias\tПсевдоним.","\t */","\tthis.setAlias = function(alias){","\t\tthis.alias = alias;","\t\tif(this.parent){","\t\t\tthis.parent.children_refs[alias] = this;","\t\t}","\t}","\t","\t/**Добавить дочерний объект.","\t * @param\targuments\tМассив аргументов интерпретируется методом по разному.","\t * \t\t\t\t\t\tobj1, obj2, ... - массив дочерних объектов.","\t * \t\t\t\t\t\tЗа obj может следовать строка-псевдоним, например:","\t * \t\t\t\t\t\tobj1, alias1, obj2, alias2, ...","\t * \t\t\t\t\t\tА в таком случае obj1 будет иметь alias3:","\t * \t\t\t\t\t\tobj1, alias1, alias2, alias3","\t * @type\tjsController","\t * @return\t\t\t\tПервый добавленный объект.","\t */","\tthis.addChild = function(){","\t\tvar j = -1;","\t\tfor(var i=0;i<arguments.length;i++){","\t\t\tif(arguments[i] instanceof jsController){","\t\t\t\tj = this.children.length;","\t\t\t\tthis.changeChild(j, arguments[i]);","\t\t\t}","\t\t\telse if(j >= 0){","\t\t\t\tvar obj = this.getChild(j);","\t\t\t\tvar alias = arguments[i];","\t\t\t\tobj.setAlias(alias);","\t\t\t}","\t\t}","\t\treturn arguments[0];","\t}","","\t/**Изменить объект модели на другой объект.","\t * @param\t{Object}\tmodelObj\tОбъект модели.","\t */","\tthis.changeModel = function(modelObj){","\t\tthis.model = modelObj;","\t\tthis.model.ctrl = this;","\t}","","\t/**Сбросить активный дочерний контроллер, если таковой есть.","\t * По фактической деактивации контроллера запускается событие \"deactivate\".","\t * Когда контроллер отмечается для деактивации запускается событие \"predeactivate\".","\t * Эти 2 события отличаются направлением распространения:","\t * deactivate - снизу вверх,","\t * predeactivate - сверху вниз.","\t * Если бы deactivate распространялось сверху вниз, то получилось бы что у нективного ","\t * контроллера есть активные потомки, а это противоречит логике библиотеки.","\t */","\tthis.deactivateChild = function(){","\t\tif(this.childActiveInx >= 0){","\t\t\tvar child = this.children[this.childActiveInx];","\t\t\tif(!child.root){","\t\t\t\tchild.event(\"predeactivate\");","\t\t\t\tchild.deactivateChild();","\t\t\t\tchild.active = false;","\t\t\t\tchild.activatedByIface = null;","\t\t\t\tthis.childActiveInx = -1;","\t\t\t\tchild.event(\"deactivate\");","\t\t\t}","\t\t}","\t}","","\t/**Удалить дочерний контроллер.","\t * Дочерний объект удаляется из children и children_refs, если есть псевдоним.","\t * Причём объект именно удаляется а не устанавливается в null.","\t * @param\tid\tИдентификатор дочернего объекта.","\t * \t\t\t\tЗадаётся либо как индекс, либо как псевдоним.","\t */","\tthis.unlinkChild = function(id){","\t\tif(parseInt(id, 10).toString() != \"NaN\"){","\t\t\t//Это индекс","\t\t\tvar alias = this.children[id].alias;","\t\t\tthis.children.splice(id, 1);","\t\t\tif(alias){","\t\t\t\tdelete this.children_refs[alias];","\t\t\t}","\t\t\tif(this.childActiveInx == id) this.childActiveInx = -1;","\t\t}","\t\telse{","\t\t\t//Это псевдоним","\t\t\tvar inx = this.getInxByAlias(id);","\t\t\tthis.children.splice(inx, 1);","\t\t\tdelete this.children_refs[id];","\t\t\tif(this.childActiveInx == inx) this.childActiveInx = -1;","\t\t}","\t}","","\t/**Сделать контроллер активным.","\t * По фактической активации контроллера запускается событие \"activate\".","\t * Когда контроллер отмечается для активации запускается событие \"preactivate\".","\t * Эти 2 события отличаются направлением распространения:","\t * activate - сверху вниз,","\t * preactivate - снизу вверх.","\t * Если бы activate распространялось снизу вверх, то получилось бы что у активного ","\t * контроллера есть нективные предки, а это противоречит логике библиотеки.","\t * @param\t{bool}\tforce\tАктивировать не спросив родителя.","\t */","\tthis.activate = function(force){","\t\tthis.event(\"preactivate\");","\t\tif(!force){","\t\t\tif(this.parent && !this.root){","\t\t\t\tif(this.parent.active){","\t\t\t\t\tthis.parent.deactivateChild();","\t\t\t\t\tthis.parent.childActiveInx = this.thisInx;","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\tthis.parent.childActiveInx = this.thisInx;","\t\t\t\t\tthis.parent.activatedByIface = this.activatedByIface;","\t\t\t\t\tthis.parent.activate();","\t\t\t\t}","\t\t\t}","\t\t}","\t\tthis.active = true;","\t\tthis.event(\"activate\");","","\t\tif(this.childActiveInx < 0){","\t\t\tif(this.activateToBottom){","\t\t\t\tif(this.children.length){","\t\t\t\t\tthis.children[0].activatedByIface = this.activatedByIface; ","\t\t\t\t\tthis.children[0].activate(true);","\t\t\t\t\tthis.childActiveInx = 0;","\t\t\t\t}","\t\t\t}","\t\t}","\t\telse if(this.children[this.childActiveInx].active && !this.activateToBottom){","\t\t\tthis.deactivateChild();","\t\t}","\t}","","\t/**Запустить событие.<br>","\t * Обработчик должен вернуть true, чтобы событие всплыло.","\t * @param\t{String}\teventType\tТип события.","\t * @param\t{Object}\teventObject\tОбъект события.","\t * @param\t{bool}\t\tbubble\tВсплывать даже если нет обработчиков.","\t */","\tthis.event = function(eventType, eventObject, bubble){","\t\tvar handlers;","\t\tvar parent;","\t\tvar handler;","\t\tvar res = true;","\t\t","\t\t//вызываем обработчики контроллера","\t\thandlers = this.ctrlHandlers[eventType];","\t\tif(handlers instanceof Array){","\t\t\tfor(var i in handlers){","\t\t\t\thandler = handlers[i];","\t\t\t\tif(handler instanceof Function){","\t\t\t\t\tres &= handlers[i].call(this, eventObject);","\t\t\t\t\tbubble = true;","\t\t\t\t}","\t\t\t}","\t\t}","","\t\t//вызываем обработчики представлений.","\t\t//Может быть только один обработчик на представление.","\t\thandlers = this.handlers[eventType];","\t\tif(handlers){","\t\t\tfor(var i in handlers){","\t\t\t\thandler = handlers[i];","\t\t\t\tif(handler instanceof Function){","\t\t\t\t\tres &= handlers[i].call(this.views[i], eventObject);","\t\t\t\t\tbubble = true;","\t\t\t\t}","\t\t\t}","\t\t}","","\t\t//всплытие","\t\tif(res && bubble){","\t\t\tparent = this.getParent();","\t\t\tif(parent instanceof jsController){","\t\t\t\tparent.event(eventType, eventObject, bubble);","\t\t\t}","\t\t}","\t}","","","\t/**Добавить обработчик события.<br>","\t * Это низкоуровневая функция добавления обработчика события контроллера.","\t * Если нужно добавить обработчик представлению, пользуйтесь её фронтэндом их jsView - bind.","\t * Если нужно добавить обработчик контроллера можно использовать функцию напрямую.","\t * При добавлении обработчика в контроллер возможно добавить их несколько. Такую фичу планируется","\t * сделать также и для обработчиков в представлениях.","\t * @see\t\tjsView#bind","\t * @param\t{String}\teventType\tТип события.","\t * @param\t{int}\t\tviewInx\t\tИндекс представления. Если параметр не передан, обработчик добавляется самому контроллеру.","\t * @param\t{Function}\thandler\t\tОбработчик.","\t */","\tthis.addEventHandler = function(eventType, handler, viewInx){","\t\tif(no(eventType) || no(handler)) return;","\t\tif(!no(viewInx)){","\t\t\tif(!this.handlers[eventType]){","\t\t\t\tthis.handlers[eventType] = new Array();","\t\t\t}","\t\t\tthis.handlers[eventType][viewInx] = handler;","\t\t}","\t\telse{","\t\t\tif(!(this.ctrlHandlers[eventType] instanceof Array)){","\t\t\t\tthis.ctrlHandlers[eventType] = [];","\t\t\t}","\t\t\tthis.ctrlHandlers[eventType].push(handler);","\t\t}","\t}","\t","\t/**Простой доступ к любому контроллеру-предку в иерархии.","\t * @param\targ\t\tНомер в иерархии или тип контроллера.","\t * \t\t\t\t\tЕсли аргумент не задан считается что был передан номер в иерархии равный 1.","\t * \t\t\t\t\tЕсли был передан тип контроллера, то будет найден первый контроллер заданного типа.","\t * @type\t\tObject","\t * @return\tОбъект контроллера или пустой объект {}","\t */","\tthis.getParent = function(arg){","\t\tvar type;","\t\tvar i;","\t\tif(arg instanceof Object){","\t\t\ti = -1;","\t\t\ttype = arg;","\t\t\tobj = this;","\t\t\twhile(i){","\t\t\t\ti--;","\t\t\t\tobj = obj.parent;","\t\t\t\tif(no(obj)){","\t\t\t\t\tobj = {};","\t\t\t\t\tbreak;","\t\t\t\t}","\t\t\t\tif(type && obj instanceof type) break;","\t\t\t}","\t\t}","\t\telse{","\t\t\ti = no(arg)?1:arg;","\t\t\tobj = this;","\t\t\twhile(i && !no(obj.parent)){","\t\t\t\ti--;","\t\t\t\tobj = obj.parent;","\t\t\t}","\t\t\tif(i > 0) obj = {};","\t\t}","\t\treturn obj;","\t}","\t","\t/**Простой доступ к любому контроллеру-потомку в иерархии.","\t * @param\targuments\tМассив аргументов - массив индексов для доступа в массив children.","\t * \t\t\t\t\t\tЕсли аргументов нет, то берётся 1ый потомок в иерархии.<br>","\t *       \t\t\t\tПример 1:<br>","\t * \t\t   \t\t\t\t\t<code>obj = getChild();</code>","\t * \t\t\t\t\t\t\tаналогично","\t * \t\t\t\t\t\t\t<code>obj = this.children[0];</code><br>","\t * \t\t\t\t\t\tПример 2:<br>","\t * \t\t\t\t\t\t\t<code>obj = getChild(0, 5, 3);</code>","\t * \t\t\t\t\t\t\tаналогично","\t * \t\t\t\t\t\t\t<code>obj = this.children[0].children[5].children[3];</code>","\t * @type\tObject","\t * @return\tОбъект контроллера или пустой объект {}","\t */","\tthis.getChild = function(gen){","\t\tvar l = arguments.length;","\t\tvar obj;","\t\tvar j;","\t\tif(!l){","\t\t\tobj = this.children[0];","\t\t}","\t\telse{","\t\t\tobj = this;","\t\t\tfor(var i=0;i<l;i++){","\t\t\t\tj = arguments[i];","\t\t\t\tif(parseInt(j).toString() == \"NaN\"){","\t\t\t\t\tobj = obj.children_refs[j];","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\tobj = obj.children[j];","\t\t\t\t}","\t\t\t\tif(!obj) break;","\t\t\t}","\t\t}","\t\tif(!obj) obj = {};","\t\treturn obj;","\t}","","\t/**Получить индекс ребёнка по его псевдониму.","\t * @param\t{String}\talias\tПсевдоним дочернего объекта.","\t * @type\tint","\t * @return\t\t\t\t\t\tИндекс объекта в массиве children родителя.","\t */","\tthis.getInxByAlias = function(alias){","\t\tvar children = this.children;","\t\tvar inx = null;","\t\tvar child;","\t\t","\t\tfor(var i in children){","\t\t\tchild = children[i];","\t\t\tif((child instanceof jsController) && child.alias == alias){","\t\t\t\tinx = i;","\t\t\t\tbreak;","\t\t\t}","\t\t}","\t\t","\t\treturn inx;","\t}","\t","\t/**Встроить контроллер в иерархию","\t * @param\t{int}\t\tchildInx\tИндекс объекта в массиве children родителя.","\t * @param\t{jsController}\tparent\t\tРодитель.","\t */","\tjsController.prototype.integrate = function(childInx, parent){","\t\tthis.thisInx = childInx;","\t\tthis.parent = parent;","\t\tthis.activateToBottom = parent.activateToBottom;","\t}","","\t/**Описать потомков с помощью массива или объекта специального формата.","\t * Также описываются опции и название следующего интерфейса который будет создан.","\t * Метод используется для упрощения процесса создания web форм, т.к. контроллеры и опции представления указываются в одном месте.","\t * Если требуется более одного интерфейса/представления, можно, например, в конструкторе 2го представления проставить nextIface потомков","\t * и изменить опции требующие изменения \"вручную\".","\t * Контроллеры потомков 2ой раз создаваться не будут.","\t * @param {Object}\tobj\tМассива или объект описания потомков специального формата.","\t * \t\t\t\t\t\tмассив:","\t * \t\t\t\t\t\t\t\t[","\t * \t\t\t\t\t\t\t\t\t{","     * \t\t\t\t\t\t\t\t\t\tctrl: <объект контроллера>,","     * \t\t\t\t\t\t\t\t\t\tnextIface: <название следующего создаваемого интерфейса>,","     * \t\t\t\t\t\t\t\t\t\toptions: {...},","     * \t\t\t\t\t\t\t\t\t\talias: <псевдоним контроллера>","     * \t\t\t\t\t\t\t\t\t},","     * \t\t\t\t\t\t\t\t\t...","     * \t\t\t\t\t\t\t\t]","     * \t\t\t\t\t\tобъект:","     * \t\t\t\t\t\t\t\t{","\t *\t\t\t\t\t\t\t\t\t<alias>: {","\t * \t\t\t\t\t\t\t\t\t\tctrl: <объект контроллера>,","\t * \t\t\t\t\t\t\t\t\t\tnextIface: <название следующего создаваемого интерфейса>,","\t *                                      options: {...},","\t * \t\t\t\t\t\t\t\t\t\tinx: <индекс потомка>","\t * \t\t\t\t\t\t\t\t\t},","\t * \t\t\t\t\t\t\t\t\t...","\t * \t\t\t\t\t\t\t\t}","\t */","\tjsController.prototype.describe = function(obj){","\t\tvar child;","\t\tvar item;","\t\tvar typeParser;","\t\tvar children;","\t\tvar children_refs;","\t\tfor(var i in obj){","\t\t\ttypeParser = controlTypes[obj[i].type];","\t\t\tif(typeParser) typeParser(obj[i]);","\t\t\tif(obj instanceof Array){","\t\t\t\tchild = this.getChild(obj[i].alias);","\t\t\t\tif(!(child instanceof jsController)){","\t\t\t\t\tchild = this.addChild(obj[i].ctrl, obj[i].alias);","\t\t\t\t}","\t\t\t}","\t\t\telse{","\t\t\t\tchild = this.getChild(obj[i].inx);","\t\t\t\tif(!(child instanceof jsController)){","\t\t\t\t\tchild = this.changeChild(obj[i].inx, obj[i].ctrl, i);","\t\t\t\t}","\t\t\t}","\t\t\tchild.nextIface = obj[i].nextIface;","\t\t\tif(obj[i].options && child.nextIface && child.ifaceTypes[child.nextIface]){","\t\t\t\tvar srcOpt = child.ifaceTypes[child.nextIface].options;","\t\t\t\tsrcOpt = srcOpt?srcOpt:{};","\t\t\t\tchild.ifaceTypes[child.nextIface].options = $.extend(true, srcOpt, obj[i].options);","\t\t\t}","\t\t\t//Рекурсия","\t\t\tif(obj[i].children_refs){","\t\t\t\tchildren_refs = obj[i].children_refs;","\t\t\t\tobj[i].children = [];","\t\t\t\tchildren = obj[i].children;","\t\t\t\tfor(var j in children_refs){","\t\t\t\t\tchildren[children_refs[j].inx] = children_refs[j];","\t\t\t\t\tchildren[children_refs[j].inx].alias = j;","\t\t\t\t}","\t\t\t}","\t\t\tif(obj[i].children){","\t\t\t\tthis.getChild(i).describe(obj[i].children);","\t\t\t}","\t\t}","\t}","\t","\t/**Объявление интерфейсов контроллера.","\t * Класс jsController не имеет интерфейсов.","\t * Интерфейсы объявляются в производных классах","\t * следующим образом:","\t * <code>","\t * ifname: {type:jsSomeViewClass, options:optionsObject}","\t * </code>","\t */","\tthis.ifaceTypes = {","//\t\ttreeFrame: {type:jsViewTree}","\t}","","\t/**Привилегия.<br>","\t * Позволяет или запрещает определённые действия как правило путём изменения","\t * внешнего вида представлений клиентской стороны.","\t * На самом деле что-то запретить javascript'ом по настоящему невозможно,","\t * поэтому данное свойство лиш делает адекватным внешний вид представлений,","\t * а для ограничения доступа должны быть задействованы серверные механизмы.","\t * По умолчанию даны привилегии администратора.","\t */","\tjsController.prototype.privilege = \"admin\";","","\t/**Массив дочерних объектов. Тип Array используется что сохранить порядок элементов в списке.","\t * @type\tArray ","\t */","\tthis.children = new Array();","\t/**Cсылки на детей для быстрого доступа по псевдонимам*/","\tthis.children_refs = new Object();","\t/**Ссылка на родительский объект","\t */","\tthis.parent = null;","\t/**Экземпляр модели","\t * @type jsModel","\t */","\tthis.model = null;","\t/**Массив представлений.<br> ","\t * Представления разных уровней иерархии с одинаковым индексом в этом массиве","\t * образуют интерфейс.","\t * @see #changeIface","\t * @type Array","\t */","\tthis.views = new Array();","\t/**URL сервера.<br> ","\t * Имеет смысл устанавливать только для \"гостевых\" контроллеров.","\t * при интеграции вебинтерфейсов разных устройств,","\t * но данная возможность ещё использовалась и не проверялась.","\t */","\tthis.serverUrl = null;","\t/**Признак того, что контроллер активный.","\t * Это некий аналог фокуса.","\t * @type bool","\t */","\tthis.active = false;","\t/**Устанавливается представлением, из которого активировали контроллер.","\t * Если контроллер активирован программно, то activatedByIface = null.","\t */","\tthis.activatedByIface = null;","\t/**Индекс активного дочернего объекта.","\t * @type int","\t */","\tthis.childActiveInx = -1;","\t/**Индекс контроллера в массиве this.parent.children.","\t * @type int","\t */","\tthis.thisInx = 0;","\t/**Массив обработчиков событий (для контроллера). Исполняются перед обработчиками в this.handlers.","\t * Имя события 1: массив обработчиков.","\t * Для одного события может быть несколько обработчиков.","\t * @type Array","\t */","\tthis.ctrlHandlers = {};","\t/**Двумерный массив обработчиков событий (для представлений)","\t * Имеет структуру:","\t * Имя события 1: массив представлений.","\t * Имя события 2: массив представлений.","\t * Номер в массиве представлений соответствует индексу в this.views, т.е. номеру интерфейса.","\t * Для одного события может быть только один обработчик в одном представлении.","\t * @type Array","\t */","\tthis.handlers = new Array();","\t/**Активировать дочерние объекты","\t */","\tthis.activateToBottom = true;","\t/**Ключ в ifaceTypes, который задаёт this.parent когда хочет жёстко определить интерфейсы своих детей","\t * @type String","\t */","\tthis.nextIface = null;","\t/**Последний, nextIface.","\t * @type String","\t */","\tthis.lastIface = null;","\t/**Общее количество интерфейсов для всех контроллеров. ","\t * Инкрементируется и используется только в корневом контроллере.","\t * @type int","\t */","\tthis.totalIfaceCount = 0;","\t/**Псевдоним контроллера.","\t * По этому псевдониму контроллер можно найти в this.children_refs родителя.","\t * @type String","\t */","\tthis.alias = null;","\t/**Признак корневого контроллера.","\t * Два разных корневых контроллера имеют независимую логику выбора активных контроллеров.","\t * Снятие признака \"нагорячую пока не поддерживается\".","\t * @type bool","\t */","\tthis.root = false;","}","","","/**Создаёт новый экземпляр класса jsSSideView"," * @class \t\t\t\t\t\t\tПредставляет базовую функциональность представлений серверной стороны"," * @constructor"," * @param\t{int}\t\t\tviewInx\tИндекс интерфейса, к которому будет принадлежать представление."," * @param\t{jsController}\tctrl\tСсылка на контроллер."," * @param\t{Object}\t\toptions\tОпции представления."," * \t\t\t\t\t\t\t\t\tjsSSideView принимает следующие опции:<br>"," * \t\t\t\t\t\t\t\t\taction - то-же что и action в HTML форме.<br>"," * \t\t\t\t\t\t\t\t\tmethod - то-же что и method в форме.<br>"," * \t\t\t\t\t\t\t\t\tdataType - установить в \"json\", если надо преобразовать данные перед отправкой в JSON строку."," */","function jsSSideView(ctrl, viewInx, options){","\toptions = options?options:{};","\tif(options.action){","\t\t/**Считать это представление отправителем ","\t\t * в отличие от других представлений интерфейса, которые","\t\t * просто добавляют свои данные в запрос.","\t\t * @type jsSSideView","\t\t */","\t\tthis.sender = this;","\t\toptions.sender = this;","\t\t/**То-же что и action в HTML форме.","\t\t * Дублирует соотв. опцию наследование которой прерывается.","\t\t * @type String","\t\t */","\t\tthis.action = options.action;","\t\toptions.action = null;","\t}","\telse{","\t\tthis.sender = options.sender;","\t}","\tif(options.method){","\t\t/**То-же что и method в HTML форме.","\t\t * Дублирует соотв. опцию наследование которой прерывается.","\t\t * @type String","\t\t */","\t\tthis.method = options.method;","\t\toptions.method = null;","\t}","\tjsSSideView.superclass.constructor.call(this, ctrl, viewInx, options);","\t","\t/**Обработка полученных с сервера данных.","\t * 1. Инициализации this.responseData пришедшими данными.","\t * 2. Обновление модели детей.","\t * 3. Вызов метода checkServerData корневого контроллера если он существует.","\t * \t\tcheckServerData принимает как аргумент данные принятые от сервера и возвращает bool:","\t * \t\ttrue - продолжить обработку принятых данных,","\t * \t\tfalse - отменить обработку принятых данных.","\t * См. <a href='http://api.jquery.com/ajaxSuccess/'></a>","\t * @param\t{Object}\tdata\t\tДанные.","\t * @param\t{String}\ttextStatus\tТекстовое описание статуса.","\t */","\tthis.sendSuccess = function(data){","\t\tthis.xmlhttprequest = null;","\t\ttry{","\t\t\tif(data){","\t\t\t\tthis.responseData = data;","\t\t\t}","\t\t\telse{","\t\t\t\tthis.responseData={};","\t\t\t}","\t\t\tif(!this.rootCtrl){","\t\t\t\tthis.rootCtrl = window.rootCtrl; //this.ctrl.getParent(-1);","\t\t\t}","\t\t\tif(this.rootCtrl.checkServerData instanceof Function){","\t\t\t\tif(!this.rootCtrl.checkServerData(this.responseData)){","\t\t\t\t\treturn;","\t\t\t\t}","\t\t\t}","\t\t}","\t\tcatch(e){","\t\t\tthis.responseData={baddata:true};","\t\t}","\t\tthis.updateModel(true);","\t\tif(this.refreshTime > 0){","\t\t\tthis.refreshId = setTimeout(context(this).callback(this.updateView), this.refreshTime);","\t\t}","\t\t","\t}","\t","\t/**Отослать данные серверу и/или подготовить их к отправке.","\t * Отсылает данные только тот у кого установлен this.action.","\t * Все остальные только подготавливают данные к отправке собирая из строке requestData отправителя,","\t * для чего в серверных представлениях имеется ссылка на отправителя this.sender.","\t * Все представления, которые имеют что сказать серверу, должны определить метод prepareData.","\t * Метод prepareData дописывает в конец строки requestData свои параметры в виде \"name1=val1&name2=val2...\".","\t */","\tthis.updateView = function(){","\t\tif(this.action) this.requestData = null;\t//сброс данных предыдующего запроса","\t\tif(this.prepareData instanceof Function) this.prepareData(); ","\t\tjsSSideView.superclass.updateView.call(this);","\t\tif(this.action && !window.isIdle)\tthis.sendRequest();","\t}","\t","\t/**Запрещает вызов updateModel детей (не вызывая метод базового класса) для класса который","\t * делал запрос к серверу если вызов updateModel инициировало не это представление,","\t * для этого sendSuccess должен вызвать updateModel(true).","\t * Все представления, которым есть что взять от сервера, должны определить метод pickData.","\t * @param\t{bool}\tforce\tНе запрещать обновление модели и погружение в иерархию.","\t * @type\tbool","\t * @return\t\t\t\t\tРезультат обновления модели.","\t * @see\tjsView#updateModel","\t */","\tthis.updateModel = function(force){","\t\tif((this.action && force) || !this.action){","\t\t\tif(this.pickData instanceof Function) this.pickData();","\t\t\treturn jsSSideView.superclass.updateModel.call(this);","\t\t}","\t\treturn true;","\t}","\t","\t/**Осуществляет запрос к серверу.","\t * Также он вызывает метод checkClientData корневого контроллера если он существует.","\t * \t\tcheckClientData принимает как аргумент данные для отправки на сервер и возвращает изменённые данные.","\t * \t\tЕсли checkClientData ничего не возвращает - отправка данных отменяется.","\t */","\tthis.sendRequest = function(){","\t\tvar url = ctrl.serverUrl?ctrl.serverUrl:\"\";","\t\t$(window).bind(\"ajaxError\", context(this).callback(this.onajaxerror));","\t\tthis.requestData += \"&proxy=y\";","\t\tif (mode_emul) {","\t\t\tvar action = this.action.toString();","\t\t\tvar url = CGI_URL;","\t\t\tvar patt = /index.cgi$/;","\t\t\tif (!patt.test(action)) {","\t\t\t\turl = url.replace('index.cgi', '');","\t\t\t\turl += action;","\t\t\t}","\t\t\tdevice.request(url, this.method, this.requestData, context(this).callback(this.sendSuccess));","\t\t} else {","\t\t\tdevice.request(url + \"/\" + this.action, this.method, this.requestData, context(this).callback(this.sendSuccess));","\t\t}","//\t\tdevice.request(CGI_URL, this.method, this.requestData, context(this).callback(this.sendSuccess));","/*\t\tif(this.method == \"post\"){","\t\t\tthis.xmlhttprequest = $.post(url + \"/\" + this.action, this.requestData, context(this).callback(this.sendSuccess));","\t\t}","\t\telse{","\t\t\tthis.xmlhttprequest = $.get(url + \"/\" + this.action, this.requestData, context(this).callback(this.sendSuccess));","\t\t}*/","\t}","\t","\t/**Обработчик события ajaxError.","\t * См. <a href='http://api.jquery.com/ajaxError/'></a>","\t * Внимание!!! Должен вызываться в контексте представления","\t */","\tthis.onajaxerror = function(){","\t\tvar isItMyError = this.xmlhttprequest &&","\t\t\t\t\t\tthis.xmlhttprequest.readyState == 4 &&","\t\t\t\t\t\tthis.xmlhttprequest.status != 200;","\t\tif(isItMyError) this.xmlhttprequest = null;","\t\tif(isItMyError && this.refreshTime > 0 && !this.stopOnAjaxError){","\t\t\tthis.refreshId = setTimeout(context(this).callback(this.updateView), this.refreshTime);","\t\t}","\t}","","\t/**Пребразовать javascript объект в строку запроса this.sender.requestData.","\t * Также он вызывает метод checkClientData корневого контроллера если он существует.","\t * checkClientData принимает как аргумент данные для отправки на сервер и возвращает изменённые данные.","\t * В отличие от checkServerData checkClientData не может отменить отправку данных.","\t * Если установлена опция \"json\", то данные перед отправкой преобразовываются в JSON строку.","\t * Эта опция требует наличия jquery плагина <a href = 'http://code.google.com/p/jquery-json/'>jquery.json</a>.","\t * @param\t{Object}\tobj\tObject или Array (ассоциативный)","\t */","\tthis.addToRequest = function(obj){","\t\tvar sender = this.sender;","\t\tvar splitter = '';","\t\t","\t\tif(this.options.dataType && this.options.dataType == \"json\"){","\t\t\tsender.requestData = $.toJSON(obj);","\t\t}","\t\telse{","\t\t\tif(!sender.requestData){","\t\t\t\tsplitter = \"\";","\t\t\t\tsender.requestData = \"\";","\t\t\t}","\t\t\telse{","\t\t\t\tsplitter = \"&\";","\t\t\t}","\t\t","\t\t\tif(!this.rootCtrl){","\t\t\t\tthis.rootCtrl = window.rootCtrl; //this.ctrl.getParent(-1);","\t\t\t}","\t\t\tfor(var key in obj){","\t\t\t\tif(this.rootCtrl.checkClientData instanceof Function){","\t\t\t\t\tobj[key] = this.rootCtrl.checkClientData(obj[key]);","\t\t\t\t}","\t\t\t\tsender.requestData += splitter + key + \"=\" + obj[key];","\t\t\t\tsplitter = \"&\";","\t\t\t}","\t\t}","\t}","","\t/**Запустить обновление после задержки delay.","\t * @param\t{int}\tdelay\t\t\tНачальная задержка в милисекундах.","\t * @param\t{int}\tperiod\t\t\tПериод обновления:  >0 - время в милисекундах, 0 - отключен.","\t * @param\t{bool}\tstopOnAjaxError\tОстановить обновление при срабатывание события ajaxError.","\t */","\tthis.startRefresh = function(delay, period, stopOnAjaxError){","\t\tif(period > 0){","\t\t\tthis.refreshTime = period;","\t\t\tthis.stopOnAjaxError = stopOnAjaxError;","\t\t\tdelay = delay?delay:0;","\t\t\tthis.refreshId = setTimeout(context(this).callback(this.updateView), delay);","\t\t}","\t}","","\t/**Остановить обновление","\t */","\tthis.stopRefresh = function(){","//\t\talert(this.refreshId + \"|\" + this.refreshTime);","\t\tclearTimeout(this.refreshId);","\t\tthis.refreshId = null;","\t\tthis.refreshTime = 0;","\t\tthis.stopOnAjaxError = false;","\t}","\t","//\t$(window).bind(\"ajaxError\", context(this).callback(this.onajaxerror));","","\t/**Данные для запроса к серверу*/","\tthis.requestData = null;","\t/**Данные полученные от сервера*/","\tthis.responseData = null;","\t/**callback подготовки данных для запроса сервера","\t * @type\tFunction","\t */","\tthis.prepareData = null;","\t/**Период запуска updateView: >0 - время в милисекундах, 0 - отключен.","\t * Устанавливается в startRefresh, обнуляется в stopRefresh.","\t * @type\tint","\t */","\tthis.refreshTime = 0;","\t/**Корневой контроллер нужен для, того чтобы сообщать ему о том, что","\t * завершился eval данных, пришедших с сервера, которые могут понадобиться ему","\t * для совершения некоторых глобальных действий таких как logout.","\t * Устанавливается методом addToRequest, т.к. в конструкторе контроллер может быть ещё не интегрирован.","\t * @type\tjsController","\t */","\tthis.rootCtrl = null;","\t/**Идентификатор таймера обновления.","\t * @type\tint","\t */","\tthis.refreshId = null;","\t/**XMLHttpRequest текущего запроса","\t * @type\tObject","\t */","\tthis.xmlhttprequest = null;","\t/**Остановить обновление при первом неудачном запросе","\t * @type\tbool","\t */","\tthis.stopOnAjaxError = false;","\t/*  */","\tthis.bind('stoprefreshrq', this.stopRefresh);","}","extend(jsSSideView, jsView);","","/**Создаёт новый экземпляр класса jsCSideView"," * @class \t\t\t\t\t\t\tПредставляет базовую функциональность представлений клиентской стороны"," * @constructor"," * @param\t{int}\t\tviewInx\t\tИндекс интерфейса, к которому будет принадлежать представление."," * @param\t{Object}\tctrl\t\tСсылка на контроллер."," * @param\t{Object}\toptions\t\tОпции представления."," * \t\t\t\t\t\t\t\t\tjsCSideView принимает следующие опции:<br>"," * \t\t\t\t\t\t\t\t\thide - Скрыть представление.<br>"," * \t\t\t\t\t\t\t\t\tviewBoxSel - HTML контейнер представления.<br>"," * \t\t\t\t\t\t\t\t\tchildBoxSel - HTML контейнер для представлений потомков.<br>"," * \t\t\t\t\t\t\t\t\tmyBoxSel - HTML контейнер для собственных данных.<br>"," * \t\t\t\t\t\t\t\t\tИнформационные опции:"," * \t\t\t\t\t\t\t\t\tishidden - Представление скрыто под средством опции hide, методом hide()"," * \t\t\t\t\t\t\t\t\tили одно из родительских представлений скрыто"," */","function jsCSideView(ctrl, viewInx, options){","\tif(options.hide){","\t\t/**По этому полю метод drawView определяет надо скрывать представление или нет.","\t\t * @type\tbool","\t\t * @see\t\t#drawView","\t\t */","\t\tthis.hidden = options.ishidden = options.hide;","\t\toptions.hide = false;","\t}","\tjsCSideView.superclass.constructor.call(this, ctrl, viewInx, options);","","\t/** Базовый функционал для отрисовки страницы.<br>","\t * Метод производного класса может вызвать его в конце, иначе не сработают действия, которые основаны на том, что раскладка уже есть.","\t * Это касается только первого производного, остальные могут работать как хотят.","\t */","\tjsCSideView.prototype.drawView = function(){","\t\tvar child = null;","\t\tvar children = null;","\t\tvar options = this.options;","\t\tvar $viewbox = $(options.viewBoxSel);","","\t\tif(options.hide){","\t\t\tthis.hidden = options.hide;","\t\t\tthis.setOption(\"ishidden\", options.hide);","\t\t\toptions.hide = false;","\t\t}","","\t\t//привязать событие к DOM элементу представления (myBoxSel)","\t\tthis.bindDOMEvent(\"click\", this.onclick);","","\t\tif(this.hidden) this.hide();","\t\tif(no($viewbox.attr(\"id\"))){","\t\t\t$viewbox.attr(\"id\", \"viewbox\" + getUID());","\t\t}","\t\t\t","\t\t","\t\tchildren = this.ctrl.children;","\t\tfor(var i in children){","\t\t\tchild = this.getChild(i);","\t\t\tif(child instanceof jsCSideView) child.drawView();","\t\t}","\t}","\t","\t/**Подогнать размер заглушки под размеры окна (вызывается автоматически при изменении размера окна браузера)","\t * */","\tthis.correctModalOverlay = function() {","\t\t$('#modalOverlayBox').css({","\t\t\t'width': $(document).width(),","\t\t\t'height': $(document).height()","\t\t});","\t}","\t","\t/**Показать глушилку.","\t */","\tjsCSideView.prototype.showModalOverlay = function(message){","\t\t//Добавить modalOverlayBox если требуется","\t\tif($(\"#modalOverlayBox\").length == 0){","\t\t\t$(\"body\").append(\"<div id='modalOverlayBox' class='overlay' style='display: none;' ><input type='hidden' value='0' /><div class='message'><div></div></div></div>\");","\t\t}","\t\t","\t\tif(this.isWin){","\t\t\tvar winCount = new Number($('#modalOverlayBox>input').val());","\t\t\t$('#modalOverlayBox>input').val(winCount+1);","\t\t}","\t","\t\t$('body').css('overflow', 'hidden');","\t\t$('#modalOverlayBox').css({","\t\t\t'left': 0,","\t\t\t'top': 0,","\t\t\t'width': $(document).width(),","\t\t\t'height': $(document).height(),","\t\t\t'display': 'block',","\t\t\t'opacity': 0.7","\t\t});","\t\tif(message){","\t\t\t$('#modalOverlayBox div.message').css('display', '');","\t\t\t$('#modalOverlayBox div.message>div').html(lng(message));","\t\t\tvar width = $('#modalOverlayBox div.message').width();","\t\t\tvar height = $('#modalOverlayBox div.message').height();","\t\t\t$('#modalOverlayBox div.message').css({","\t\t\t\t'left': $(document).width()/2 - width/2,","\t\t\t\t'top': $(document).height()/2 - height/2","\t\t\t});","\t\t}","\t\telse{","\t\t\t$('#modalOverlayBox div.message').css('display', 'none');","\t\t\t$('#modalOverlayBox div.message>div').html(\"\");","\t\t}","\t\t$(window).bind('resize', context(this).callback(this.correctModalOverlay));","\t\t$(window).trigger('overlay.core', {","\t\t\t'visible': true,","\t\t\t'obj': this","\t\t});","\t}","","\t/**Скрыть глушилку.","\t */","\tjsCSideView.prototype.hideModalOverlay = function(){","\t\tvar winCount = new Number($('#modalOverlayBox>input').val());","\t\t","\t\tif(this.isWin){","\t\t\t$('#modalOverlayBox>input').val(--winCount);","\t\t}","\t\tif ($('#modalOverlayBox').is(':hidden') || winCount > 0) return ;","","\t\t$('#modalOverlayBox').fadeOut(600, function(){","\t\t\t$(this).css({","\t\t\t\t'width': '0px',","\t\t\t\t'height': '0px',","\t\t\t\t'display': 'none'","\t\t\t});","\t\t\t$('body').css('overflow', 'auto');","\t\t});","\t","\t\t$('#modalOverlayBox div.message').css('display', 'none');","\t\t$(window).unbind('resize', context(this).callback(this.correctModalOverlay));","\t\t$(window).trigger('overlay.core', {","\t\t\t'visible': false,","\t\t\t'obj': this","\t\t});","\t}","","\t/**Скрыть представление.","\t */","\tjsCSideView.prototype.hide = function(){","\t\tthis.hidden = true;","\t\tthis.setOption(\"ishidden\", true);","\t\t$(this.options.viewBoxSel).css(\"display\", \"none\");","\t}","\t","\t/**Показать представление","\t */","\tjsCSideView.prototype.show = function(){","\t\tthis.hidden = false;","\t\tthis.unSetOptionHidden();","\t\t$(this.options.viewBoxSel).css(\"display\", \"\");","\t}","\t","\t\t","\t/**Снять информационную опцию hidden у себя и потомков.","\t * У потомка опция снимается только если его прямой родитель не скрыт.","\t */","\tjsCSideView.prototype.unSetOptionHidden = function(){","\t\tvar children = this.ctrl.children;","\t\tvar child;","","\t\tfor(var i=0;i<children.length;i++){","\t\t\tchild = this.getChild(i);","\t\t\tif(child && !child.hidden){","\t\t\t\tchild.unSetOptionHidden();","\t\t\t}","\t\t}","\t\tthis.options.ishidden = false;","\t}","\t","\t/**Привязывает обработчик к событию DOM элемента.","\t * Вызов обработчика происходит с предварительной подменой контекста","\t * с контекста\tDOM на контекст представления.","\t * @param\t{String}\teventType\tТип события.","\t * @param\t{int}\t\tviewInx\t\tИндекс представления.","\t */","\tjsCSideView.prototype.bindDOMEvent = function(eventType, handler){","\t\t$(this.myBoxSel).bind(eventType, {}, context(this).callback(handler));","\t}","","\tjsCSideView.prototype.onblur = dummyFunc;","\tjsCSideView.prototype.onchange = dummyFunc;","\t/**Обработчик события click (события jQuery).","\t * Активирует контроллер","\t */","\tjsCSideView.prototype.onclick = function(event){","\t    if(event.target == event.currentTarget){","\t\t\tthis.ctrl.activatedByIface=this.viewInx;","\t\t\tthis.ctrl.activate();","\t    }","\t\treturn true;","\t};","\tjsCSideView.prototype.ondblclick = dummyFunc;","\tjsCSideView.prototype.onerror = dummyFunc;","\tjsCSideView.prototype.onfocus = dummyFunc;","\tjsCSideView.prototype.onfocusin = dummyFunc;","\tjsCSideView.prototype.onfocusout = dummyFunc;","\tjsCSideView.prototype.onhover = dummyFunc;","\tjsCSideView.prototype.onkeydown = dummyFunc;","\tjsCSideView.prototype.onkeypress = dummyFunc;","\tjsCSideView.prototype.onkeyup = dummyFunc;","\tjsCSideView.prototype.onmousedown = dummyFunc;","\tjsCSideView.prototype.onmouseenter = dummyFunc;","\tjsCSideView.prototype.onmouseleave = dummyFunc;","\tjsCSideView.prototype.onmousemove = dummyFunc;","\tjsCSideView.prototype.onmouseout = dummyFunc;","\tjsCSideView.prototype.onmouseover = dummyFunc;","\tjsCSideView.prototype.onmouseup = dummyFunc;","\tjsCSideView.prototype.onresize = dummyFunc;","\tjsCSideView.prototype.onscroll = dummyFunc;","\tjsCSideView.prototype.onselect = dummyFunc;","\tjsCSideView.prototype.onsubmit = dummyFunc;","\t","\t/*!!! TODO: Добавить контекстное меню с выбором интерфейса !!!*/","\t","\tif(!options.viewBoxSel) options.viewBoxSel = null;","\tif(!options.myBoxSel) options.myBoxSel = options.viewBoxSel;","\tif(!options.childBoxSel) options.childBoxSel = options.viewBoxSel;","\t/**HTML контейнер представления.<br>","\t * deprecated Используйте соотв. опцию взамен.","\t * @type\tString","\t */","\tthis.viewBoxSel = options.viewBoxSel;","\t/**HTML контейнер для собственных данных.<br>","\t * deprecated Используйте соотв. опцию взамен.","\t * @type\tString","\t */","\tthis.myBoxSel = options.myBoxSel;","\t/**HTML контейнер для представлений потомков.<br>","\t * deprecated Используйте соотв. опцию взамен.","\t * @type\tString","\t */","\tthis.childBoxSel = options.childBoxSel;\t//необязательный селектор HTML контейнера для дочерних объектов","\t","\t/**Признак модального окна.","\t * Используется как защита случайного скрытия глушилки при вызове hideModalOverlay.","\t * @type\tbool","\t */","\tthis.isWin = false;","","}","extend(jsCSideView, jsView);","","/* Name:\t\t\tjsCSideViewOptions"," * Description: \tГлобальные опции всех представлений клиентской стороны"," * Arguments:\t\tнет"," * Return value:\tнет"," * Notes:"," */","jsCSideViewOptions = {","\t\trtl: false,\t\t\t\t\t\t//направление письма справа налево","\t\tpda: false,\t\t\t\t\t\t//версия для кпк","\t\tlng: \"rus\"\t\t\t\t\t\t//обозначение языка в соотв. ИСО 639–88 ","\t\t\t\t\t\t\t\t\t\t//соотв. ГОСТ 7.75–97 http://gsnti-norms.ru/norms/common/doc.asp?2&/norms/stands/7_75.htm","}","","/*********** Способы отрисовки иерархической сущности библиотеки **************************"," *\tНаследование от разных базовых классов, таких как jsViewTree, jsListTree и т.д."," *\tдаёт возможность объединение узлов в дерево, список и т.д."," *\tТ.е. при вызове метода drawView экземпляра класса jsNodeView, для которого"," *\tвызвали extend(jsNodeView, jsTreeView) нарисуется дерево объектов типа "," *\tjsNodeView, если контроллер этого экземпляра содержал дочерние объекты."," * \tЕсли применять наследование непосредственно перед созданием интерфейса,"," * \tто можно делать разные интерфейсы на основе одного представления!"," ******************************************************************************************/","","/**Создаёт новый экземпляр класса jsViewTree"," * @class\tПредставляет базовую функциональность деревьев и списков."," * @constructor"," * @param\t{int}\t\tviewInx\t\tИндекс интерфейса, к которому будет принадлежать представление."," * @param\t{jsController}\tctrl\t\tСсылка на контроллер."," * @param\t{Object}\toptions\t\tОпции представления."," * \t\t\t\t\t\t\t\t\tjsViewTree принимает следующие опции:<br>"," * \t\t\t\t\t\t\t\t\t<ul>"," * \t\t\t\t\t\t\t\t\t\t<li>"," * \t\t\t\t\t\t\t\t\t\t\topen - Открытое дерево (bool)."," * \t\t\t\t\t\t\t\t\t\t</li>"," * \t\t\t\t\t\t\t\t\t\t<li>"," * \t\t\t\t\t\t\t\t\t\t\tstyle - Название стиля (String)."," *\t \t\t\t\t\t\t\t\t\t\tСтили: fastmenu, tabs1."," * \t\t\t\t\t\t\t\t\t\t</li>"," * \t\t\t\t\t\t\t\t\t\t<li>"," * \t\t\t\t\t\t\t\t\t\t\tnoPath - Не отображать путь в в строке URL. Для полного описание этой фичи см. поле path."," * \t\t\t\t\t\t\t\t\t\t</li>"," * \t\t\t\t\t\t\t\t\t</ul>"," */","function jsViewTree(ctrl, viewInx, options){","\tjsViewTree.superclass.constructor.call(this, ctrl, viewInx, options);","","\tif(!options) options = {};","\t","\t/**Рисует раскладку страницы для дерева или списка","\t * и проставляет селекторы HTML контейнеров потомкам.","\t * Список рисуется в соотв. с опцией style.","\t * Если узел активный или установлен флаг open, список рисуется раскрытым.","\t */","\tjsViewTree.prototype.drawView = function(){","\t\tvar children;","\t\tvar lft;","\t\tvar rgt;","\t\tvar alias = this.ctrl.alias?this.ctrl.alias:\"\";","\t\tvar htmlToAppend = \"\";","\t\tvar anchor_href = \"\";","\t\tvar child;","","\t\tif(this.options.plainIface){","\t\t\tchildren = [];","\t\t}","\t\telse{","\t\t\tchildren = this.ctrl.children;","\t\t}","\t\t","\t\tif(!(this.getParent(1) instanceof jsViewTree)){","\t\t\tthis.ctrl.root = true;","\t\t\tthis.path = alias;","\t\t\tthis.rootOfTree = this;","\t\t}","\t\telse{","\t\t\tthis.path = this.getParent().path + \"/\" + alias;","\t\t\tthis.rootOfTree = this.getParent().rootOfTree;","\t\t}","","\t\tif (this.options.noPath) {","\t\t\tthis.path = \"\";","\t\t\tanchor_href = \"\";","\t\t} else {","\t\t\tanchor_href = \" href='#\" + this.path + \"' \";","\t\t}","\t\t","\t\tif(this.style == \"fastmenu\"){","\t\t\tif(this.ctrl.root){","\t\t\t\t$(this.viewBoxSel).html(\"<div></div>\");","\t\t\t\tthis.myBoxSel = this.viewBoxSel + \">div\";","\t\t\t\t$(this.viewBoxSel).addClass(\"fastmenu\");","\t\t\t\t$(this.myBoxSel).css(\"display\", \"none\");\t//нужно логически, но не нужно визуально","\t\t\t}","\t\t\telse{","\t\t\t\t$(this.viewBoxSel).html(\"<a \" + anchor_href + \"></a>\");","\t\t\t\tthis.myBoxSel = this.viewBoxSel + \">a\";","\t\t\t}","\t\t\tif(children.length){","\t\t\t\tthis.childBoxSel = this.viewBoxSel + \">ul\";","\t\t\t\t$(this.viewBoxSel).append(\"<ul></ul>\");","\t\t\t}","\t\t\telse{","\t\t\t\tthis.childBoxSel = null;","\t\t\t}","\t\t\thtmlToAppend = \"\";","\t\t\tfor(var i=0;i<children.length;i++){","//\t\t\t\t$(this.childBoxSel).append(\"<li></li>\");","\t\t\t\thtmlToAppend += \"<li></li>\";","\t\t\t\tchild = this.getChild(i);","\t\t\t\tchild.options.viewBoxSel = this.childBoxSel+\">li:eq(\"+i+\")\";","\t\t\t\tchild.viewBoxSel = this.childBoxSel+\">li:eq(\"+i+\")\";","//\t\t\t\tchildren[i].views[this.viewInx].viewBoxSel = this.childBoxSel+\">li:eq(\"+i+\")\";","\t\t\t}","\t\t\t$(this.childBoxSel).append(htmlToAppend);","\t\t}","\t\telse{","\t\t\tif(this.ctrl.getParent(2).root){","\t\t\t\t$(this.viewBoxSel).html(\"<a \" + anchor_href + \"></a>\");","\t\t\t\tthis.myBoxSel = this.viewBoxSel + \">a\";","\t\t\t}","\t\t\telse if(this.ctrl.root){","\t\t\t\t$(this.viewBoxSel).html(\"<div></div>\");","\t\t\t\tthis.myBoxSel = this.viewBoxSel + \">div\";","\t\t\t\tif(this.style == \"tabs1\"){","\t\t\t\t\t$(this.viewBoxSel).addClass(\"menu\");","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\t$(this.viewBoxSel).addClass(\"menuvert1\");","//\t\t\t\t\t$(this.viewBoxSel).attr(\"class\", \"\");","\t\t\t\t}","\t\t\t\t$(this.myBoxSel).css(\"display\", \"none\");\t//нужно логически, но не нужно визуально","\t\t\t}","\t\t\telse{","\t\t\t\tif(this.style == \"tabs1\"){","\t\t\t\t\tlft = \"class = 'lft'\";","\t\t\t\t\trgt = \"class = 'rgt'\";","\t\t\t\t\t$(this.viewBoxSel).html(\"<a \" + anchor_href + \"><em \" + lft + \"></em><b></b><em \" + rgt + \"></em></a>\");","\t\t\t\t\tthis.myBoxSel = this.viewBoxSel + \">a>b\";","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\t$(this.viewBoxSel).html(\"<a \" + anchor_href + \"></a>\");","\t\t\t\t\tthis.myBoxSel = this.viewBoxSel + \">a\";","\t\t\t\t}","\t\t\t}","\t\t\tif(children.length){","\t\t\t\tthis.childBoxSel = this.viewBoxSel + \">ul\";","\t\t\t\t$(this.viewBoxSel).append(\"<ul></ul>\");","\t\t\t}","\t\t\telse{","\t\t\t\tthis.childBoxSel = null;","\t\t\t}","\t\t\thtmlToAppend = \"\";","\t\t\tfor(var i=0;i<children.length;i++){","//\t\t\t\t$(this.childBoxSel).append(\"<li></li>\");","\t\t\t\thtmlToAppend += \"<li></li>\";","\t\t\t\tchild = this.getChild(i);","\t\t\t\tchild.options.viewBoxSel = this.childBoxSel+\">li:eq(\"+i+\")\";","\t\t\t\tchild.viewBoxSel = this.childBoxSel+\">li:eq(\"+i+\")\";","\t\t\t\t//children[i].views[this.viewInx].viewBoxSel = this.childBoxSel+\">li:eq(\"+i+\")\";","\t\t\t}","\t\t\t$(this.childBoxSel).append(htmlToAppend);","\t\t\tif(this.style != \"tabs1\"){","\t\t\t\tif(this.ctrl.active){","//\t\t\t\t\t$(this.myBoxSel).css(\"font-weight\", \"bold\");","\t\t\t\t\tthis.onactivate();","\t\t\t\t}","\t\t\t\telse{","//\t\t\t\t\t$(this.myBoxSel).css(\"font-weight\", \"normal\");","\t\t\t\t\tthis.ondeactivate();","\t\t\t\t}","\t\t\t}","\t\t\t","\t\t\tif(!this.ctrl.active && !this.open && !this.ctrl.root){","\t\t\t\t$(this.childBoxSel).css(\"display\", \"none\");","\t\t\t}","\t\t\telse{","\t\t\t\t$(this.childBoxSel).css(\"display\", \"\");","\t\t\t}","\t\t}","\t\tif(children.length){","\t\t\tif(children.length == 1){","\t\t\t\t$(this.getChild(0).viewBoxSel).addClass(\"nodesingle\");","\t\t\t}","\t\t\telse{","\t\t\t\t$(this.getChild(0).viewBoxSel).addClass(\"nodefirst\");","\t\t\t\t$(this.getChild(children.length - 1).viewBoxSel).addClass(\"nodelast\");","\t\t\t}","\t\t}","\t\tjsViewTree.superclass.drawView.call(this);","","\t\tif(this.ctrl.root && this.style == \"fastmenu\"){","\t\t\t//прикрутить анимацию после того, как всё дерево будет отрисовано","\t\t\t$(this.viewBoxSel + ' ul li').hover(","\t\t\t\tfunction() {","\t\t\t\t\t$(this).find('ul').stop(true, true);","\t\t\t\t\t$(this).find('ul').slideDown('normal');","\t\t\t\t},","\t\t\t\tfunction() {","\t\t\t\t\t$(this).find('ul').slideUp('normal');","\t\t\t\t}","\t\t\t);","\t\t}","\t\t","\t}","\t","\t/**Обработчик события activate.","\t * Изменяет внешний вид активного представления.","\t * @type\tbool","\t * @return\ttrue - всплывать.<br>","\t * \t\t\tfalse - не всплывать.","\t * @see\t\tjsController#event","\t */","\tjsViewTree.prototype.onactivate = function(){","\t\t$(this.viewBoxSel).addClass(this.getClasses());","\t\tif(this.style != \"fastmenu\"){","\t\t\tif(this.style != \"tabs1\") $(this.myBoxSel).css(\"font-weight\", \"bold\");","\t\t\tif(!this.open) $(this.childBoxSel).css(\"display\", \"\");","\t\t}","\t\treturn false;","\t}","\t","\t/**Определить классы CSS для onactivate и ondeactivate","\t * @type\t{String}\tnodeactive/nodefirstactive/nodelastactive","\t */","\t jsViewTree.prototype.getClasses = function(){","\t\tvar classes = \"\";","\t\tvar parent = this.ctrl.getParent();","\t\tif(parent instanceof jsController){","\t\t\tif(parent.children.length == 1){","\t\t\t\tclasses += \"nodesingleactive\";","\t\t\t}","\t\t\telse if(this.ctrl.thisInx < parent.children.length - 1 && this.ctrl.thisInx > 0){","\t\t\t\tclasses += \"nodeactive\";","\t\t\t}","\t\t\telse{","\t\t\t\tif(this.ctrl.thisInx == 0){","\t\t\t\t\tclasses += \" nodefirstactive\";","\t\t\t\t}","\t\t\t\tif(this.ctrl.thisInx == parent.children.length - 1){","\t\t\t\t\tclasses += \" nodelastactive\";","\t\t\t\t}","\t\t\t}","\t\t}","\t\telse{","\t\t\tclasses += \"nodesingleactive\";","\t\t}","\t\treturn classes;","\t }","\t ","\t/**Обработчик события deactivate.","\t * @type\tbool","\t * @return\ttrue - всплывать.<br>","\t * \t\t\tfalse - не всплывать.","\t * @see\t\tjsController#event","\t */","\tjsViewTree.prototype.ondeactivate = function(){","\t\t$(this.viewBoxSel).removeClass(this.getClasses());","\t\tif(this.style != \"fastmenu\"){","\t\t\tif(this.style != \"tabs1\") $(this.myBoxSel).css(\"font-weight\", \"normal\");","\t\t\tif(!this.open) $(this.childBoxSel).css(\"display\", \"none\");","\t\t}","\t\treturn false;","\t}","\t","//\tjsViewTree.prototype.onactivate = function(){this.drawView(); return false;};","//\tjsViewTree.prototype.ondeactivate = function(){this.drawView(); return false;};","","\tthis.bind(\"activate\", this.onactivate);","\tthis.bind(\"deactivate\", this.ondeactivate);","","\t/**Стиль списка","\t * @type\tString","\t * @see\t\t#drawView","\t */","\tthis.style = options.style;","\t/**Указание drawView рисовать открытое дерево (список).","\t * @type\tbool","\t * @see\t\t#drawView","\t */","\tthis.open = (this.style == \"tabs1\")?true:options.open;","\t/**Ссылка на корневой узел дерева.","\t * Заполняется по цепочке от родителя к потомку в drawView.","\t * @type\tObject","\t */","\tthis.rootOfTree = null; ","\t","\t/**Путь аналогичный пути в файловой системе.","\t * Записывается в атрибут href после #.","\t * Формируется на основе алисов контроллеров.","\t * Корнем считается первое представление типа jsViewTree.","\t * @type\tString","\t */","\tthis.path = \"\";","}","extend(jsViewTree, jsCSideView);","/**"," * @fileoverview Модуль меню."," * Данный модуль предназначен для создания меню различного вида."," * Как этим пользоваться:"," * <ul>"," * \t<li>"," * \tСоздать дерево меню, указав главным фреймом тот контроллер, который должен получать событие menuchange."," * \t</li>"," * \t<li>"," * \tОбъявить обработчик menuchange, в контроллере и представлении."," * \t</li>"," * </ul>"," * Пример использования в тестовом наборе."," */","","/**Создаёт новый экземпляр класса jsMenuModel"," * @class\t\t\t\tМодель содержит только имя узла меню."," * @param\tnodeName\tИмя узла меню. (ключ объекта lang)"," * @constructor"," */ ","function jsMenuModel(nodeName){","\tjsMenuModel.superclass.constructor.call(this);","\t","\tthis.nodeName = nodeName;","}","extend(jsMenuModel, jsModel);","","/**Создаёт новый экземпляр класса jsMenuController"," * @class\t\t\t\tКонтроллер дерева меню."," * @constructor"," * @param\t{String}\tnodeName\tИмя узла (для немедленного создания модели)."," * @param\t{Object}\toptions\t\tОпции.<br>"," * \t\t\t\t\t\t<span>&nbsp;&nbsp;</span>frame\t\t\t-\tссылка на объект, которому принадлежит всё дерево меню."," * \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tЕго достаточно задать только корневому узлу.<br>"," * \t\t\t\t\t\t<span>&nbsp;&nbsp;</span>contentClass \t-\tкласс контроллера страницы контента."," * \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tЕсли класс ещё не подгружен, то должна стоять заглушка.<br>"," * \t\t\t\t\t\t<span>&nbsp;&nbsp;</span>contentOptions\t-\tмассив (Array()) аргументов конструктора контроллера страницы контента,"," * \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tили любой другой тип, если contentClass не задан. В последнем случае.<br>"," * \t\t\t\t\t\t<span>&nbsp;&nbsp;</span>contentOptions -\tиспользуется по усмотрению класса frame.<br>"," * \t\t\t\t\t\t<span>&nbsp;&nbsp;</span>contentUrl\t\t-\tURL js файла, в котором находится contentClass,"," * \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tесли contentClass не является потомком jsController,"," * \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tто будет предпринята попытка загрузить класс из contentUrl."," */","function jsMenuController(nodeName, options){","\tif(no(nodeName)) return;","\tjsMenuController.superclass.constructor.call(this);","","\tif(!options) options = {};","\t","\tif(!this.contentOptions) this.contentOptions = [];\t//для совместимости c IE, который не жрёт undefined в apply()","\t//класс контентной страницы, может иметь значение по умолчанию в прототипе","\tif(options.contentClass) this.contentClass = options.contentClass;","\t//аргументы конструктора класса контентной страницы","\tif(options.contentOptions) this.contentOptions = options.contentOptions;","","\tthis.changeModel(new jsMenuModel(nodeName));","\t","\tthis.ifaceTypes.tree = {type: jsMenuView, def:true};","","\t/**Встроить контроллер в иерархию.","\t * А именно:<br>","\t * Проставляются поля frame и level.","\t * frame это ссылка на объект, которому принадлежит всё дерево меню.","\t * Ему нужно сообщать о том, какое меню активно в давный момент.","\t * level это уровень меню для быстрого отображения раздела и подразделов контроллером this.frame.","\t * @see jsController#integrate","\t */","\tthis.integrate = function(childInx, parent){","\t\tjsMenuController.superclass.integrate.call(this, childInx, parent);","","\t\t//ссылка на объект, которому принадлежит всё дерево меню","\t\t//ему нужно сообщать о том, какое меню активно в давный момент","\t\t//благодаря такому присвоению можно задавать только для корневого меню","\t\tif(!this.frame) this.frame = this.getParent(1).frame;","\t\t//уровень меню для быстрого отображения раздела и подразделов контроллером this.frame","\t\t//благодаря такому присвоению можно задавать только для корневого меню","\t\tparent = this.getParent(1);","\t\tif(parent instanceof jsMenuController && parent.level >= 0) this.level = this.getParent(1).level + 1;","\t}","","\t/**Создать контроллер страницы, выбираемой с помощью меню.","\t * @type\tjsController","\t * @return\tСозданный объект.","\t */","\tthis.createContent = function(){","//\t\tif(this.contentClass && !this.contentCtrl){","\t\tif(this.contentClass){","\t\t\tthis.contentCtrl = new this.contentClass();","\t\t\tthis.contentClass.apply(this.contentCtrl, this.contentOptions);","\t\t}","\t\treturn this.contentCtrl;","\t}","\t","\t","\t/**Обработчик события activate.","\t * Создаёт контентный контроллер и запускает событие menuchange на главном фрейме.","\t * @type\tbool","\t * @see\t\tjsController#event","\t */","\tthis.onactivate = function(){","\t\tthis.createContent();","\t\t","\t\tframe = this.frame","\t\tif(frame) frame.event(\"menuchange\", this);","\t\treturn false;","\t}","\t","\tthis.addEventHandler(\"activate\", this.onactivate);","","\t/**Уровень вложенности меню","\t * @type\tint","\t */","\tthis.level = 0;","\t/**Ссылка на объект, которому принадлежит всё дерево меню.","\t * @type\tjsController","\t */","\tthis.frame = options.frame;","\t/**Контроллер контента страницы выбираемой с помощью меню.","\t * Создаётся в onactivate представления.","\t * @type\tjsController","\t */","\tthis.contentCtrl = null;","\t/**Индекс представления, с помощью которого выбрано меню","\t * @type\tint","\t */","\tthis.selectedByView = null;","}","extend(jsMenuController, jsController);","","/**Создаёт новый экземпляр класса jsMenuView"," * @class\t\t\t\t\tПредставление дерева меню."," * @param\t{int}\t\t\tviewInx\tИндекс интерфейса, к которому будет принадлежать представление."," * @param\t{jsController}\tctrl\tСсылка на контроллер."," * @param\t{Object}\t\toptions\tОпции представления."," * @constructor"," */ ","function jsMenuView(ctrl, viewInx, options){","\tjsMenuView.superclass.constructor.call(this, ctrl, viewInx, options);","","\t/**Отображает имя узла (через функцию lng) в раскладке предоставленной drawView базового класса.*/","\tjsMenuView.prototype.drawView = function(){","\t\tjsMenuView.superclass.drawView.call(this);","\t\t$(this.myBoxSel).html(lng(this.ctrl.model.nodeName));","\t}","","\t/**Обработчик события activate. Устанавливает поле selectedByView.*/","\tjsMenuView.prototype.onactivate = function(){","\t\tjsMenuView.superclass.onactivate.call(this);","\t\tthis.ctrl.selectedByView = this.viewInx;","\t}","","\tthis.bind(\"activate\", this.onactivate);","","}","extend(jsMenuView, jsViewTree);","/**"," * @fileoverview Модуль recordset."," * Данный модуль является основным элементом страниц для редактирования некоторого набора записей."," * Набор записей отображается в виде таблицы. Клик на строку таблицы открывает режим редактирования записи.<br>"," * Как этим пользоваться:"," * <ul>"," * \t<li>"," * \tСоздать класс контроллера, прозводный от jsRecordSetController.<br>"," * \t\tВ нём:"," * \t\t<ul>"," * \t\t\t<li>"," * \t\t\tОбъявить интерфейсы."," * \t\t\t</li>"," * \t\t\t<li>"," * \t\t\tОбъявить обработчик события recselect. В нём создать потомков, которые и будут образовывать"," * \t\t\tстраницу в режиме редактирования."," * \t\t\t</li>"," * \t\t</ul>"," * \t</li>"," * \t<li>"," * \tСоздать класс представления, произодный от jsRecordSetClientView.<br>"," * \t\tВ нём:"," * \t\t<ul>"," * \t\t\t<li>"," * \t\t\tОбъявить обработчик события recselect. В нём проставить опции потомков."," * \t\t\t</li>"," * \t\t\t<li>"," * \t\t\tОбъявить обработчик события fieldchange. В нём поместить логику, которая включается при изменении полей ввода."," * \t\t\t</li>"," * \t\t</ul>"," * \t</li>"," * \t<li>"," * \tСоздать класс модели, произодный от jsRecordSetModel если требуется кастомизация модели."," * \t</li>"," * </ul>"," * Пример использования в тестовом наборе."," */","","/**Создаёт новый экземпляр класса jsRecordSetModel."," * @class\tХранит массив объектов типа:<br>"," * <code>"," * ["," * {val1:\"val1_1\", val2:\"val1_2\", val3:\"val1_3\"},"," * {val1:\"val2_1\", val2:\"val2_2\", val3:\"val2_3\"},"," * {val1:\"val3_1\", val2:\"val3_2\", val3:\"val3_3\"},"," * {val1:\"val4_1\", val2:\"val4_2\", val3:\"val4_3\"}"," * ]"," * </code>"," * который и является набором записей."," * Если значение является объектом, например {value:true, type:\"radio\", extrattrs:{disabled:\"\"}},"," * то вместо надписи выведется элемент заданного типа. В настоящее время доступен только radio и checkbox,"," * которые являются радиокнопкой и \"флажком\" со значением value, и отмеченной, если value == true. Объект extrattrs"," * задаёт дополнительные атрибуты тега input. При клике на этих элементах вызывается событие cellselect с аргументом"," * {row:строка, cell:столбец}."," * Объекты в качестве значения являются устаревшим способом вывести в ячейке таблицы элемент отличный от текста."," * Далее развиваться этот способ не будет. Вместо этого, чтобы вывести нестандартное содержимое ячейки, можно сделать"," * производный, от jsRecordSetClientView, класс и переопределить в нём методы drawTd и drawShowView. Переопределение последнего"," * требуется чтобы проставить обработчики событий, если это требуется."," * @param\t{Array}\trecordSet\tМассив объектов."," * @constructor"," */ ","function jsRecordSetModel(recordSet){","\tjsRecordSetModel.superclass.constructor.call(this);","\t","\t/**Набор записей","\t * @type\tArray","\t */","\tthis.recordSet = recordSet?recordSet:[];","\t/**Ширина ячеек таблицы","\t * @type\tArray","\t */","\tthis.colsWidth = {};","}","extend(jsRecordSetModel, jsModel);","","/* Name:\t\t\tjsRecordSetController"," * Description: \tконструктор класса jsRecordSetController"," * Arguments:\t\tнет"," * Return value:\tнет"," * Compatibility:\tjsRecordSetModel"," * Notes:"," */","/**Создаёт новый экземпляр класса jsRecordSetController"," * @class\t\t\t\t\t\tБазовый функционал контроллера набора записей."," * @constructor"," */ ","function jsRecordSetController(){","\tjsRecordSetController.superclass.constructor.call(this);","\t","\tthis.ifaceTypes.client = {type: jsRecordSetClientView};","//\tthis.ifaceTypes.server = {type: jsRecordSetServerView};","","\tthis.changeModel(new jsRecordSetModel());","","\t/**Обработчик события recselect. ","\t * Устанавливает поле activeRecordInx.","\t * @param\tint\trecordInx","\t * @type\tbool","\t * @return\tПозволяет событию всплыть.","\t * @see\t\tjsController#event","\t */","\tjsRecordSetController.prototype.onrecselect = function(recordInx){","\t\tthis.activeRecordInx = recordInx;","\t\treturn true;","\t}","","\tthis.addEventHandler(\"recselect\", this.onrecselect);","\t","\t/**Текущий индекс активной записи.","\t * -1 Означает то, что ни одна запись не активна.","\t * @type\tint","\t */","\tthis.activeRecordInx = -1;","}","extend(jsRecordSetController, jsController);","","/**Создаёт новый экземпляр класса jsRecordSetClientView"," * @class\t\t\t\t\tПредставление набора записей.<br>"," * \t\t\t\t\t\t\tЧтобы нарисовать нестандартную таблицу можно переопределить методы"," * \t\t\t\t\t\t\tdrawTh, drawTr, drawTd, drawShowView.<br>"," * \t\t\t\t\t\t\tdrawShowView - в основном чтобы проставить обработчики событий."," * @param\t{int}\t\t\tviewInx\tИндекс интерфейса, к которому будет принадлежать представление."," * @param\t{jsController}\tctrl\tСсылка на контроллер."," * @param\t{Object}\t\toptions\tОпции представления."," * \t\t\t\t\t\t\tОпции:<br>"," * \t\t\t\t\t\t\t<ul>"," * \t\t\t\t\t\t\t\t<li>header - Массив объектов вида: <code>{key:name, name:humanName}</code>.</li>"," * \t\t\t\t\t\t\t\t<li>resizingOff - отключает возможность изменение размера столбцов</li>"," * \t\t\t\t\t\t\t\t<li>name - имя поля в модели.</li>"," * \t\t\t\t\t\t\t\t<li>humanName - то, что будет в заголовке таблицы (ключ объекта lang).</li>"," * \t\t\t\t\t\t\t\t<li>header - Массив объектов вида: <code>{key:name, name:humanName}</code>.</li>"," * \t\t\t\t\t\t\t\t<li>editBoxSel - Селектор контейнера для режима редактирования. Если он не"," * \t\t\t\t\t\t\t\t\tустановленовлен, то будет использоваться myBoxSel."," * \t\t\t\t\t\t\t\t</li>"," * \t\t\t\t\t\t\t</ul>"," * \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t"," * @constructor"," */ ","function jsRecordSetClientView(ctrl, viewInx, options){","\tjsRecordSetClientView.superclass.constructor.call(this, ctrl, viewInx, options);","\t","\t// По дефолту возможность изменения размера столбцов включена","\tif (options.resizingOff == undefined) {","\t\toptions.resizingOff = false;","\t}","\t","\t/**Отрисовка представления в режиме просмотра и редактирования.","\t * <br>","\t * Режим просмотра: \t\tactiveRecordInx < 0.<br>","\t * Режим редактирования:\tactiveRecordInx >=0.<br>","\t * В зависимости режима вызывает либо drawShowView, либо drawEditView.","\t * @see #drawShowView","\t * @see #drawEditView","\t */","\tjsRecordSetClientView.prototype.drawView = function(){","\t\tif(this.ctrl.activeRecordInx < 0) this.drawShowView();","\t\telse this.drawEditView();","\t\tif(this.options.hide){","\t\t\tthis.hidden = this.options.hide;","\t\t\tthis.setOption(\"ishidden\", this.options.hide);","\t\t\tthis.options.hide = false;","\t\t}","\t\tif(this.hidden) this.hide();","\t}","\t","\t/**Добавляет представлению возможность изменять размер колонок.","\t * ","\t */","\tjsRecordSetClientView.prototype.setResizing = function() {","\t\tvar table = $(this.myBoxSel+'>table');","\t\tvar tds = $(table).find('tr:eq(0)>td');","\t\tvar colsWidth = this.ctrl.model.colsWidth;","\t\tvar rtlIndex = ($('body').css('direction') != 'rtl')?$(tds).length-1:0;","\t\t","\t\tdocument.extra = {","\t\t\tresizing: false,","\t\t\toldX: 0,","\t\t\toldWidth: 0,","\t\t\tcurrentTD: null","\t\t};","\t\t\t\t","\t\t$(tds).each(function(index){","\t\t\tif (rtlIndex == index) {","\t\t\t\treturn;","\t\t\t}","\t\t\t","\t\t\tif (colsWidth[index.toString()] != undefined) {","\t\t\t\t$(this).css('width', colsWidth[index.toString()]);","\t\t\t}","\t\t\t","\t\t\tvar thText = $(this).text();","\t\t\tvar divTh = $(\"<div />\").css({","\t\t\t\t'width': '100%',","\t\t\t\t'height': '100%',","\t\t\t\t'position': 'relative'","\t\t\t});","\t\t\tvar resizer = $(\"<div />\").css({","\t\t\t\t'cursor': 'col-resize',","\t\t\t\t'height': '100%',","\t\t\t\t'left': '100%',","\t\t\t\t'position': 'absolute',","\t\t\t\t'top': '0px',","\t\t\t\t'width': '5px'","\t\t\t});","\t\t\t$(resizer).mousedown(function(e){","\t\t\t\tdocument.extra.resizing = true;","\t\t\t\tdocument.extra.oldX = e.pageX;","\t\t\t\tdocument.extra.oldWidth = $(this).parents('td').width();","\t\t\t\tdocument.extra.currentTD = $(this).parents('td');","\t\t\t\t$('body').css('cursor', 'col-resize');","\t\t\t\t$(resizer).parents('table').fadeTo('fast', 0.7);","\t\t\t\treturn false;","\t\t\t});","\t\t\t$(resizer).mouseup(function(e){","\t\t\t\tdocument.extra.resizing = false;","\t\t\t\t$('body').css('cursor', 'default');","\t\t\t\t$(resizer).parents('table').fadeTo('slow', 1);","\t\t\t\tcolsWidth[$(document.extra.currentTD).index().toString()] = $(document.extra.currentTD).width();","\t\t\t\treturn false;","\t\t\t});","\t\t\t$('body').mouseup(function(e){","\t\t\t\tif (document.extra.resizing) {","\t\t\t\t\t$(resizer).mouseup();","\t\t\t\t\treturn false;","\t\t\t\t}","\t\t\t});","\t\t\t$('body').mousemove(function(e){","\t\t\t\tif (document.extra.resizing) {","\t\t\t\t\tvar width = e.pageX - document.extra.oldX;","\t\t\t\t\t$(document.extra.currentTD).css('width', document.extra.oldWidth + width);","\t\t\t\t\treturn false;","\t\t\t\t}","\t\t\t});","\t\t\t$(divTh).text(thText)","\t\t\t$(divTh).append(resizer);","\t\t\t$(this).html($(divTh));","\t\t});","\t}","\t","\t/**Нарисовать таблицу записей.","\t * Это, так называемый, режим просмотра.","\t * @see #drawEditView","\t */","\tjsRecordSetClientView.prototype.drawShowView = function(){","\t\tvar recordSet = this.ctrl.model.recordSet;","\t\tvar record = null;","\t\tvar header = null;","\t\tvar htmlToDraw = \"\";","\t\tvar id;","\t\tvar idPrefix;","\t\t","\t\thtmlToDraw = \"<table class='gridTable' cellspacing='0' cellpadding='0'>\";","\t\t//header","\t\theader = this.options.header;","\t\thtmlToDraw += this.drawTh();","\t\t//body","\t\tif(recordSet && recordSet.length){","\t\t\tidPrefix = \"rsShow\" + getUID() + \"_\";","\t\t\thtmlToDraw += \"<tbody>\";","\t\t\tfor(var i=0; i<recordSet.length; i++){","\t\t\t\thtmlToDraw += this.drawTr(idPrefix, i);","\t\t\t}","\t\t\thtmlToDraw += \"</tbody>\";","\t\t}","\t\thtmlToDraw += \"</table>\";","\t\tif(!this.options.viewBoxSel) this.options.viewBoxSel = this.viewBoxSel;","\t\tthis.options.myBoxSel = this.options.viewBoxSel;","\t\tthis.myBoxSel = this.options.myBoxSel;","\t\tthis.options.childBoxSel = this.options.viewBoxSel;","\t\tthis.childBoxSel = this.options.childBoxSel;","\t\t$(this.myBoxSel).html(htmlToDraw);","\t\t","\t\tif (!this.options.resizingOff) {","\t\t\tthis.setResizing();","\t\t}","\t\t","\t\t//проставить onclick'ки","//\t\tfor(var i=1;i<$(this.myBoxSel+\">table>tbody>tr\").length;i++){","\t\tfor(var i=0;i<recordSet.length;i++){","//\t\t\t$(this.myBoxSel+\">table>tbody>tr:eq(\" + i + \")\").bind(\"click\", {recordInx:i-1}, context(this).callback(this.onrowclick));","\t\t\t$(\"#\" + idPrefix + i).bind(\"click\", {recordInx:i}, context(this).callback(this.onrowclick));","\t\t}","\t\tvar rowSel;","\t\tvar cellSel;","\t\tvar curVal;","\t\tfor(var i=0;i<recordSet.length;i++){","\t\t\trowSel = \"#\" + idPrefix + i;","\t\t\tfor(var j in header){","\t\t\t\tcurVal = recordSet[i][header[j].key];","\t\t\t\tif(curVal instanceof Object) {","\t\t\t\t\tif (curVal.type == \"radio\" || curVal.type == \"checkbox\"){","\t\t\t\t\t\tcellSel = rowSel + \">td:eq(\" + j + \")>input\";","\t\t\t\t\t\t$(cellSel).bind(\"click\", {row:i, cell:j}, context(this).callback(this.oncellclick));","\t\t\t\t\t}","\t\t\t\t}","\t\t\t}","\t\t}","\t}","\t","\t/**Нарисовать строку заголовков.","\t * @type\tString","\t * @return\t\t\tHTML код ячейки.","\t */","\tjsRecordSetClientView.prototype.drawTh = function(){","\t\tvar header = this.options.header;","\t\tvar htmlToDraw = \"<thead><tr class='gridHeader'>\";","\t\tfor(var i in header){","\t\t\thtmlToDraw += \"<td>\" + lng(header[i].name) + \"</td>\";","\t\t}","\t\thtmlToDraw += \"</tr></thead>\";","\t\treturn htmlToDraw;","\t}","\t","\t/**Нарисовать строку.","\t * @param\t{String}\tidPrefix\tПрефикс идентификатора.","\t * @param\t{int}\t\ti\t\t\tИндекс строки","\t * @type\tString\t","\t * @return\t\t\t\t\t\t\tHTML код ячейки.","\t */","\tjsRecordSetClientView.prototype.drawTr = function(idPrefix, i){","\t\tvar id = idPrefix + i;","\t\tvar record = this.ctrl.model.recordSet[i];","\t\tvar htmlToDraw = \"<tr id='\" + id + \"' class='\";","\t\tvar header = this.options.header;","","\t\tif(i%2){","\t\t\thtmlToDraw += \"gridRow2\";","\t\t}","\t\telse{","\t\t\thtmlToDraw += \"gridRow1\";","\t\t}","\t\thtmlToDraw += \"'>\";","\t\tif(record){\t//защита для IE от массива с запятой в конце [1,2,3,] ","\t\t\tfor(var j in header){","\t\t\t\thtmlToDraw += this.drawTd(record, j);","\t\t\t}","\t\t}","\t\thtmlToDraw += \"</tr>\";","\t\treturn htmlToDraw;","\t}","\t","\t/**Нарисовать одну ячейку.","\t * @param\t{Object}\trecord\tТекущая запись.","\t * @param\t{int}\t\ti\t\tИндекс столбца.","\t * @type\tString","\t * @return\t\t\t\t\t\tHTML код ячейки.","\t */","\tjsRecordSetClientView.prototype.drawTd = function(record, i){","\t\tvar curHeader = this.options.header[i];","\t\tvar htmlToDraw;","\t\tvar curVal = record[curHeader.key];","\t\tif(curVal instanceof Object){","\t\t\tif(curVal.type ==\"radio\" || curVal.type == \"checkbox\"){","\t\t\t\tvar checked = curVal.value?\"checked\":\"\";","\t\t\t\tvar attr;","\t\t\t\textrattrs = curVal.extrattrs;","\t\t\t\thtmlToDraw = \"<td  cell-name='\" + lng(curHeader.name) + \"' ><input name='\" + curHeader.key + \"' value='\" + curVal.value + \"' type='\" + curVal.type + \"' \" + checked;","\t\t\t\tif(extrattrs){","\t\t\t\t\tfor(var i in extrattrs){","\t\t\t\t\t\thtmlToDraw\t+=\ti + \"='\" + extrattrs[i] + \"' \";","\t\t\t\t\t}","\t\t\t\t}","\t\t\t\thtmlToDraw += \" ></td>\";","\t\t\t}","\t\t}","\t\telse{","\t\t\tif(no(curVal) || curVal == \"\") curVal = \"&nbsp;\";","\t\t\thtmlToDraw = \"<td cell-name='\" + lng(curHeader.name) + \"'>\" + curVal + \"</td>\";","\t\t}","\t\treturn htmlToDraw;","\t}","\t","\t/**Нарисовать раскладку для потомков и вызвать их методы drawView.","\t * Перед вызовом метод создаёт представления потомков и добавляет их в интерфейс.","\t */","\tjsRecordSetClientView.prototype.drawEditView = function(){","\t\tvar childCtrls = this.ctrl.children;","\t\tvar options = {};","\t\tvar header = this.options.header;","\t\tvar id;","\t\tvar editBoxSel = this.options.editBoxSel?this.options.editBoxSel:this.myBoxSel;","\t\t","\t\t$.extend(options, this.options);","\t\t","\t\tif(childCtrls.length)\t$(this.myBoxSel).html(\"\");","\t\t\t","\t\toptions.myBoxSel = null;","\t\toptions.childBoxSel = null;","","\t\tif(childCtrls.length > 1){","\t\t\tvar htmlToAppend = \"\";","\t\t\tfor(var i in childCtrls){","\t\t\t\tid = \"rsEdit\" + getUID();","//\t\t\t\t$(editBoxSel).append(\"<div id='\" + id + \"'></div>\");","\t\t\t\thtmlToAppend += \"<div id='\" + id + \"'></div>\";","\t\t\t\thtmlToAppend += \"<div class='recordSetSpacer'></div>\";","//\t\t\t\toptions.viewBoxSel = this.myBoxSel + \">div:eq(\" + i + \")\";","\t\t\t\toptions.viewBoxSel = \"#\" + id;","\t\t\t\toptions.name = header[i];","\t\t\t\tchildCtrls[i].changeIface(this.viewInx, this, options);","//\t\t\t\tthis.ctrl.children[i].views[this.viewInx].drawView();","//\t\t\t\tthis.getChild(i).drawView();","\t\t\t}","\t\t\t$(editBoxSel).append(htmlToAppend);","\t\t}","\t\telse if(childCtrls.length){","\t\t\t\toptions.viewBoxSel = editBoxSel;","\t\t\t\toptions.name = header[0];","\t\t\t\tchildCtrls[0].changeIface(this.viewInx, this, options);","//\t\t\t\tthis.getChild(0).drawView();","\t\t}","\t\tjsRecordSetClientView.superclass.drawView.call(this);","\t}","","\t/**Обработчик DOM события click на конкретной строке.","\t * @param\tevent","\t */","\tjsRecordSetClientView.prototype.onrowclick = function(event){","\t\tthis.ctrl.event(\"recselect\", event.data.recordInx);","\t}","\t","\t/**Устарело. Оставляю только из боязни что-то сломать*/","\tjsRecordSetClientView.prototype.onrecselect = function(recordInx){","//\t\tthis.drawEditView(recordInx);","\t\treturn true;","\t}","","","\t/**Обработчик DOM события click на конкретной ячейке.","\t * @param\tevent","\t */","\tjsRecordSetClientView.prototype.oncellclick = function(event){","\t\tthis.ctrl.event(\"cellselect\", event.data);","\t\tevent.stopPropagation();","\t\treturn true;","\t}","","\tthis.bind(\"recselect\", this.onrecselect);","}","extend(jsRecordSetClientView, jsCSideView);","/**"," * @fileoverview Модуль fieldset."," * Данный модуль осуществляет логическое и визуальное объединение набора элементов."," * Как этим пользоваться:"," * <ul>"," * \t<li>"," * \tСоздать класс контроллера, прозводный от jsFieldSetController.<br>"," * \t\tВ нём:"," * \t\t<ul>"," * \t\t\t<li>"," * \t\t\tОбъявить интерфейсы."," * \t\t\t</li>"," * \t\t\t<li>"," * \t\t\tСоздать потомков."," * \t\t\t</li>"," * \t\t</ul>"," * \t</li>"," * \t<li>"," * \tСоздать класс представления, произодный от jsFieldSetClientView.<br>"," * \t\tВ нём:"," * \t\t<ul>"," * \t\t\t<li>"," * \t\t\tПроставить опции потомков."," * \t\t\t</li>"," * \t\t</ul>"," * \t</li>"," * </ul>"," * Пример использования в тестовом наборе."," */","","/**Создаёт новый экземпляр класса jsFieldSetController"," * @class Набор полей. Объявляет интерфейс клиентской стороны, в котором и содержится весь функционал."," * @constructor"," */ ","function jsFieldSetController(){","\tjsFieldSetController.superclass.constructor.call(this);","\t","\tthis.ifaceTypes.client = {type: jsFieldSetClientView};","\tthis.ifaceTypes.popup = {type: jsFieldSetPopUpClientView};","\tthis.ifaceTypes.server = {type: jsSSideView};","}","extend(jsFieldSetController, jsController);","","/**Создаёт новый экземпляр класса jsFieldSetClientView"," * @class\tВизуальное объединение полей и кнопки, на которые можно вешать различные обработчики."," * \t\t\tИспользование:<br>"," * \t\t\t1. Создать производный класс.<br>"," * \t\t\t2. В производном классе описать опции потомков, которые будут объединяться под эти набором полей.<br>"," * \t\t\t3. Создать контроллер, в котором объявить интерфейсы, создать потомков и прочее."," * @constructor"," * @param\t{int}\t\t\tviewInx\tИндекс интерфейса, к которому будет принадлежать представление."," * @param\t{jsController}\tctrl\tСсылка на контроллер."," * @param\t{Object}\t\toptions\tОпции представления."," * \t\t\t\t\t\t\tОпции:<br>"," * \t\t\t\t\t\t\t<ul>"," * \t\t\t\t\t\t\t\t<li>"," * \t\t\t\t\t\t\t\t\tbuttons - объект, описывающий кнопку."," * \t\t\t\t\t\t\t\t\tФормат объекта: {name:&lt;name&gt;, value:&lt;value&gt;, handler:&lt;handler&gt;}."," * \t\t\t\t\t\t\t\t\t<ul>"," * \t\t\t\t\t\t\t\t\t\t<li>name - атрибут тега button.</li>"," * \t\t\t\t\t\t\t\t\t\t<li>value - атрибут тега button.</li>"," * \t\t\t\t\t\t\t\t\t\t<li>handler - обработчик клика на кнопку.</li>"," * \t\t\t\t\t\t\t\t\t</ul>"," * \t\t\t\t\t\t\t\t</li>"," * \t\t\t\t\t\t\t\t<li>title - Заголовок. Имеет значение при simple=false и nothing=false."," * \t\t\t\t\t\t\t\t\tФормат: {type: &lt;\"link\"/null&gt;, name: &lt;text&gt;, handler: &lt;метод класса - обработчик клика при type == \"link\"&gt;}"," * \t\t\t\t\t\t\t\t</li>"," * \t\t\t\t\t\t\t\t<li>simple - простой стиль fieldset.</li>"," * \t\t\t\t\t\t\t\t<li>nothing - ничего не рисует. Эта опция используется чтобы объединить логически несколько полей.</li>"," * \t\t\t\t\t\t\t\t<li>"," * \t\t\t\t\t\t\t\t\ttabs - fieldset с вкладками. При включенной опции tabs дочерние представления отрисовываются"," * \t\t\t\t\t\t\t\t\tна вкладках (по вкладке на \"ребёнка\"). Название вкладки берётся из опции title дочернего представления."," * \t\t\t\t\t\t\t\t\tВ качестве дочернего элемента удобно использовать jsFieldSet, установив его представлению опцию nothing."," * \t\t\t\t\t\t\t\t\tПри включенной опции nothing вкладки не предусмотрены."," * \t\t\t\t\t\t\t\t\tШаги, необходимые для добавления поддержки вкладок с новым стилем fieldset:"," * \t\t\t\t\t\t\t\t\t<ul>"," * \t\t\t\t\t\t\t\t\t\t<li>Для отрисовки панели вкладок поместить вызов метода drawTabBar в нужное место drawView.</li>"," * \t\t\t\t\t\t\t\t\t\t<li>Для того, чтобы вкладки были \"кликабельны\" поместить вызов метода setTabClicks в нужное место drawView.</li>"," * \t\t\t\t\t\t\t\t\t\t<li>Создать CSS файл fieldset_tabs_xxx.css</li>"," * \t\t\t\t\t\t\t\t\t\t<li>Создать набор рисунков для CSS в image/tabs_xxx</li>"," * \t\t\t\t\t\t\t\t\t\t<li>Добавить возможность выключения файлов CSS и рисунков из сборки редактированием jhmvc.kconfig и build/modlist.sh</li>"," * \t\t\t\t\t\t\t\t\t</ul>"," * \t\t\t\t\t\t\t\t</li>"," * \t\t\t\t\t\t\t\t<li>"," * \t\t\t\t\t\t\t\t\tpages - fieldset, разбитый на страницы, как в google."," * \t\t\t\t\t\t\t\t\t<ul>"," * \t\t\t\t\t\t\t\t\t\t<li>"," * \t\t\t\t\t\t\t\t\t\t\tprev - языковой ключ ссылки \"Предыдующая\"."," * \t\t\t\t\t\t\t\t\t\t</li>"," * \t\t\t\t\t\t\t\t\t\t<li>"," * \t\t\t\t\t\t\t\t\t\t\tnext - языковой ключ ссылки \"Следующая\"."," * \t\t\t\t\t\t\t\t\t\t</li>"," * \t\t\t\t\t\t\t\t\t\t<li>"," * \t\t\t\t\t\t\t\t\t\t\tmaxPageLinks - Максимальное количество отображаемых ссылок на страницы. Если не задано, то количество ничем не ограничено."," * \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tПока не поддерживается!"," * \t\t\t\t\t\t\t\t\t\t</li>"," * \t\t\t\t\t\t\t\t\t</ul>"," * \t\t\t\t\t\t\t\t</li>"," * \t\t\t\t\t\t\t\t<li>"," * \t\t\t\t\t\t\t\t\twizard - fieldset, позволяющий перемещаться по своим потомкам с помощью кнопок \"next\", \"prev\"."," * \t\t\t\t\t\t\t\t\tВключение опции wizard не подразумевает автоматической добавление кнопок \"next\", \"prev\"."," * \t\t\t\t\t\t\t\t\tТ.к. реакция на кнопки может сильно отличаться в зависимости от вида мастера, то кнопки надо объявлять"," * \t\t\t\t\t\t\t\t\tсамостаятельно с помощью опции buttons. Класс предоставляет метод switchChild для перемещения по шагам мастера,"," * \t\t\t\t\t\t\t\t\tкоторый можно вызывать после совершения всех специфических действий в обработчике нажатия на кнопку."," * \t\t\t\t\t\t\t\t\tОпция wizard ведёт себя аналогично опциям pages и tabs, за исключением того, что не рисует никаких дополнительных панелей."," * \t\t\t\t\t\t\t\t\tТекущий шаг мастера (видимый потомок) определяется свойством activeTab и изменяется методом switchChild."," * \t\t\t\t\t\t\t\t</li>"," * \t\t\t\t\t\t\t\t<li>"," * \t\t\t\t\t\t\t\t\tslider - fieldset, позволяющий сворачивать/разворачивать содержимое."," * \t\t\t\t\t\t\t\t\tСледующие опции имеют значение только при включенной опции slider:"," * \t\t\t\t\t\t\t\t\t<ul>"," * \t\t\t\t\t\t\t\t\t\t<li>"," * \t\t\t\t\t\t\t\t\t\t\tnocollapse - Слайдер вырождается в обычный разделитеть."," * \t\t\t\t\t\t\t\t\t\t</li>"," * \t\t\t\t\t\t\t\t\t\t<li>"," * \t\t\t\t\t\t\t\t\t\t\tcollapsed - Начальное состояние слайдера свёрнутое."," * \t\t\t\t\t\t\t\t\t\t</li>"," * \t\t\t\t\t\t\t\t\t\t<li>"," * \t\t\t\t\t\t\t\t\t\t\ttitle - Заголовок слайдера. Не путать с одноимённой опцией, которая задаёт заголовок окна. Этот title имеет формат строки, а не объекта."," * \t\t\t\t\t\t\t\t\t\t</li>"," * \t\t\t\t\t\t\t\t\t\t<li>"," * \t\t\t\t\t\t\t\t\t\t\tdescText - Текст описания слайдера. Распологается под заголовком."," * \t\t\t\t\t\t\t\t\t\t</li>"," * \t\t\t\t\t\t\t\t\t\t<li>"," * \t\t\t\t\t\t\t\t\t\t\tdescClass - Класс CSS описания слайдера. Задаёт стиль описания слайдера."," * \t\t\t\t\t\t\t\t\t\t</li>"," * \t\t\t\t\t\t\t\t\t</ul>"," * \t\t\t\t\t\t\t\t</li> "," * \t\t\t\t\t\t\t</ul>"," */","function jsFieldSetClientView(ctrl, viewInx, options){","\tif(options){","\t\t//Копирование опций не требующих наследования. Сама опция обнуляется что-бы пресечь наследование.","\t\tvar title = options.title;","\t\tvar tabs  = options.tabs;","\t\tvar wizard  = options.wizard;","\t\toptions.title = \"\";","\t\toptions.tabs = false;","\t\toptions.wizard = false;","\t}","\tjsFieldSetClientView.superclass.constructor.call(this, ctrl, viewInx, options);","\tif(options){","\t\t//Восстановить опции не требующих наследования","\t\tthis.options.title = title;","\t\tthis.options.tabs = tabs;","\t\tthis.options.wizard = wizard;","\t}\t\t","","\t/**Отрисовка fieldset.","\t * Метод производного класса должен вызывать его в начале.","\t */","\tjsFieldSetClientView.prototype.drawView = function(){","\t\tvar htmlToDraw;","\t\tvar childCtrls = this.ctrl.children;","\t\tvar button;","\t\tvar options = this.options;","\t\tvar title = options.title?options.title:\"&nbsp;\";","\t\tvar obj = null;","\t\tvar\thtmlToDraw = \"\";","\t\t","\t\tif(options.slider){","\t\t\tif(options.nocollapse){","\t\t\t\thtmlToDraw\t\t+= \t\"<div class='fieldSetSlider fieldSetSliderNoCollapse'>\";","\t\t\t}","\t\t\telse{","\t\t\t\tif(options.collapsed){","\t\t\t\t\thtmlToDraw\t\t+= \t\"<div class='fieldSetSlider fieldSetSliderCollapsed'>\";","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\thtmlToDraw\t\t+= \t\"<div class='fieldSetSlider fieldSetSliderExpanded'>\";","\t\t\t\t}","\t\t\t}","\t\t\thtmlToDraw\t\t+= \t\"<div>\";","","\t\t\tif(options.title){","\t\t\t\thtmlToDraw\t+=\tlng(options.title);","\t\t\t}","\t\t\thtmlToDraw\t\t+=\t\"</div></div>\";\t\t//конец fieldSetSlider","\t\t\tif(options.descClass){","\t\t\t\thtmlToDraw\t+=\t\"<div class='\" + options.descClass + \"'>\";","\t\t\t}","\t\t\telse{","\t\t\t\thtmlToDraw\t+=\t\"<div class='fieldSetSliderBottom'>\";","\t\t\t}","\t\t\tif(options.descText){","\t\t\t\thtmlToDraw\t+=\t\"<div>\" + lng(options.descText) + \"</div>\";","\t\t\t}","\t\t\thtmlToDraw\t\t+=\t\"</div>\";\t\t//конец fieldSetSliderBottom","\t","\t\t}","\t\tif(options.slider || options.nothing){","\t\t\tif(options.slider && options.collapsed && !options.nocollapse){","\t\t\t\thtmlToDraw\t+=\t\"<div style='display:none'></div>\";","\t\t\t}","\t\t\telse{","\t\t\t\thtmlToDraw\t+=\t\"<div></div>\";","\t\t\t}","\t\t\tif(options.pages && childCtrls.length > 1){","\t\t\t\tthis.pageBarSel = this.viewBoxSel + \">div.fieldSetPages\";","\t\t\t\thtmlToDraw\t+=\tthis.drawPageBar();","\t\t\t}","","\t\t\tif(this.options.buttons){","\t\t\t\tthis.buttonBarSel = this.viewBoxSel + \">div.fieldSetMainButtons\";","\t\t\t\thtmlToDraw\t+=\t\"<div class='fieldSetMainButtons'>\";","\t\t\t\thtmlToDraw\t+=\tthis.drawButtons();","\t\t\t\thtmlToDraw\t+=\t\"</div>\";","\t\t\t}","","\t\t\t$(this.viewBoxSel).html(htmlToDraw);","","\t\t\tif(options.slider){","\t\t\t\tthis.childBoxSel = this.viewBoxSel + \">div:eq(2)\";","\t\t\t}","\t\t\telse{","\t\t\t\tthis.childBoxSel = this.viewBoxSel + \">div:eq(0)\";","\t\t\t}","\t\t\t","\t\t\tthis.options.childBoxSel = this.childBoxSel;","","\t\t\tif(options.pages && childCtrls.length > 1){","\t\t\t\tthis.setPageClicks();","\t\t\t}","\t\t\tthis.setButtonClicks();","\t\t\t","\t\t\tif(options.slider && !options.nocollapse){","\t\t\t\t$(this.viewBoxSel + \">div.fieldSetSlider\").bind(\"click\", ","\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{},","\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontext(this).callback(this.toggleSlider));","\t\t\t}","\t\t}","\t\telse if(options.simple){","\t\t\tif(options.tabs && childCtrls.length > 1){","\t\t\t\tthis.tabBarSel = this.viewBoxSel + \">div.fieldSetMainTabsSimple\"","\t\t\t\thtmlToDraw\t+=\t\t\"<div class='fieldSetMainTabsSimple'>\";","\t\t\t\thtmlToDraw\t+=\t\tthis.drawTabBar();","\t\t\t\thtmlToDraw\t+=\t\t\"</div>\";","\t\t\t}","\t\t\thtmlToDraw += \"<div><fieldset></fieldset></div><div class='fieldSetMainButtons'>\";","\t\t\thtmlToDraw += this.drawButtons();","\t\t\thtmlToDraw += \"</div>\";","","\t\t\tif(options.pages && childCtrls.length > 1){","\t\t\t\tthis.pageBarSel = this.viewBoxSel + \">div.fieldSetPages\";","\t\t\t\thtmlToDraw\t+=\t\tthis.drawPageBar();","\t\t\t}","","\t\t\t$(this.viewBoxSel).html(htmlToDraw);","","\t\t\t","\t\t\tif(options.tabs && childCtrls.length > 1){","\t\t\t\tthis.buttonBarSel = this.viewBoxSel + \">div:eq(2)\";","\t\t\t}","\t\t\telse{","\t\t\t\tthis.buttonBarSel = this.viewBoxSel + \">div:eq(1)\";","\t\t\t}","\t\t\tthis.setButtonClicks();","","\t\t\tif(options.tabs){","\t\t\t\tthis.setTabClicks();","\t\t\t}","\t\t\telse if(options.pages && childCtrls.length > 1){","\t\t\t\tthis.setPageClicks();","\t\t\t}","","\t\t\tthis.childBoxSel = this.viewBoxSel + \">div>fieldset\";","\t\t\tthis.options.childBoxSel = this.childBoxSel;","\t\t}","\t\telse{","\t\t\tif(options.title){","\t\t\t\tif(options.title.type == \"link\"){","\t\t\t\t\ttitle = \"<font class='fieldSetTitleLink'>\" + lng(options.title.name) + \"</font>\"","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\ttitle = \"<font class='fieldSetTitleText'>\" + lng(options.title.name) + \"</font>\"","\t\t\t\t}","\t\t\t}","\t\t\telse{","\t\t\t\ttitle = \"&nbsp;\";","\t\t\t}","\t","\t\t\t//раскладка viewBoxSel","\t\t\thtmlToDraw \t= \t\t\t\"<div class='fieldSetMainPath'><div style='display: inline; vertical-align: middle;'></div>\"","\t\t\t\t\t\t+ \t\t\t\"<div style='margin-left: 4px; display: inline;'>\"","\t//\t\t\t\t\t+ \t\t\t\"<font class='fieldSetTitle'>\"","\t\t\t\t\t\t+ \t\t\ttitle","\t//\t\t\t\t\t+ \t\t\t\"</font>\"","\t\t\t\t\t\t+ \t\t\t\"</div></div>\"","\t\t\t\t\t\t+ \t\t\t\"<div class='fieldSetMainContentContainer'>\";","\t\t\tif(options.tabs && childCtrls.length > 1){","\t\t\t\tthis.tabBarSel = this.viewBoxSel + \">div.fieldSetMainContentContainer>div.fieldSetMainTabs\"","\t\t\t\thtmlToDraw\t+=\t\t\"<div class='fieldSetMainTabs'>\";","\t\t\t\thtmlToDraw\t+=\t\tthis.drawTabBar();","\t\t\t\thtmlToDraw\t+=\t\t\"</div>\";","\t\t\t}","\t\t\thtmlToDraw  +=\t\t\t\"<div class='fieldSetMainContent'>\"","\t\t\t\t\t\t+ \t\t\t\"<div class='fieldSetGeneral' style='display: block;'>\"","\t\t\t\t\t\t+ \t\t\t\"</div></div>\"","\t\t\t\t\t\t+ \t\t\t\"<div class='fieldSetMainButtons'>\";","\t","\t\t\tif(options.pages && childCtrls.length > 1){","\t\t\t\tthis.pageBarSel = this.viewBoxSel + \" div.fieldSetPages\";","\t\t\t\thtmlToDraw\t+=\t\tthis.drawPageBar();","\t\t\t}","\t\t\thtmlToDraw \t+= this.drawButtons();","\t\t\thtmlToDraw\t+= \t\t\"</div></div>\";","","\t\t\t$(this.viewBoxSel).html(htmlToDraw);","\t\t\t","\t\t\tthis.buttonBarSel = this.viewBoxSel + \">div.fieldSetMainContentContainer>div.fieldSetMainButtons\";","\t\t\tthis.setButtonClicks();","\t\t\t","\t\t\tif(options.title && options.title.type == \"link\"){","\t\t\t\t$(this.viewBoxSel + \">div.fieldSetMainPath>div>font\").bind(\"click\", ","\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{},","\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontext(this).callback(options.title.handler));","\t\t\t}","\t\t\tif(options.tabs){","\t\t\t\tthis.setTabClicks();","\t\t\t}","\t\t\telse if(options.pages && childCtrls.length > 1){","\t\t\t\tthis.setPageClicks();","\t\t\t}","\t\t\t","\t\t\tthis.childBoxSel = this.viewBoxSel + \">div.fieldSetMainContentContainer>div.fieldSetMainContent>div.fieldSetGeneral\";","\t\t\tthis.options.childBoxSel = this.childBoxSel;","\t\t}","","\t\t\t","\t\tif(options.pages && childCtrls.length > 1){","\t\t\tthis.switchPage(this.activeTab);","\t\t}","\t\tif(options.wizard && childCtrls.length > 1){","\t\t\tthis.switchChild(this.activeTab);","\t\t}","","\t\t//раскладка childBoxSel","\t\tif(childCtrls.length)\t$(this.childBoxSel).html(\"\");","\t\tvar htmlToAppend = \"\";","\t\tvar j = 0;","\t\tif(childCtrls.length > 1){","\t\t\tfor(var i in childCtrls){","//\t\t\t\t$(this.childBoxSel).append(\"<div></div>\");","\t\t\t\thtmlToAppend += \"<div></div>\";","\t\t\t\tobj = this.getChild(i);","\t\t\t\tif(!(obj instanceof jsCSideView)) continue;","\t\t\t\tif(options.tabs || options.pages || options.wizard){","\t\t\t\t\tobj.viewBoxSel = this.childBoxSel + \">div:eq(\" + j + \")\";","\t\t\t\t}","\t\t\t\telse{","//\t\t\t\t\t$(this.childBoxSel).append(\"<div class='fieldSetSpacer'></div>\");","\t\t\t\t\thtmlToAppend += \"<div class='fieldSetSpacer'></div>\";","\t\t\t\t\tobj.viewBoxSel = this.childBoxSel + \">div:eq(\" + j*2 + \")\";","\t\t\t\t}","\t\t\t\tobj.options.viewBoxSel = obj.viewBoxSel;","\t\t\t\tj++","\t\t\t}","","\t\t\tif(options.tabs || options.pages || options.wizard){","\t\t\t\tfor(var i=0;i<this.ctrl.children.length;i++){","\t\t\t\t\tobj = this.getChild(i);","\t\t\t\t\tif(obj instanceof jsCSideView){","\t\t\t\t\t\tobj.options.hide = true;","\t\t\t\t\t}","\t\t\t\t}","\t\t\t\tthis.getChild(this.activeTab).options.hide = false;","\t\t\t}","","\t\t\t$(this.childBoxSel).append(htmlToAppend);","\t\t}","\t\telse if(childCtrls.length){","\t\t\tobj = this.getChild(0);","\t\t\tif(obj instanceof jsCSideView){","\t\t\t\tobj.viewBoxSel = this.childBoxSel;","\t\t\t\tobj.options.viewBoxSel = obj.viewBoxSel;","\t\t\t}","\t\t}","","\t\tjsFieldSetClientView.superclass.drawView.call(this);","\t}","\t","","\t/**Переключить состояние слайдера.*/","\tthis.toggleSlider = function(){","\t\tvar options = this.options;","\t\tvar obj = $(options.viewBoxSel + \">div.fieldSetSlider\");","\t\tif(options.collapsed){","\t\t\tobj.removeClass(\"fieldSetSliderCollapsed\");","\t\t\tobj.addClass(\"fieldSetSliderExpanded\");","\t\t\t$(options.childBoxSel).css(\"display\", \"\");","\t\t\toptions.collapsed = false;","\t\t}","\t\telse{","\t\t\tobj.removeClass(\"fieldSetSliderExpanded\");","\t\t\tobj.addClass(\"fieldSetSliderCollapsed\");","\t\t\t$(options.childBoxSel).css(\"display\", \"none\");","\t\t\toptions.collapsed = true;","\t\t}","\t}","\t","\t/**Скрыть кнопку","\t * @param\t{String} name\tИмя, которое передавалось для кнопки в опциях (options.name).","\t */","\tjsFieldSetClientView.prototype.hideButton = function(name){","\t\tif(this.buttons){","\t\t\t$(this.buttons[name].sel).css(\"display\", \"none\");","\t\t}\t\t\t\t","\t}","","\t/**Показать кнопку.","\t * @param\t{String} name\tИмя, которое передавалось для кнопки в опциях (options.name).","\t */","\tjsFieldSetClientView.prototype.showButton = function(name){","\t\tif(this.buttons){","\t\t\t$(this.buttons[name].sel).css(\"display\", \"\");","\t\t}\t\t\t\t","\t}","\t","\t/**Запретить кнопку","\t * @param\t{String} name\tИмя, которое передавалось для кнопки в опциях (options.name).","\t */","\tjsFieldSetClientView.prototype.disableButton = function(name){","\t\tif(this.buttons){","\t\t\t$(this.buttons[name].sel).attr(\"disabled\", true);","\t\t}\t\t\t\t","\t}","","\t/**Разрешить кнопку.","\t * @param\t{String} name\tИмя, которое передавалось для кнопки в опциях (options.name).","\t */","\tjsFieldSetClientView.prototype.enableButton = function(name){","\t\tif(this.buttons){","\t\t\t$(this.buttons[name].sel).attr(\"disabled\", false);","\t\t}\t\t\t\t","\t}","","\t/**Обновить кнопки.","\t */","\tjsFieldSetClientView.prototype.updateButtons = function(){","\t\tif(this.options.buttons){","\t\t\t$(this.buttonBarSel).html(this.drawButtons());","\t\t\tthis.setButtonClicks();","\t\t}","\t\telse{","\t\t\t$(this.buttonBarSel).html(\"\");","\t\t}","\t}","\t","\t/**Показать вкладку.","\t * Подсвечивает вкладку и показывает её содержимое.","\t * @param\t{int}\t\ttabInx\t\tИндекс вкладки.","\t */","\tjsFieldSetClientView.prototype.showTab = function(tabInx){","\t\tvar tabSel = this.tabBarSel + \">span:eq(\" + tabInx + \")\";","\t\tvar prevTabInx = tabInx - 1;","\t\tvar prevTabSel = this.tabBarSel + \">span:eq(\" + prevTabInx + \")\";","\t\tif(tabInx == 0){","\t\t\t$(tabSel).removeClass(\"tabStartOff\");","\t\t\t$(tabSel).addClass(\"tabStartOn\");","\t\t\t$(tabSel + \">span:eq(1)\").removeClass(\"tabBgOff\");","\t\t\t$(tabSel + \">span:eq(1)\").addClass(\"tabBgOn\");","\t\t\t$(tabSel + \">span:eq(2)\").removeClass(\"tabMidOff\");","\t\t\t$(tabSel + \">span:eq(2)\").addClass(\"tabMidLeftOn\");","\t\t}","\t\telse if(tabInx > 0 && tabInx < this.ctrl.children.length - 1){","\t\t\t$(prevTabSel + \">span:last\").removeClass(\"tabMidRightOff\");","\t\t\t$(prevTabSel + \">span:last\").addClass(\"tabMidRightOn\");","\t\t\t$(tabSel + \">span:eq(0)\").removeClass(\"tabBgOff\");","\t\t\t$(tabSel + \">span:eq(0)\").addClass(\"tabBgOn\");","\t\t\t$(tabSel + \">span:eq(1)\").removeClass(\"tabMidOff\");","\t\t\t$(tabSel + \">span:eq(1)\").addClass(\"tabMidLeftOn\");","\t\t\t","\t\t}","\t\telse if(tabInx == this.ctrl.children.length - 1){","\t\t\t$(prevTabSel + \">span:last\").removeClass(\"tabMidRightOff\");","\t\t\t$(prevTabSel + \">span:last\").addClass(\"tabMidRightOn\");","\t\t\t$(tabSel + \">span:eq(0)\").removeClass(\"tabBgOff\");","\t\t\t$(tabSel + \">span:eq(0)\").addClass(\"tabBgOn\");","\t\t\t$(tabSel + \">span:eq(1)\").removeClass(\"tabEndOff\");","\t\t\t$(tabSel + \">span:eq(1)\").addClass(\"tabEndOn\");","\t\t}","\t\tthis.getChild(tabInx).show();","\t}","\t","\t/**Cкрыть  вкладку.","\t * Приглушает вкладку и скрывает её содержимое.","\t * @param\t{int}\t\ttabInx\t\tИндекс вкладки.","\t */","\tjsFieldSetClientView.prototype.hideTab = function(tabInx){","\t\tvar tabSel = this.tabBarSel + \">span:eq(\" + tabInx + \")\";","\t\tvar prevTabInx = tabInx - 1;","\t\tvar prevTabSel = this.tabBarSel + \">span:eq(\" + prevTabInx + \")\";","\t\tif(tabInx == 0){","\t\t\t$(tabSel).removeClass(\"tabStartOn\");","\t\t\t$(tabSel).addClass(\"tabStartOff\");","\t\t\t$(tabSel + \">span:eq(1)\").removeClass(\"tabBgOn\");","\t\t\t$(tabSel + \">span:eq(1)\").addClass(\"tabBgOff\");","\t\t\t$(tabSel + \">span:eq(2)\").removeClass(\"tabMidLeftOn\");","\t\t\t$(tabSel + \">span:eq(2)\").addClass(\"tabMidOff\");","\t\t}","\t\telse if(tabInx > 0 && tabInx < this.ctrl.children.length - 1){","\t\t\t$(prevTabSel + \">span:last\").removeClass(\"tabMidRightOn\");","\t\t\t$(prevTabSel + \">span:last\").addClass(\"tabMidRightOff\");","\t\t\t$(tabSel + \">span:eq(0)\").removeClass(\"tabBgOn\");","\t\t\t$(tabSel + \">span:eq(0)\").addClass(\"tabBgOff\");","\t\t\t$(tabSel + \">span:eq(1)\").removeClass(\"tabMidLeftOn\");","\t\t\t$(tabSel + \">span:eq(1)\").addClass(\"tabMidOff\");","\t\t}","\t\telse if(tabInx == this.ctrl.children.length - 1){","\t\t\t$(prevTabSel + \">span:last\").removeClass(\"tabMidRightOn\");","\t\t\t$(prevTabSel + \">span:last\").addClass(\"tabMidRightOff\");","\t\t\t$(tabSel + \">span:eq(0)\").removeClass(\"tabBgOn\");","\t\t\t$(tabSel + \">span:eq(0)\").addClass(\"tabBgOff\");","\t\t\t$(tabSel + \">span:eq(1)\").removeClass(\"tabEndOn\");","\t\t\t$(tabSel + \">span:eq(1)\").addClass(\"tabEndOff\");","\t\t}","\t\tthis.getChild(tabInx).hide();","\t}","\t","\t/**Переключиться на вкладку.","\t * Переключается на новую вкладку.","\t * @param\t{int}\t\ttabInx\t\tИндекс вкладки.","\t */","\tjsFieldSetClientView.prototype.switchTab = function(tabInx){","\t\tthis.hideTab(this.activeTab);","\t\tthis.showTab(tabInx);","\t\tthis.activeTab = tabInx;","\t}","\t","\t/**Переключиться на страницу.","\t * @param\t{int}\t\tpageInx\t\tИндекс страницы.","\t */","\tjsFieldSetClientView.prototype.switchPage = function(pageInx){","\t\tvar pos = new Number(this.activeTab) + 1;","\t\t$(this.pageBarSel + \">a:eq(\" + pos + \")\").removeClass(\"fieldSetPageActive\");","\t\tpos = new Number(pageInx) + 1;","\t\t$(this.pageBarSel + \">a:eq(\" + new Number(pageInx + 1) + \")\").addClass(\"fieldSetPageActive\");","\t\tpos = this.ctrl.children.length + 1;","\t\tif(pageInx == 0){","\t\t\t$(this.pageBarSel + \">a:eq(0)\").css(\"display\", \"none\");","\t\t\t$(this.pageBarSel + \">a:eq(\" + pos + \")\").css(\"display\", \"\");","\t\t}","\t\telse if(pageInx == this.ctrl.children.length - 1){","\t\t\t$(this.pageBarSel + \">a:eq(0)\").css(\"display\", \"\");","\t\t\t$(this.pageBarSel + \">a:eq(\" + pos + \")\").css(\"display\", \"none\");","\t\t}","\t\telse{","\t\t\t$(this.pageBarSel + \">a:eq(0)\").css(\"display\", \"\");","\t\t\t$(this.pageBarSel + \">a:eq(\" + pos + \")\").css(\"display\", \"\");","\t\t}","\t\tthis.switchChild(pageInx);","\t}","\t","\t/**Изменить видимого потомка.","\t * @param\tchildId\t\tИндекс или алиас потомка.","\t */","\tjsFieldSetClientView.prototype.switchChild = function(childId){","\t\tthis.getChild(this.activeTab).hide();","\t\tvar child = this.getChild(childId);","\t\tchild.show();","\t\tthis.activeTab = child.ctrl.thisInx;","\t}","\t","\t/**Сгенерировать HTML код панели вкладок.","\t * @return\tHTML код панели вкладок.","\t */","\tjsFieldSetClientView.prototype.drawTabBar = function(){","\t\tvar childrenLength = this.ctrl.children.length;","\t\tvar htmlToDraw\t=\t\t\"<span class='tabStart tabStartOn'>\"","\t\t\t\t\t\t+\t\t\"<span>\"","\t\t\t\t\t\t+\t\t\"</span>\"","\t\t\t\t\t\t+\t\t\"<span class='fieldSetTabText tabBgOn'>\"","\t\t\t\t\t\t+\t\t\"<a>\" + lng(this.getChild(0).options.title) + \"</a>\"","\t\t\t\t\t\t+\t\t\"</span>\"","\t\t\t\t\t\t+\t\t\"<span class='tabMidLeft tabMidLeftOn'>\"","\t\t\t\t\t\t+\t\t\"</span>\"","\t\t\t\t\t\t+\t\t\"</span>\";","\t\tfor(var i=1;i<childrenLength-1;i++){","\t\t\thtmlToDraw\t+=\t\t\"<span>\"","\t\t\t\t\t\t+\t\t\"<span class='fieldSetTabText tabBgOff'>\"","\t\t\t\t\t\t+\t\t\"<a>\" + lng(this.getChild(i).options.title) + \"</a>\"","\t\t\t\t\t\t+\t\t\"</span>\"","\t\t\t\t\t\t+\t\t\"<span class='tabMidLeft tabMidOff'>\"","\t\t\t\t\t\t+\t\t\"</span>\"","\t\t\t\t\t\t+\t\t\"</span>\";","\t\t}","\t\thtmlToDraw\t\t+=\t\t\"<span>\"","\t\t\t\t\t\t+\t\t\"<span class='fieldSetTabText tabBgOff'>\"","\t\t\t\t\t\t+\t\t\"<a>\" + lng(this.getChild(childrenLength-1).options.title) + \"</a>\"","\t\t\t\t\t\t+\t\t\"</span>\"","\t\t\t\t\t\t+\t\t\"<span class='tabEnd tabEndOff'>\"","\t\t\t\t\t\t+\t\t\"</span>\"","\t\t\t\t\t\t+\t\t\"</span>\";","\t\treturn htmlToDraw;","\t}","","\t/**Сгенерировать HTML код панели переключения страниц.","\t * @return\tHTML код панели вкладок.","\t */","\tjsFieldSetClientView.prototype.drawPageBar = function(){","\t\tvar childrenLength = this.ctrl.children.length;","\t\tvar options = this.options;","","\t\tvar\thtmlToDraw = \"<div class='fieldSetPages'>\";","\t\thtmlToDraw\t+=\t\"<a class='fieldSetPrev'>\";","\t\tif(!no(options.prev)){","\t\t\thtmlToDraw\t+=\tlng(this.options.prev);","\t\t}","\t\thtmlToDraw\t+=\t\"</a>\";","\t\tfor(var i in this.ctrl.children){","\t\t\thtmlToDraw\t+=\t\"<a>\" + (new Number(i) + 1) + \"</a>\";","\t\t}","\t\thtmlToDraw\t+=\t\"<a class='fieldSetNext'>\";","\t\tif(!no(options.next)){","\t\t\thtmlToDraw\t+=\tlng(this.options.next);","\t\t}","\t\thtmlToDraw\t+=\t\"</a>\";","\t\thtmlToDraw\t+=\t\"</div>\";","","\t\treturn htmlToDraw;","\t}","","\t/*Нарисовать кнопки*/","\tthis.drawButtons = function(){","\t\tvar options = this.options;","\t\tvar htmlToDraw = \"\";","\t\tif(options.buttons){","\t\t\tfor(var i=0;i<options.buttons.length-1;i++){","\t\t\t\tbutton = options.buttons[i];","\t\t\t\tif(button){\t\t//защита для IE от массива с запятой в конце [1,2,3,] ","\t\t\t\t\thtmlToDraw \t+= \"<input name='\" + button.name + \"' value='\" + lng(button.value) + \"' class='fieldSetButton' type='button'>&nbsp;\";","\t\t\t\t}","\t\t\t}","\t\t\tbutton = options.buttons[i];","\t\t\tif(button){\t\t//защита для IE от массива с запятой в конце [1,2,3,] ","\t\t\t\thtmlToDraw \t+= \"<input name='\" + button.name + \"' value='\" + lng(button.value) + \"' class='fieldSetButton' type='button'>\";","\t\t\t}","\t\t}","\t\treturn htmlToDraw;","\t}","\t","\t/**Обработчик DOM события от клика на ссылке вкладки.","\t * В event.data.tabInx приходит индекс вкладки.","\t * @param\tevent","\t */","\tjsFieldSetClientView.prototype.ontabclick = function(event){","\t\tthis.switchTab(event.data.tabInx);","\t}\t","","\t/**Обработчик DOM события от клика на ссылке страницы.","\t * В event.data.pageInx приходит индекс вкладки.","\t * @param\tevent","\t */","\tjsFieldSetClientView.prototype.onpageclick = function(event){","\t\tif(event.data.prev){","\t\t\tthis.switchPage(this.activeTab - 1);","\t\t}","\t\telse if(event.data.next){","\t\t\tthis.switchPage(this.activeTab + 1);","\t\t}","\t\telse{","\t\t\tthis.switchPage(event.data.pageInx);","\t\t}","\t}\t","","\t/**Проставляет обработчики события \"click\" на вкладках.","\t */","\tjsFieldSetClientView.prototype.setTabClicks = function(){","\t\tvar tabLinkSel = this.tabBarSel + \">span:eq(0)>span:eq(1)>a\";","\t\tfor(var i=1;i<this.ctrl.children.length;i++){","\t\t\t$(tabLinkSel).bind(\"click\", {tabInx:i-1}, context(this).callback(this.ontabclick));","\t\t\ttabLinkSel = this.tabBarSel + \">span:eq(\" + i + \")>span:eq(0)>a\";","\t\t}","\t\t$(tabLinkSel).bind(\"click\", {tabInx:this.ctrl.children.length-1}, context(this).callback(this.ontabclick));","\t}","","\t/**Проставляет обработчики события \"click\" на панели переключения страниц.","\t */","\tjsFieldSetClientView.prototype.setPageClicks = function(){","\t\tvar pageLinkSel;","\t\tvar pos;","\t\t$(this.pageBarSel + \">a.fieldSetPrev\").bind(\"click\", {prev:true}, context(this).callback(this.onpageclick));","\t\tpos = this.ctrl.children.length + 1;","\t\t$(this.pageBarSel + \">a.fieldSetNext\").bind(\"click\", {next:true}, context(this).callback(this.onpageclick));","\t\tfor(var i=0;i<this.ctrl.children.length;i++){","\t\t\tpos = i + 1;","\t\t\tpageLinkSel = this.pageBarSel + \">a:eq(\" + pos + \")\";","\t\t\t$(pageLinkSel).bind(\"click\", {pageInx:i}, context(this).callback(this.onpageclick));","\t\t}","\t}","","\t/**Проставляет обработчики события \"click\" на кнопках.","\t */","\tjsFieldSetClientView.prototype.setButtonClicks = function(){","\t\t\tvar options = this.options;","\t\t\t//проставить onclick'и","\t\t\tif(options.buttons){","\t\t\t\tvar buttonSel;","\t\t\t\tthis.buttons = {};","\t\t\t\tfor(var i=0;i<options.buttons.length;i++){","\t\t\t\t\tbutton = options.buttons[i];","\t\t\t\t\tif(button){\t\t//защита для IE от массива с запятой в конце [1,2,3,] ","\t\t\t\t\t\tbuttonSel = this.buttonBarSel + \">input:eq(\" + i + \")\";","\t\t\t\t\t\tthis.buttons[button.name] = {sel: buttonSel};","\t\t\t\t\t\t$(buttonSel).bind(\"click\", ","\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{},","\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontext(this).callback(button.handler));","\t\t\t\t\t}","\t\t\t\t}","\t\t\t}","\t}","\t","\t/**Проставляет обработчики события \"click\" на кнопках.","\t */","\tjsFieldSetClientView.prototype.onerrstat = function(){","\t\tvar options = this.options;","\t\tif(options.slider && options.collapsed){","\t\t\tthis.toggleSlider();","\t\t}","\t\treturn true;","\t}","\t","\t/**Номер активной вкладки или страницы.","\t * Инициализируется из одноимённой опции и изменяется методами switchTab и switchPage.","\t * @see\t\t#showTab","\t * @see\t\t#hideTab","\t * @type\tint","\t */","\tthis.activeTab = this.options.activeTab?this.options.activeTab:0;","\t/**Селектор панели вкладок.","\t * @see\t\t#drawView","\t * @type\tString","\t */","\tthis.tabBarSel = null;","\t/**Селектор панели переключения страниц.","\t * @see\t\t#drawView","\t * @type\tString","\t */","\tthis.pageBarSel = null;","","\tthis.bind(\"errstat\", this.onerrstat)","}","extend(jsFieldSetClientView, jsCSideView);","","/**Создаёт новый экземпляр класса jsFieldSetPopUpClientView"," * @class\tВсплывающее окно."," * \t\t\tИспользовать так как jsFieldSetPopUpClientView."," * @constructor"," * @param\t{int}\t\t\tviewInx\tИндекс интерфейса, к которому будет принадлежать представление."," * @param\t{jsController}\tctrl\tСсылка на контроллер."," * @param\t{Object}\t\toptions\tОпции представления."," * \t\t\t\t\t\t\t\t\tОпции:"," * \t\t\t\t\t\t\t\t\t<ul>"," * \t\t\t\t\t\t\t\t\t\t<li>width - Ширина окна.</li>"," * \t\t\t\t\t\t\t\t\t\t<li>height - Высота окна</li>"," * \t\t\t\t\t\t\t\t\t</ul>"," */","function jsFieldSetPopUpClientView(ctrl, viewInx, options){","\toptions.simple = false;","\toptions.nothing = false;","\t","\tjsFieldSetPopUpClientView.superclass.constructor.call(this, ctrl, viewInx, options);","\t","\t/**Отрисовка.","\t */","\tjsFieldSetPopUpClientView.prototype.drawView = function(){","\t\tjsFieldSetPopUpClientView.superclass.drawView.call(this);","\t\tvar dialog = this.viewBoxSel;","\t\tvar caption = this.viewBoxSel+\">div.fieldSetMainPath\";","\t\tvar options = this.options;","\t\t","\t\tif (!options.notCloser) {","//\t\t\t$(caption).append($(\"<div class='dialog_closer' style='float:right' />\").append($(\"<img src='../image/closer.png' style='cursor:pointer' />\")));","\t\t\t$(caption).append(\"<div class='dialog_closer'></div>\");","\t\t}","\t\t$(caption).css('cursor', 'move');","\t\t$(this.viewBoxSel+\">div.fieldSetMainPath>div.dialog_closer\").click(context(this).callback(this.hide));","\t\t$(this.viewBoxSel).css({","\t\t\t'display': 'none',","\t\t\t'position': 'absolute',","\t\t\t'z-index': '9999',","\t\t\t'box-shadow': '0px 0px 20px #000',","\t\t\t'-moz-box-shadow': '0px 0px 20px #000',","\t\t\t'-webkit-box-shadow': '0px 0px 20px #000'","\t\t});","\t\t$(this.viewBoxSel + '>div:last>div:eq(0)').css({'overflow': 'auto', 'width': options.width, 'height': options.height});","\t\t","\t\tdocument.extra = {","\t\t\tdragging: false,","\t\t\toldLeft: 0,","\t\t\toldTop: 0","\t\t};","\t\t","\t\t$(caption).mousedown(function(e){","\t\t\tdocument.extra.dragging = true;","\t\t\tdocument.extra.oldLeft = e.pageX - $(this).offset().left;","\t\t\tdocument.extra.oldTop = e.pageY - $(this).offset().top;","\t\t\t$('body').css('cursor', 'move');","\t\t\treturn false;","\t\t});","\t\t\t\t","\t\t$(caption).mouseup(function(e){","\t\t\tdocument.extra.dragging = false;","\t\t\t$('body').css('cursor', 'default');","\t\t\treturn false;","\t\t});","\t\t","\t\t$('body').mouseup(function(e){","\t\t\tif (document.extra.dragging) {","\t\t\t\t$(caption).mouseup();","\t\t\t\treturn false;","\t\t\t}","\t\t});","\t\t\t\t","\t\t$('body').mousemove(function(e){","\t\t\tif (document.extra.dragging) {","\t\t\t\tvar x = e.pageX - $(caption).offset().left;","\t\t\t\tvar y = e.pageY - $(caption).offset().top;","\t\t\t\t$(dialog).css({","\t\t\t\t\t'left': $(dialog).offset().left + x - document.extra.oldLeft,","\t\t\t\t\t'top': $(dialog).offset().top + y - document.extra.oldTop","\t\t\t\t});","\t\t\t\treturn false;","\t\t\t}","\t\t});","\t\t","","\t\treturn false;","\t}","\t","\t/**Обработчик всех событий от открытия/закрытия диалога этого класса.","\t * Нужен только чтобы обеспечить всплытие события из-за несовершенства коры.","\t * Запуск события непосредственно родителю чреват его отсутствием.","\t * @return\ttrue/false всплывать иль невсплывать вот в чём вопрос.","\t */","\tthis.hnd = function(){","\t\treturn true;","\t}","\t","\t/**Показать диалоговое окно.","\t */","\tjsFieldSetPopUpClientView.prototype.show = function() {","\t\tthis.ctrl.event(\"showpopupdlg\", this);","\t\t$(this.viewBoxSel).css('left', $(document).scrollLeft() + $(window).width()/2-$(this.viewBoxSel).width()/2);","\t\t$(this.viewBoxSel).css('top', $(document).scrollTop() + ($(window).height()/2-$(this.viewBoxSel).height()/2));","\t\t$(this.viewBoxSel).fadeIn(\"slow\");","\t}","\t","\t/**Скрыть диалоговое окно.","\t */","\tjsFieldSetPopUpClientView.prototype.hide = function() {","\t\tthis.ctrl.event(\"hidepopupdlg\", this);","\t\t$('body').css('overflow', 'auto');","\t\t//Скрыть глушилку","\t\tthis.hideModalOverlay();","\t\t//Скрыть окно","\t\t$(this.viewBoxSel).fadeOut(\"slow\");","\t}","\t","\t/**Показать диалоговое окно в модальном режиме.","\t */","\tjsFieldSetPopUpClientView.prototype.showModal = function(){","\t\tthis.ctrl.event(\"showpopupmodaldlg\", this);","\t\t$('body').css('overflow', 'hidden');","\t\tthis.showModalOverlay();","\t\tthis.show();","\t\t","\t}","\t","\tthis.isWin = true;","","\tthis.bind(\"showpopupdlg\", this.hnd);","\tthis.bind(\"showpopupmodaldlg\", this.hnd);","\tthis.bind(\"hidepopupdlg\", this.hnd);","}","extend(jsFieldSetPopUpClientView, jsFieldSetClientView);","/* *************************"," * jhmvc library edit module"," * "," * *************************/","","/**Создаёт новый экземпляр класса jsInputController"," * @class\t\t\tКонтроллер полей ввода. Единственное назначение - хранение и установка признака modified.<br>"," * @constructor"," */ ","function jsEditController(){","\tjsEditController.superclass.constructor.call(this);","\t","\t/**Признак того, что хотя бы в одном из представлений поле было изменено.","\t * @type\tbool","\t */","\tthis.modified = false;","\t","\t/**Обработчик \"fieldchange\".","\t * Устанавливает признак того, что хотя бы в одном из представлений поле было изменено.","\t */","\tthis.setModified = function(obj){","\t\tthis.modified = true;","\t\treturn true;","\t}","","\tthis.addEventHandler(\"fieldchange\", this.setModified);","\t","}","extend(jsEditController, jsController);","","/**Создаёт новый экземпляр класса jsEditClientView"," * @class \t\t\t\t\t\t\tПредставляет базовую функциональность полей ввода."," * @constructor"," * @param\t{int}\t\tviewInx\t\tИндекс интерфейса, к которому будет принадлежать представление."," * @param\t{Object}\tctrl\t\tСсылка на контроллер."," * @param\t{Object}\toptions\t\tОпции представления."," * \t\t\t\t\t\t\t\t\tjsEditClientView принимает следующие опции:<br>"," * \t\t\t\t\t\t\t\t\t<ul>"," * \t\t\t\t\t\t\t\t\t\t<li>comment - Комментарий к полю.</li>"," * \t\t\t\t\t\t\t\t\t\t<li>optional - Необязательное поле. Будут игнорироваться все statusCode оканчивающиеся на Empty</li>"," * \t\t\t\t\t\t\t\t\t\t<li>summary\t-  Показать в режиме \"сводки\" (без поля комментария)</li>"," * \t\t\t\t\t\t\t\t\t</ul>"," */","function jsEditClientView(ctrl, viewInx, options){","\tjsEditClientView.superclass.constructor.call(this, ctrl, viewInx, options);","","\t/**Отрисовка раскладки элемента редактирования.","\t * Раскладка включает себя следующие элементы:<br>","\t * 1. Контейнер для поля конкретного вида, которое определяет производный класс.<br>","\t * 2. Комментарий, если есть (опция comment).<br>","\t * 3. Сообщение об ошибке, если есть (поле statusCode).<br>","\t * После отработки метода поле myBoxSel указывает методу drawView производного класса куда","\t * вставлять поле редактирования. Метод производного класса должен вызывать его в начале.","\t */","\tjsEditClientView.prototype.drawView = function(){","\t\tvar htmlToDraw;","\t\tvar options = this.options;","\t\tvar statusCode = this.ctrl.model?this.ctrl.model.statusCode:null;","\t\tvar uid = getUID();","\t\tvar errorMessage = statusCode?lng(statusCode):\"\";","\t\tvar comment = options.comment?lng(options.comment):\"\";","\t\tvar inputBoxId = \"editInputBox\" + uid;","\t\tthis.inputId = \"editInput\" + uid;","\t\tvar errorId = \"editError\" + uid;","\t\tvar commentId = \"editComment\" + uid;","\t\tvar style = options.inputPadding?\" style='width: \" + options.inputPadding + \"'\":\"\";","\t\tthis.errorSel = \"#\" + errorId;","\t\tthis.commentSel = \"#\" + commentId;","\t\tthis.inputSel = \"#\" + this.inputId;","\t\toptions.myBoxSel = null;","\t\toptions.childBoxSel = \"#\" + inputBoxId;","","\t\thtmlToDraw  = \"<div class='edit'>\";","\t\thtmlToDraw += \"<div class='label'\" + style + \">\";","\t\thtmlToDraw += \"<label for='\" + this.inputId + \"'>\";","\t\tif(options.humanName){","\t\t\thtmlToDraw += lng(options.humanName) + \":\"","\t\t}","\t\telse{","\t\t\thtmlToDraw += \"&nbsp;\"","\t\t}","\t\thtmlToDraw += \"</label>\";","\t\thtmlToDraw += \"</div>\"; //label","\t\thtmlToDraw += \"<div id='\" + inputBoxId + \"' class='input'></div>\";","\t\thtmlToDraw += \"<div id='\" + errorId + \"' class='error'>\" + errorMessage + \"</div>\";","\t\thtmlToDraw += \"<div style='clear: both'></div>\";","\t\thtmlToDraw += \"<div id='\" + commentId + \"'class='comment'>\" + comment + \"</div>\";","\t\thtmlToDraw += \"<div style='clear: both'></div></div>\";","\t\thtmlToDraw += \"<div style='clear: both'></div>\";","","\t\tvar child = this.getChild(0);\t//Может быть только один потомок","\t\tif(child instanceof jsCSideView){","\t\t\tchild.options.viewBoxSel = options.childBoxSel;","\t\t\tchild.inputId = this.inputId;","\t\t}","\t\t$(options.viewBoxSel).html(htmlToDraw);","","\t\tif(options.mandatory && !options.optional && !options.summary){","\t\t\tthis.setMandatory();","\t\t}","\t\tif(!comment.length){","\t\t\tthis.cleanComment();","\t\t}","\t\tjsEditClientView.superclass.drawView.call(this);","\t}","","\t/**Подкорректировать стиль запрещённого поля.","\t */","\tjsEditClientView.prototype.disable = function(view){","\t\tthis.setOption(\"disabled\", true);","\t\t$(this.options.viewBoxSel).addClass(\"editDisabled\");","\t\tthis.hideError();","\t\tvar obj = this.getChild(0);","\t\tif(obj.disable instanceof Function){","\t\t\tobj.disable();","\t\t}","\t\tthis.clearMandatory();","\t}","","\t/**Вернуть стиль разрешённого поля.","\t */","\tjsEditClientView.prototype.enable = function(view){","\t\tthis.setOption(\"disabled\", false);","\t\tvar options = this.options;","\t\t$(options.viewBoxSel).removeClass(\"editDisabled\");","\t\tvar obj = this.getChild(0);","\t\tif(obj.statusCode){","\t\t\tthis.showError();","\t\t}","\t\tif(obj.enable instanceof Function){","\t\t\tobj.enable();","\t\t}","\t\tif(options.mandatory && !options.optional && !options.summary){","\t\t\tthis.setMandatory();","\t\t}","\t}","\t","\t/**Обработчик события 'validate'.","\t * Скрывает/показывает сообщение об ошибке, но только если она произошла в этом представлении.","\t */","\tjsEditClientView.prototype.onvalidate = function(view){","//\t\tif(!view) return false;","\t\tif(this.viewInx == view.viewInx){","\t\t\tthis.setError();","\t\t}","\t\treturn false;","\t}","","\t/**Скрывает/показывает сообщение об ошибке.","\t */","\tjsEditClientView.prototype.setError = function(statusCode){","\t\tvar child = this.getChild(0);","","\t\tstatusCode = statusCode?statusCode:(child.statusCode?child.statusCode:this.statusCode);","\t\tif(statusCode){","\t\t\t$(this.errorSel).html(lng(statusCode));","\t\t\tthis.showError();","\t\t}","\t\telse{","\t\t\t$(this.errorSel).html(\"\");","\t\t\tthis.hideError();","\t\t}","\t}","\t","\t/**Показать сообщение об ошибке.","\t */","\tjsEditClientView.prototype.showError = function(){","\t\t$(this.errorSel).show();","\t\t$(this.inputSel).addClass('validate');","\t}","","\t/**Скрыть сообщение об ошибке.","\t */","\tjsEditClientView.prototype.hideError = function(){","\t\t$(this.errorSel).hide();","\t\t$(this.inputSel).removeClass('validate');","\t}","\t","\t/**Установить поле комментария.","\t * @param\t{String}\tcomment","\t */","\tjsEditClientView.prototype.setComment = function(comment){","\t\t$(this.commentSel).html(lng(comment));","\t}","\t","\tjsEditClientView.prototype.cleanComment = function(){","\t\t$(this.commentSel).html(\"\").hide();","\t}","","\tjsEditClientView.prototype.onfieldchange = function(obj){","\t\tthis.ctrl.getParent().event(\"fieldchange\", {view:this, value:obj.value}, true);","\t\treturn false;","\t}","","\t/**Установить признак обязательного поля (*).","\t */","\tjsEditClientView.prototype.setMandatory = function(){","\t\tthis.clearMandatory();","\t\t$(this.options.viewBoxSel + \" div.label\").append(\"<span class='mandatory'>*</span>\");","\t}","","\t/**Снять признак обязательного поля (*).","\t */","\tjsEditClientView.prototype.clearMandatory = function(){","\t\t$(this.options.viewBoxSel + \" span.mandatory\").detach();","\t}","","/*\t","\tjsEditClientView.prototype.onmandatory = function(flag){","\t\tif(flag){","\t\t\tthis.setMandatory();","\t\t}","\t\telse{","\t\t\tthis.clearMandatory();","\t\t}","\t\treturn false;","\t}","*/","\tthis.bind(\"fieldchange\", this.onfieldchange);","\tthis.bind(\"validate\", this.onvalidate);","//\tthis.bind(\"mandatory\", this.onmandatory);","\t","\t/**Селектор сообщения об ошибке.","\t * Выставляется методом drawView.","\t * @see #drawView","\t * @type String","\t */","\tthis.errorSel = null;","\t","\t/**Селектор комментария.","\t * Выставляется методом drawView.","\t * @see #drawView","\t * @type String","\t */","\tthis.commentSel = null;","","\t/**ID поля ввода, которое рисуется производным классом.","\t * Выставляется методом drawView.","\t * @see #drawView","\t * @type String","\t */","\tthis.inputId = null;","","\t/**Селектор поля ввода, которое рисуется производным классом.","\t * Выставляется методом drawView.","\t * @see #drawView","\t * @type String","\t */","\tthis.inputSel = null;","\t","}","extend(jsEditClientView, jsCSideView);","","/**Создаёт новый экземпляр класса jsInputModel"," * @class\t\t\tМодель, представляющая введённые пользователем данные."," * \t\t\t\t\tДанные представляются одной переменной value."," * @param\tvalue\tЗначение модели."," * @constructor"," */ ","function jsInputModel(value){","\tjsInputModel.superclass.constructor.call(this);","\t","\t/**Значение модели*/","\tthis.value = value;","\t","\t","\t/**Преобразовать значение модели в строку.","\t * Поскольку модель уже и так фактически строка, это метод только делает","\t * проверку на наличие значения с помощью функции no() и, если она завершилась","\t * успешно, то возвращает пустую строку \"\".","\t * @see GLOBALS#no","\t */","\tjsInputModel.prototype.toString = function(){","\t\tvar value;","\t\tif(no(this.value)){","\t\t\tvalue = \"\";","\t\t}","\t\telse{","\t\t\tvalue = this.value;","\t\t}","\t\treturn value;","\t}","\t","}","extend(jsInputModel, jsModel);","","/**Создаёт новый экземпляр класса jsInputController"," * @class\t\t\tКонтроллер полей ввода. Объявляет набор интерфейсов и создаёт модель.<br>"," * \t\t\t\t\tТипы интерфейсов: "," * \t\t\t\t\t<ul>"," * \t\t\t\t\t\t<li>input - текстовое поле.</li>"," * \t\t\t\t\t\t<li>select - выпадающий список.</li>"," * \t\t\t\t\t\t<li>selectex - дверовидный выпадающий список.</li>"," * \t\t\t\t\t\t<li>radio - радио-кнопка.</li>"," * \t\t\t\t\t\t<li>checkbox - галка.</li>"," * \t\t\t\t\t\t<li>number - числовое поле.</li>"," * \t\t\t\t\t\t<li>text - статический текст</li>"," * \t\t\t\t\t\t<li>server - серверный интерфейс</li>"," * \t\t\t\t\t</ul>"," * текстовое поле, выпадающий список, радио-кнопка, галка, числовое поле."," * \t\t\t\t\tСерверный интерфейс один."," * @param\tvalue\tЗначение для создания модели."," * @constructor"," */ ","function jsInputController(value){","\tjsInputController.superclass.constructor.call(this);","","\t/**Добавляет потомка котролу field.","\t * Сделано для расширенного списка, чтобы не надо было лезть в потроха контрола.","\t */","\tjsInputController.prototype.addItem = function(){","\t\treturn this.addChild.apply(this.getChild(\"field\"), arguments);","\t}","\t","\tthis.ifaceTypes.input = {type: jsInputSlotView};","\tthis.ifaceTypes.select = {type: jsInputSlotView};","\tthis.ifaceTypes.selectex = {type: jsInputSlotView};","\tthis.ifaceTypes.radio = {type: jsInputSlotView};","\tthis.ifaceTypes.radio2 = {type: jsRadio2SlotView};","\tthis.ifaceTypes.checkbox = {type: jsInputSlotView};","\tthis.ifaceTypes.number = {type: jsInputSlotView};","\tthis.ifaceTypes.text = {type: jsInputSlotView};","\t\t","\tthis.addChild(new jsInputFieldController(value), \"field\");","\tthis.changeModel(this.getChild(\"field\").model);","}","extend(jsInputController, jsEditController);","","/**Создаёт новый экземпляр класса jsInputSlotView"," * @class\t\t\tВнешняя раскладка для полей ввода."," * @param\t{int}\t\t\tviewInx\tИндекс интерфейса, к которому будет принадлежать представление."," * @param\t{jsController}\tctrl\tСсылка на контроллер."," * @param\t{Object}\t\toptions\tОпци�� представления."," * @constructor"," */ ","function jsInputSlotView(ctrl, viewInx, options){","\tctrl.getChild(\"field\").nextIface = ctrl.lastIface;","\tif(ctrl.lastIface == \"number\") options.mandatory = true;","\tjsInputSlotView.superclass.constructor.call(this, ctrl, viewInx, options);","\t","\tjsInputSlotView.prototype.drawView = function(){","\t\t","\t\ttry{","\t\t\tswitch(this.ctrl.model.value.__attrs__.mode){","\t\t\t\tcase 4:","\t\t\t\t\tthis.setOption(\"disabled\", true);","\t\t\t\tbreak;","\t\t\t\tcase 0:","\t\t\t\t\tthis.options.hide = true;","\t\t\t\tbreak;","\t\t\t}","\t\t}","\t\tcatch(e){}","","\t\tjsInputSlotView.superclass.drawView.call(this);","\t\t\t\t\t","\t}","}","extend(jsInputSlotView, jsEditClientView);","","/**Создаёт новый экземпляр класса jsRadio2SlotView"," * @class \t\t\t\t\t\t\tВнешняя раскладка для радиокнопок версии 2 (с описаниями на каждую кнопку)."," * @constructor"," * @param\t{int}\t\tviewInx\t\tИндекс интерфейса, к которому будет принадлежать представление."," * @param\t{Object}\tctrl\t\tСсылка на контроллер."," * @param\t{Object}\toptions\t\tОпции представления."," * \t\t\t\t\t\t\t\t\tjsRadio2SlotView принимает следующие опции:<br>"," * \t\t\t\t\t\t\t\t\t<ul>"," * \t\t\t\t\t\t\t\t\t\t<li>summary\t-  Показать в режиме \"сводки\" (без поля комментария)</li>"," * \t\t\t\t\t\t\t\t\t</ul>"," */","function jsRadio2SlotView(ctrl, viewInx, options){","\tctrl.getChild(\"field\").nextIface = ctrl.lastIface;","\tjsRadio2SlotView.superclass.constructor.call(this, ctrl, viewInx, options);","","\t/**Отрисовка раскладки элемента редактирования.","\t */","\tjsRadio2SlotView.prototype.drawView = function(){","","\t\ttry{","\t\t\tswitch(this.ctrl.model.value.__attrs__.mode){","\t\t\t\tcase 4:","\t\t\t\t\tthis.setOption(\"disabled\", true);","\t\t\t\tbreak;","\t\t\t\tcase 0:","\t\t\t\t\tthis.options.hide = true;","\t\t\t\tbreak;","\t\t\t}","\t\t}","\t\tcatch(e){}","","\t\tvar htmlToDraw;","\t\tvar options = this.options;","\t\tvar statusCode = this.ctrl.model?this.ctrl.model.statusCode:null;","\t\tvar uid = getUID();","\t\tvar errorMessage = statusCode?lng(statusCode):\"\";","\t\tvar comment = options.comment?lng(options.comment):\"\";","\t\tvar inputBoxId = \"editInputBox\" + uid;","\t\tthis.inputId = \"editInput\" + uid;","\t\tvar errorId = \"editError\" + uid;","\t\tvar commentId = \"editComment\" + uid;","\t\tvar style = options.inputPadding?\" style='padding-left: \" + options.inputPadding + \"'\":\"\";","\t\tthis.errorSel = \"#\" + errorId;","\t\tthis.commentSel = \"#\" + commentId;","\t\tthis.inputSel = \"#\" + this.inputId;","\t\toptions.myBoxSel = null;","\t\toptions.childBoxSel = \"#\" + inputBoxId;","","\t\tif(options.summary){","\t\t\thtmlToDraw\t= \"<div class='radio2smr'>\";","\t\t\thtmlToDraw += \"<div class='name'> \" + lng(options.humanName) + \"</div>\";","\t\t}","\t\telse{","\t\t\thtmlToDraw\t= \"<div class='radio2'>\";","\t\t\thtmlToDraw += \"<div class='name'> \" + lng(options.humanName) + \":</div>\";","\t\t}","\t\thtmlToDraw += \"<div class='input' id='\" + inputBoxId + \"' \" + style + \"></div>\";","\t\thtmlToDraw += \"<div style='clear: both'></div>\";","\t\thtmlToDraw += \"</div>\";","","\t\tvar child = this.getChild(0);\t//Может быть только один потомок","\t\tif(child instanceof jsCSideView){","\t\t\tchild.options.viewBoxSel = options.childBoxSel;","\t\t\tchild.inputId = this.inputId;","\t\t}","\t\t$(options.viewBoxSel).html(htmlToDraw);","","\t\tjsRadio2SlotView.superclass.drawView.call(this);","\t}","","\t/**Подкорректировать стиль запрещённого поля.","\t */","\tjsRadio2SlotView.prototype.disable = function(view){","\t\tthis.setOption(\"disabled\", true);","\t\t$(this.options.viewBoxSel).addClass(\"radio2Disabled\");","\t\tthis.getChild(0).disable();","\t}","","\t/**Вернуть стиль разрешённого поля.","\t */","\tjsRadio2SlotView.prototype.enable = function(view){","\t\tthis.setOption(\"disabled\", false);","\t\t$(this.options.viewBoxSel).removeClass(\"radio2Disabled\");","\t\tthis.getChild(0).enable();","\t}","","\t/**Сообщить об ошибке.","\t * @param\t{String}\tstatusCode\tКод ошибки.","\t */","\tjsRadio2SlotView.prototype.setError = function(statusCode){","\t\tvar child = this.getChild(0);","","\t\tstatusCode = statusCode?statusCode:(child.statusCode?child.statusCode:this.statusCode);","\t\tif(statusCode){","\t\t\talert(lng(statusCode));","\t\t\t//this.showError();","\t\t}","\t}","\t/**ID поля ввода, которое рисуется производным классом.","\t * Выставляется методом drawView.","\t * @see #drawView","\t * @type String","\t */","\tthis.inputId = null;","","\t/**Селектор поля ввода, которое рисуется производным классом.","\t * Выставляется методом drawView.","\t * @see #drawView","\t * @type String","\t */","\tthis.inputSel = null;","}","extend(jsRadio2SlotView, jsCSideView);","","/**Создаёт новый экземпляр класса jsInputFieldController"," * @class\t\t\tКонтроллер полей ввода. Объявляет набор интерфейсов и создаёт модель.<br>"," * \t\t\t\t\tТипы интерфейсов: "," * \t\t\t\t\t<ul>"," * \t\t\t\t\t\t<li>input - текстовое поле.</li>"," * \t\t\t\t\t\t<li>select - выпадающий список.</li>"," * \t\t\t\t\t\t<li>selectex - дверовидный выпадающий список.</li>"," * \t\t\t\t\t\t<li>radio - радио-кнопка.</li>"," * \t\t\t\t\t\t<li>checkbox - галка.</li>"," * \t\t\t\t\t\t<li>number - числовое поле.</li>"," * \t\t\t\t\t\t<li>text - статический текст</li>"," * \t\t\t\t\t\t<li>server - серверный интерфейс</li>"," * \t\t\t\t\t</ul>"," * текстовое поле, выпадающий список, радио-кнопка, галка, числовое поле."," * \t\t\t\t\tСерверный интерфейс один."," * @param\tvalue\tЗначение для создания модели."," * @constructor"," */ ","function jsInputFieldController(value){","\tjsInputFieldController.superclass.constructor.call(this);","\t","\tthis.ifaceTypes.input = {type: jsInputClientView};","\tthis.ifaceTypes.select = {type: jsSelectClientView};","\tif(!no(window.jsSelectExClientView)){","\t\tthis.ifaceTypes.selectex = {type: jsSelectExClientView};","\t}","\tthis.ifaceTypes.radio = {type: jsRadioClientView};","\tthis.ifaceTypes.radio2 = {type: jsRadio2ClientView};","\tthis.ifaceTypes.checkbox = {type: jsCheckboxClientView};","\tthis.ifaceTypes.number = {type: jsNumberClientView};","\tthis.ifaceTypes.text = {type: jsStaticTextClientView};","\t","\tthis.changeModel(new jsInputModel(value));","","\t","\t/**Признак того, что хотя бы в одном из представлений поле было изменено.","\t * @type\tbool","\t */","\tthis.modified = false;","\t","\t/**Обработчик \"fieldchange\".","\t * Устанавливает признак того, что хотя бы в одном из представлений поле было изменено.","\t */","\tthis.setModified = function(obj){","\t\tthis.modified = true;","\t\treturn true;","\t}","","\tthis.addEventHandler(\"fieldchange\", this.setModified);","}","extend(jsInputFieldController, jsController);","","/**Создаёт новый экземпляр класса jsBaseInputView"," * @class\t\t\tБазовый функционал для полей ввода."," * @param\t{int}\t\t\tviewInx\tИндекс интерфейса, к которому будет принадлежать представление."," * @param\t{jsController}\tctrl\tСсылка на контроллер."," * @param\t{Object}\t\toptions\tОпции представления."," * \t\t\t\t\t\t\tОпции:<br>"," * \t\t\t\t\t\t\t<ul>"," * \t\t\t\t\t\t\t\t<li>disabled - Запретить элемент редактирования.</li>"," * \t\t\t\t\t\t\t\t<li>extrattrs - Дополнительные атрибуты тега input или select.</li>"," * \t\t\t\t\t\t\t</ul>"," * @constructor"," */ ","function jsBaseInputView(ctrl, viewInx, options){","\tjsBaseInputView.superclass.constructor.call(this, ctrl, viewInx, options);","\t","\t/**Отрисовка раскладки и всякие сопутствующие действия.","\t * @param\t{String}\thtmlToDraw\tHTML для отрисовки.","\t */","\tjsBaseInputView.prototype.html = function(htmlToDraw){","\t\tvar options = this.options;","\t\t$(options.viewBoxSel).html(htmlToDraw);","\t\tthis.$input = $(this.inputSel);","\t\tthis.updateView();","\t\tfor(var i in options.extrattrs){","\t\t\tthis.$input.attr(i, options.extrattrs[i]);","\t\t}","\t\tif(options.title){","\t\t\tthis.$input.attr(\"title\", lng(options.title));","\t\t}","\t\tif(options.disabled) this.disable();","\t\tthis.$input.bind(\"blur\", context(this).callback(this.onfieldchangejq));","\t}","","\t/**Стандартное jquery 'change' событие от поля input или select.","\t * Запускает jHMVC событие fieldchange и останавливает дальнейшее всплытие события методом stopPropagation.","\t * Останавливать всплытие вернув false нельзя, так как это интерпретируется некоторыми браузерами как отказ","\t * от изменения значения в поле.","\t * @param\tevent\tОбъект события.","\t */","\tjsBaseInputView.prototype.onfieldchangejq = function(event){","\t\tvar value = this.val();","\t\tif(this.lastValue != value){","\t\t\tthis.ctrl.event(\"fieldchange\", {view:this, value:value}, true);","\t\t\t","\t\t\tevent.stopPropagation();","\t\t\tthis.validate();","\t\t\tthis.lastValue = value;","\t\t}","\t\treturn true;","\t}","\t","\t/**Возвращает и устанавливает значение в поле.","\t * Для select и radio надо переопределять.","\t * @param\t{String}\tvalue\tЗначение для установки.","\t * @return\tString\t\t\t\tЗначение контрола.","\t */","\tthis.val = function(value){","\t\tif(!no(value)){","\t\t\tif(this.options.summary){","\t\t\t\tthis.$input.html(value);","\t\t\t}","\t\t\telse{","\t\t\t\tthis.$input.val(value);","\t\t\t}","\t\t}","\t\tif(this.options.summary){","\t\t\treturn this.$input.html();","\t\t}","\t\telse{","\t\t\treturn this.$input.val();","\t\t}","\t}","","\t/**Запретить элемент редактирования.","\t */","\tjsBaseInputView.prototype.disable = function(){","\t\t$(this.inputSel).attr(\"disabled\", true);","\t}","","\t/**Разрешить элемент редактирования.","\t */","\tjsBaseInputView.prototype.enable = function(){","\t\t$(this.inputSel).attr(\"disabled\", false);","\t}","","\t/**Cбросить statusCode если поле необязательное и валидатор производного класса обнаружил пустое поле.","\t * Поле становится необязательным если установлена опция \"optional\"","\t * @type\tbool","\t * @return\tКод возврата метода базового класса.","\t */","\tjsBaseInputView.prototype.validate = function(){","\t\tif(this.options.optional){","\t\t\tvar patt=/.*Empty$/;","\t\t\tif(patt.test(this.statusCode)) this.statusCode = null;","\t\t}","\t\tthis.ctrl.event(\"validate\", this, true);","\t\treturn jsBaseInputView.superclass.validate.call(this);","\t}","\t\t","\t/**jQuery объект поля ввода","\t * @type\tObject","\t */","\tthis.$input = null;\t","","\t/**Последнее введённое значение. Используется для того, чтобы имитировать событие blur, т.к. событие change не всегда корректно срабатывает.","\t */","\tthis.lastValue = null;","}","extend(jsBaseInputView, jsCSideView);","","/**Создаёт новый экземпляр класса jsInputClientView"," * @class\t\t\tПредставление текстового поля ввода."," * @param\t{int}\t\t\tviewInx\tИндекс интерфейса, к которому будет принадлежать представление."," * @param\t{jsController}\tctrl\tСсылка на контроллер."," * @param\t{Object}\t\toptions\tОпции представления."," * \t\t\t\t\t\t\tОпции:<br>"," * \t\t\t\t\t\t\t<ul>"," * \t\t\t\t\t\t\t\t<li>password - Генерировать поле пароля (со звёздочками)(bool).</li>"," * \t\t\t\t\t\t\t\t<li>summary - Показать в режиме \"сводки\" (текст без возможности изменения)</li>"," * \t\t\t\t\t\t\t</ul>"," * @constructor"," */ ","function jsInputClientView(ctrl, viewInx, options){","\tjsInputClientView.superclass.constructor.call(this, ctrl, viewInx, options);","","\t/**Отрисовка поля ввода*/","\tjsInputClientView.prototype.drawView = function(){","\t\tjsInputClientView.superclass.drawView.call(this);","\t\t","\t\tvar htmlToDraw = \"\";","\t\tvar options = this.options;","\t\tif(options.summary){","\t\t\tthis.inputSel = options.viewBoxSel;","\t\t\tdelete this.inputId;","\t\t}","\t\telse{","\t\t\tif(no(this.inputId)){","\t\t\t\tthis.inputId = \"elemId\" + getUID();","\t\t\t}","\t\t\tthis.inputSel = \"#\" + this.inputId;","\t\t\thtmlToDraw  = \"<input id='\" + this.inputId + \"' type='\";","\t\t\thtmlToDraw += options.password?\"password\":\"text\";","\t\t\thtmlToDraw += \"'/>\";","\t\t}","","\t\tthis.html(htmlToDraw);","\t}","\t","\t/**Обновить модель.","\t * Так как поле текстовое, валидатора нет.","\t * При option.summmary не работает","\t */","\tjsInputClientView.prototype.updateModel = function(){","\t\tthis.ctrl.model.value = this.val();","\t\treturn jsInputClientView.superclass.updateModel.call(this);","\t}","\t","\t/**Обновить представление.","\t * Значения undefined и null интерпретируются как пустая строка \"\".","\t * @see jsInputModel#toString","\t */","\tjsInputClientView.prototype.updateView = function(){","\t\tthis.val(this.ctrl.model.value);","\t\tjsInputClientView.superclass.updateView.call(this);","\t}","}","extend(jsInputClientView, jsBaseInputView);","","/**Создаёт новый экземпляр класса jsSelectClientView"," * @class\t\t\tПредставление выпадающего списка."," * @param\t{int}\t\t\tviewInx\tИндекс интерфейса, к которому будет принадлежать представление."," * @param\t{jsController}\tctrl\tСсылка на контроллер."," * @param\t{Object}\t\toptions\tОпции представления."," * \t\t\t\t\t\t\tОпции:<br>"," * \t\t\t\t\t\t\t<ul>"," * \t\t\t\t\t\t\t\t<li>valset - набор значений.<br>"," * \t\t\t\t\t\t\t\t\t\t\tНапример: {value0:\"val0\", value1:\"val1\"}.<br>"," * \t\t\t\t\t\t\t\t\t\t\tКлюч является также языковым ключом.<br>"," * \t\t\t\t\t\t\t\t<li>summary - Показать в режиме \"сводки\" (текст без возможности изменения)</li>"," * \t\t\t\t\t\t\t</ul>"," * @constructor"," */ ","function jsSelectClientView(ctrl, viewInx, options){","\tjsSelectClientView.superclass.constructor.call(this, ctrl, viewInx, options);","\t","\t/**Нарисовать выпадающий список*/","\tjsSelectClientView.prototype.drawView = function(){","\t\tjsSelectClientView.superclass.drawView.call(this);","\t\t","\t\tvar htmlToDraw = \"\";","\t\tvar attr;","\t\tvar options = this.options;","\t\tvar value = this.ctrl.model.value;","\t\tvar valset = options.valset;","\t","\t\tif(options.summary){","\t\t\tthis.inputSel = options.viewBoxSel;","\t\t\tdelete this.inputId;","\t\t}","\t\telse{","\t\t\tif(no(this.inputId)){","\t\t\t\tthis.inputId = \"elemId\" + getUID();","\t\t\t}","\t\t\tthis.inputSel = \"#\" + this.inputId;","\t\t\thtmlToDraw\t\t\t\t= \"<select id='\" + this.inputId + \"'>\";","\t\t\tif(valset){","\t\t\t\tfor(var i in valset){","\t\t\t\t\thtmlToDraw\t\t+= \t\"<option value='\" + valset[i] + \"'>\" + lng(i) + \"</option>\";","\t\t\t\t}","\t\t\t}","\t\t\thtmlToDraw\t\t\t\t+=\t\"</select>\";","\t\t}","","\t\tthis.html(htmlToDraw);","\t\tthis.$input.unbind(\"blur\");","\t\tthis.$input.bind(\"change\", context(this).callback(this.onfieldchangejq));","\t}","\t","\t/**Возвращает и устанавливает значение в поле.","\t * @param\t{String}\tvalue\tЗначение для установки.","\t * @return\tString\t\t\t\tЗначение контрола.","\t */","\tthis.val = function(value){","\t\tvar valset = this.options.valset;","\t\tif(this.options.summary){","\t\t\tif(!no(value)){","\t\t\t\tvar humanValue = \"\";","\t\t\t\tfor(var i in valset){","\t\t\t\t\tif(value == valset[i]){","\t\t\t\t\t\thumanValue = i;","\t\t\t\t\t\tbreak;","\t\t\t\t\t}","\t\t\t\t}","\t\t\t\tthis.$input.html(lng(humanValue));","\t\t\t}","\t\t\treturn valset[this.$input.html()];","\t\t}","\t\telse{","\t\t\tif(!no(value)){","\t\t\t\tthis.$input.val(value);","\t\t\t}","\t\t\treturn this.$input.val();","\t\t}","\t}","\t","\t/**Обновить модель"," \t * При option.summmary не работает","\t */ ","\tthis.updateModel = function(){","\t\tthis.ctrl.model.value = this.val();","\t\treturn jsSelectClientView.superclass.updateModel.call(this);","\t}","\t","\t/**Обновить представление*/","\tthis.updateView = function(){","\t\tthis.val(this.ctrl.model.value);","\t\tjsSelectClientView.superclass.updateView.call(this);","\t}","}","extend(jsSelectClientView, jsBaseInputView);","","/**Создаёт новый экземпляр класса jsRadioClientView"," * @class\t\t\tПредставление радио-кнопки."," * @param\t{int}\t\t\tviewInx\tИндекс интерфейса, к которому будет принадлежать представление."," * @param\t{jsController}\tctrl\tСсылка на контроллер."," * @param\t{Object}\t\toptions\tОпции представления."," * \t\t\t\t\t\t\tОпции:<br>"," * \t\t\t\t\t\t\t<ul>"," * \t\t\t\t\t\t\t\t<li>valset - набор значений.<br>"," * \t\t\t\t\t\t\t\t\t\t\tНапример: {value0:\"val0\", value1:\"val1\"}.<br>"," * \t\t\t\t\t\t\t\t\t\t\tКлюч является также языковым ключом.<br>"," * \t\t\t\t\t\t\t\t<li>summary - Показать в режиме \"сводки\" (текст без возможности изменения)</li>"," * \t\t\t\t\t\t\t</ul>"," * @constructor"," */ ","function jsRadioClientView(ctrl, viewInx, options){","\tjsRadioClientView.superclass.constructor.call(this, ctrl, viewInx, options);","","\t/**Нарисовать радио-кнопку*/","\tthis.drawView = function(){","\t\tjsRadioClientView.superclass.drawView.call(this);","\t\t","\t\tvar htmlToDraw = \"\";","\t\tvar attr;","\t\tvar value = this.ctrl.model.value;\t\t","\t\tvar options = this.options;","\t\tvar valset = options.valset;","\t\t","\t\tif(options.summary){","\t\t\tthis.inputSel = options.viewBoxSel;","\t\t\tdelete this.inputId;","\t\t\tvar humanValue = value;","\t\t\tif(valset){","\t\t\t\tfor(var i in valset){","\t\t\t\t\tif(value == valset[i]){","\t\t\t\t\t\thumanValue = i;","\t\t\t\t\t\tbreak;","\t\t\t\t\t}","\t\t\t\t}","\t\t\t}","\t\t\thtmlToDraw += no(humanValue)?\"\":lng(humanValue);","\t\t}","\t\telse{","\t\t\tif(no(this.inputId)){","\t\t\t\tthis.inputId = \"elemId\" + getUID();","\t\t\t}","\t\t\tthis.inputSel = options.viewBoxSel + \" input[name='\" + this.inputId + \"']\";","\t\t\tif(valset){","\t\t\t\tfor(var i in valset){","\t\t\t\t\thtmlToDraw\t\t\t+=\t\"<div><label><input type='radio' name='\" + this.inputId + \"' value='\"+valset[i]+\"' \";","\t\t\t\t\tif(value == valset[i]){","\t\t\t\t\t\thtmlToDraw\t\t+=\t\"checked \";","\t\t\t\t\t}","\t\t\t\t\thtmlToDraw\t\t\t+=\t\"/>\"+lng(i)+\"</label></div>\";","\t\t\t\t}","\t\t\t}","\t\t}","","\t\tthis.html(htmlToDraw);","\t\tthis.$input.unbind(\"blur\");","\t\tthis.$input.bind(\"change\", context(this).callback(this.onfieldchangejq));","\t}","\t","\t/**Возвращает и устанавливает значение в поле.","\t * @param\t{String}\tvalue\tЗначение для установки.","\t * @return\tString\t\t\t\tЗначение контрола.","\t */","\tthis.val = function(value){","\t\tvar valset = this.options.valset;","\t\tif(this.options.summary){","\t\t\tif(!no(value)){","\t\t\t\tvar humanValue = \"\";","\t\t\t\tfor(var i in valset){","\t\t\t\t\tif(value == valset[i]){","\t\t\t\t\t\thumanValue = i;","\t\t\t\t\t\tbreak;","\t\t\t\t\t}","\t\t\t\t}","\t\t\t\tthis.$input.html(lng(humanValue));","\t\t\t}","\t\t\treturn valset[this.$input.html()];","\t\t}","\t\telse{","\t\t\tif(!no(value)){","\t\t\t\tvar j = 0;","\t\t\t\tfor(var i in valset){","\t\t\t\t\tif(value == valset[i]){","\t\t\t\t\t\tthis.$input.eq(j).attr(\"checked\", true);","\t\t\t\t\t}","\t\t\t\t\telse{","\t\t\t\t\t\tthis.$input.eq(j).attr(\"checked\", false);","\t\t\t\t\t}","\t\t\t\t\tj++;","\t\t\t\t}","\t\t\t}","\t\t\tif(this.$input.length > 0 && !this.$input.filter(\":checked\").length){","\t\t\t\treturn this.$input.filter(\":eq(0)\").val();","\t\t\t}","\t\t\telse{","\t\t\t\treturn this.$input.filter(\":checked\").val();","\t\t\t}","\t\t}","\t\t","\t}","\t","\t/**Обновить модель"," \t */","\tthis.updateModel = function(){","\t\tthis.ctrl.model.value = this.val();","\t\treturn jsRadioClientView.superclass.updateModel.call(this);","\t}","\t","\t/**Обновить представление*/","\tthis.updateView = function(){","\t\tthis.val(this.ctrl.model.value);","\t\tjsRadioClientView.superclass.updateView.call(this);","\t}","}","extend(jsRadioClientView, jsBaseInputView);","","","/**Создаёт новый экземпляр класса jsRadio2ClientView"," * @class\t\t\tПредставление радио-кнопки с возможностью добавить описание к каждому значению."," * @param\t{int}\t\t\tviewInx\tИндекс интерфейса, к которому будет принадлежать представление."," * @param\t{jsController}\tctrl\tСсылка на контроллер."," * @param\t{Object}\t\toptions\tОпции представления."," * \t\t\t\t\t\t\tОпция summary не требуется так как вместо неё можно использовать представление jsRadioClientView с опцией summary."," * \t\t\t\t\t\t\tОпции:<br>"," * \t\t\t\t\t\t\t<ul>"," * \t\t\t\t\t\t\t\t<li>valset - набор значений.<br>"," * \t\t\t\t\t\t\t\t\t\t\tНапример: {<br>"," * \t\t\t\t\t\t\t\t\t\t\t\t\t\tval0: {value: \"value0\", desc: \"desc0\", disabled: true},<br>"," * \t\t\t\t\t\t\t\t\t\t\t\t\t\tval1: {value: \"value1\", desc: \"desc1\"}<br>"," * \t\t\t\t\t\t\t\t\t\t\t\t\t   }<br>"," * \t\t\t\t\t\t\t\t\t\t\tvalue является языковым ключом.<br>"," * \t\t\t\t\t\t\t\t\t\t\tdesc является языковым ключом.<br>"," * \t\t\t\t\t\t\t</ul>"," * @constructor"," */ ","function jsRadio2ClientView(ctrl, viewInx, options){","\tjsRadio2ClientView.superclass.constructor.call(this, ctrl, viewInx, options);","","\t/**Нарисовать радио-кнопку*/","\tthis.drawView = function(){","\t\tjsRadio2ClientView.superclass.drawView.call(this);","\t\t\t\t","\t\tvar htmlToDraw = \"\";","\t\tvar attr;","\t\tvar value = this.ctrl.model.value;\t\t","\t\tvar options = this.options;","\t\tvar valset = options.valset;","\t\tvar obj;","\t\tvar id;","\t\t","\t\tif(options.summary){","\t\t\tthis.inputSel = options.viewBoxSel;","\t\t\tdelete this.inputId;","\t\t}","\t\telse{","\t\t\tif(no(this.inputId)){","\t\t\t\tthis.inputId = \"elemId\" + getUID();","\t\t\t}","\t\t\tthis.inputSel = this.myBoxSel + \" input[name='\" + this.inputId + \"']\";","\t\t\tif(valset){","\t\t\t\thtmlToDraw += \"<ul class='radio2'>\";","\t\t\t\tfor(var i in valset){","\t\t\t\t\tobj = valset[i];","\t\t\t\t\tid = this.inputId + \"_\" + i;","\t\t\t\t\thtmlToDraw += \"<li onclick='var obj = $(this).children(\\\"input\\\"); obj.attr(\\\"checked\\\", true); obj.change();'>\";","\t\t\t\t\thtmlToDraw += \"<input name='\" + this.inputId + \"' type='radio' value='\" + i + \"'>\";","\t\t\t\t\thtmlToDraw += obj.value?lng(obj.value):\"\";","\t\t\t\t\thtmlToDraw += \"<div>\";","\t\t\t\t\thtmlToDraw += obj.desc?lng(obj.desc):\"\";","\t\t\t\t\thtmlToDraw += \"</div>\";","\t\t\t\t\thtmlToDraw += \"</li>\";","\t\t\t\t}","\t\t\t\thtmlToDraw += \"</ul>\";","\t\t\t}","\t\t}","\t\t","\t\tthis.html(htmlToDraw);","\t\tthis.$input.unbind(\"blur\");","\t\tthis.$input.bind(\"change\", context(this).callback(this.onfieldchangejq));","\t}","\t","\t/**Возвращает и устанавливает значение в поле.","\t * @param\t{String}\tvalue\tЗначение для установки.","\t * @return\tString\t\t\t\tЗначение контрола.","\t */","\tthis.val = function(value){","\t\tvar valset = this.options.valset;","\t\tif(this.options.summary){","\t\t\tif(!no(value)){","\t\t\t\tthis.$input.html(lng(valset[value].value));","\t\t\t}","\t\t\tvar humanValue = this.$input.html();","\t\t\tfor(var i in valset){","\t\t\t\tif(humanValue == lng(valset[i])){","\t\t\t\t\treturn i;","\t\t\t\t}","\t\t\t}","\t\t}","\t\telse{","\t\t\tif(!no(value)){","\t\t\t\tvar j = 0;","\t\t\t\tfor(var i in valset){","\t\t\t\t\tif(value == i){","\t\t\t\t\t\tthis.$input.eq(j).attr(\"checked\", true);","\t\t\t\t\t}","\t\t\t\t\telse{","\t\t\t\t\t\tthis.$input.eq(j).attr(\"checked\", false);","\t\t\t\t\t}","\t\t\t\t\tj++;","\t\t\t\t}","\t\t\t}","\t\t\tif(this.$input.length > 0 && !this.$input.filter(\":checked\").length){","\t\t\t\treturn this.$input.filter(\":eq(0)\").val();","\t\t\t}","\t\t\telse{","\t\t\t\treturn this.$input.filter(\":checked\").val();","\t\t\t}","\t\t}","\t}","}","extend(jsRadio2ClientView, jsRadioClientView);","","","/**Создаёт новый экземпляр класса jsCheckboxClientView"," * @class\t\t\tПредставление галки."," * @param\t{int}\t\t\tviewInx\tИндекс интерфейса, к которому будет принадлежать представление."," * @param\t{jsController}\tctrl\tСсылка на контроллер."," * @param\t{Object}\t\toptions\tОпции представления."," * \t\t\t\t\t\t\tОпции:<br>"," * \t\t\t\t\t\t\t<ul>"," * \t\t\t\t\t\t\t\t<li>valset - набор значений с двумя фиксированными ключами - on, off.<br>"," * \t\t\t\t\t\t\t\t\t\t\tНапример: {on:\"val0\", off:\"val1\"}.<br>"," * \t\t\t\t\t\t\t\t<li>summary - Показать в режиме \"сводки\" (текст без возможности изменения)</li>"," * \t\t\t\t\t\t\t</ul>"," * @constructor"," */","function jsCheckboxClientView(ctrl, viewInx, options){","\tjsCheckboxClientView.superclass.constructor.call(this, ctrl, viewInx, options);","","\t/**Нарисовать галку.*/","\tthis.drawView = function(){","\t\tjsCheckboxClientView.superclass.drawView.call(this);","\t\t","\t\tvar htmlToDraw = \"\";","\t\tvar options = this.options;","","\t\tif(options.summary){","\t\t\tthis.inputSel = options.viewBoxSel;","\t\t\tdelete this.inputId;","\t\t}","\t\telse{","\t\t\tif(no(this.inputId)){","\t\t\t\tthis.inputId = \"elemId\" + getUID();","\t\t\t}","\t\t\tthis.inputSel = \"#\" + this.inputId;","\t","\t\t\thtmlToDraw\t+=\t\"<input type='checkbox' \"","\t\t\t\t\t\t+\t\"id='\" + this.inputId + \"' \"","\t\t\t\t\t\t+\t\"value='unimportant'>\";","\t\t}","\t\tthis.html(htmlToDraw);","\t\tthis.$input.unbind(\"blur\");","\t\tthis.$input.bind(\"change\", context(this).callback(this.onfieldchangejq));","\t}","\t","\t/**Возвращает и устанавливает значение в поле.","\t * @param\t{String}\tvalue\tЗначение для установки.","\t * @return\tString\t\t\t\tЗначение контрола.","\t */","\tthis.val = function(value){","\t\tvar options = this.options;","\t\tvar valset = options.valset;","\t\tif(options.summary){","\t\t\tif(!no(value)){","\t\t\t\tif(value == valset.on){","\t\t\t\t\tthis.$input.html(lng(\"yes\"));","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\tthis.$input.html(lng(\"no\"));","\t\t\t\t}","\t\t\t}","\t\t\tif(this.$input.html() == lng(\"yes\")){","\t\t\t\treturn valset.on;","\t\t\t}","\t\t\telse{","\t\t\t\treturn valset.off;","\t\t\t}","\t\t}","\t\telse{","\t\t\tif(!no(value)){","\t\t\t\tif(value == options.valset.on){","\t\t\t\t\tthis.$input.attr(\"checked\", true);","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\tthis.$input.attr(\"checked\", false);","\t\t\t\t}","\t\t\t}","\t\t\tif(this.$input.attr(\"checked\")){","\t\t\t\treturn valset.on;","\t\t\t}","\t\t\telse{","\t\t\t\treturn valset.off;","\t\t\t}","\t\t}","\t}","\t/**Обновить модель*/","\tthis.updateModel = function(){","\t\tthis.ctrl.model.value = this.val();","\t\treturn jsCheckboxClientView.superclass.updateModel.call(this);","\t}","\t","\t/**Обновить представление*/","\tthis.updateView = function(){","\t\tthis.val(this.ctrl.model.value);","\t\tjsCheckboxClientView.superclass.updateView.call(this);","\t}","}","extend(jsCheckboxClientView, jsBaseInputView);","","/**Создаёт новый экземпляр класса jsNumberClientView"," * @class\t\t\tПредставление числа (пока только десятичного). "," * @param\t{int}\t\t\tviewInx\tИндекс интерфейса, к которому будет принадлежать представление."," * @param\t{jsController}\tctrl\tСсылка на контроллер."," * @param\t{Object}\t\toptions\tОпции представления."," * \t\t\t\t\t\t\tОпции:<br>"," * \t\t\t\t\t\t\t<ul>"," * \t\t\t\t\t\t\t\t<li>minval - минимальное значение числа.</li>"," * \t\t\t\t\t\t\t\t<li>maxval - максимальное значение числа.</li>"," * \t\t\t\t\t\t\t</ul>"," * @constructor"," */","function jsNumberClientView(ctrl, viewInx, options){","\tjsNumberClientView.superclass.constructor.call(this, ctrl, viewInx, options);","\t","","\t/**Устарело. Оставляю только из боязни что-то сломать*/\t","\tthis.drawView = function(){","\t\tjsNumberClientView.superclass.drawView.call(this);","//\t\tthis.validate();","\t}","\t","\t","\t/**Устарело. Оставляю только из боязни что-то сломать*/\t","\tthis.updateView = function(){","\t\tjsNumberClientView.superclass.updateView.call(this);","//\t\tthis.validate();","\t}","","\t/**Обновить модель.","\t * Запускает валидатор и, в случае успеха, обновляет модель методом базового класса.","\t * @type\tbool","\t * @return\tfalse если валидатор завершился неудачей.","\t * \t\t\tРезультат работы метода базового класса если валидатор завершился успешно .","\t */","\tthis.updateModel = function(){","\t\tvar res = false;","\t\tif(this.validate()){","\t\t\tres = jsNumberClientView.superclass.updateModel.call(this);","\t\t\tvar value = this.ctrl.model.value;","\t\t\tif(value && value != \"\"){","\t\t\t\tthis.ctrl.model.value = parseInt(this.ctrl.model.value, 10);","\t\t\t}","\t\t}","\t\treturn res;","\t}","\t","\t/**Проверить число ли это и принадлежит ли оно интервалу [minval, maxval].","\t * statusCode может принимать следующие значения:<br>","\t * <span>&nbsp;&nbsp;</span>numEmpty\t\t-\tпользователь оставил поле пустым.","\t * <span>&nbsp;&nbsp;</span>numNaN\t\t\t-\tпользователь ввёл не число.","\t * <span>&nbsp;&nbsp;</span>numLessThanMin\t-\tЧисло меньше минимального.","\t * <span>&nbsp;&nbsp;</span>numMoreThanMax\t-\tЧисло больше максимального.","\t * Если при скрытом или запрещённом представлении валидатор находит ошибку, то устанавливает значение undefined","\t * в поле ввода и сбрасывает код ошибки.","\t * @type\tbool","\t * @return\tКод возврата метода базового класса.","\t */","\tthis.validate = function(){","\t\tvar result = true;","\t\tvar value;","\t\tvar re = new RegExp(\"^[0-9]+(\\.?[0-9]+|[0-9]*)$\");","","\t\tvar options = this.options;","\t\tvalue = this.val();","\t\t","\t\tif(value.match(/^\\s*$/)){","\t\t\tthis.statusCode = \"numEmpty\";","\t\t}","\t\telse if (!re.test(value)) {/*if(parseInt(value, 10).toString() == \"NaN\"){*/","\t\t\tthis.statusCode = \"numNaN\";","\t\t}","\t\telse if(!no(options.minval) && value < options.minval){","\t\t\tthis.statusCode = \"numLessThanMin\";","\t\t}","\t\telse if(!no(options.maxval) && value > options.maxval){","\t\t\tthis.statusCode = \"numMoreThanMax\";","\t\t}","\t\telse{","\t\t\tthis.statusCode = null;","\t\t}","\t\tif((this.options.ishidden || this.options.disabled) && this.statusCode){","\t\t\tthis.val(undefined);","\t\t\tthis.statusCode = null;","\t\t}","\t\treturn jsNumberClientView.superclass.validate.call(this);","\t}","}","extend(jsNumberClientView, jsInputClientView);","","/**Создаёт новый экземпляр класса jsStaticTextClientView"," * @class\t\t\tПредставление статического текстового поля."," * @param\t{int}\t\t\tviewInx\tИндекс интерфейса, к которому будет принадлежать представление."," * @param\t{jsController}\tctrl\tСсылка на контроллер."," * @param\t{Object}\t\toptions\tОпции представления. Никаких специальных опций для этого класса нет."," * @constructor"," */ ","function jsStaticTextClientView(ctrl, viewInx, options){","\tjsStaticTextClientView.superclass.constructor.call(this, ctrl, viewInx, options);","","\t/**Отрисовка тектового поля.*/","\tjsStaticTextClientView.prototype.drawView = function(){","\t\tjsStaticTextClientView.superclass.drawView.call(this);","\t\t","\t\tvar options = this.options;","\t\tthis.inputSel = options.viewBoxSel;","\t\tdelete this.inputId;","\t\tthis.html(\"\");","\t}","\t","\t/**Возвращает и устанавливает значение в поле.","\t * Для select и radio надо переопределять.","\t * @param\t{String}\tvalue\tЗначение для установки.","\t * @return\tString\t\t\t\tЗначение контрола.","\t */","\tthis.val = function(value){","\t\tif(!no(value)){","\t\t\tthis.$input.html(value);","\t\t}","\t\treturn this.$input.html();","\t}","","\t/**Обновить представление.","\t * Значения undefined и null интерпретируются как пустая строка \"\".","\t * @see jsInputModel#toString","\t */","\tjsStaticTextClientView.prototype.updateView = function(){","\t\tthis.val(this.ctrl.model.value);","\t\tjsStaticTextClientView.superclass.updateView.call(this);","\t}","}","extend(jsStaticTextClientView, jsBaseInputView);","","/**Генератор стандартного описания обычного поля ввода для метода describe."," * @param\t{Object}\tobj\tКраткое описание обычного поля ввода."," */","controlTypes.input = function(obj){","\tobj.ctrl = new jsInputController(obj.value);","\tobj.nextIface = \"input\";","\tif(!obj.options) obj.options = {};","\tvar opt = obj.options;","\topt.humanName = obj.name;","}","","/**Генератор стандартного описания поля ввода пароля для метода describe."," * @param\t{Object}\tobj\tКраткое описание поля ввода пароля."," */","controlTypes.password = function(obj){","\tobj.ctrl = new jsInputController(obj.value);","\tobj.nextIface = \"input\";","\tif(!obj.options) obj.options = {};","\tvar opt = obj.options;","\topt.humanName = obj.name;","\topt.password = true;","}","","/**Генератор стандартного описания выпадающего списка для метода describe."," * @param\t{Object}\tobj\tКраткое описание выпадающего списка."," * \t\t\t\t\t\t\tФормат:"," * \t\t\t\t\t\t\t\t{"," *\t\t\t\t\t\t\t\t\tname: <имя>,"," * \t\t\t\t\t\t\t\t\tvalue: <значение>,"," * \t\t\t\t\t\t\t\t\tvalset: <набор значений>"," * \t\t\t\t\t\t\t\t}"," */","controlTypes.select = function(obj){","\tobj.ctrl = new jsInputController(obj.value);","\tobj.nextIface = \"select\";","\tif(!obj.options) obj.options = {};","\tvar opt = obj.options;","\topt.humanName = obj.name;","\topt.valset = obj.valset;","}","","/**Генератор стандартного описания радио кнопки для метода describe."," * @param\t{Object}\tobj\tКраткое описание радио кнопки."," * \t\t\t\t\t\t\tФормат:"," * \t\t\t\t\t\t\t\t{"," *\t\t\t\t\t\t\t\t\tname: <имя>,"," * \t\t\t\t\t\t\t\t\tvalue: <значение>,"," * \t\t\t\t\t\t\t\t\tvalset: <набор значений>"," * \t\t\t\t\t\t\t\t}"," */","controlTypes.radio = function(obj){","\tobj.ctrl = new jsInputController(obj.value);","\tobj.nextIface = \"radio\";","\tif(!obj.options) obj.options = {};","\tvar opt = obj.options;","\topt.humanName = obj.name;","\topt.valset = obj.valset;","}","","/**Генератор стандартного описания чекбокса для метода describe."," * @param\t{Object}\tobj\tКраткое описание чекбокса."," * \t\t\t\t\t\t\tФормат:"," * \t\t\t\t\t\t\t\t{"," *\t\t\t\t\t\t\t\t\tname: <имя>,"," * \t\t\t\t\t\t\t\t\tvalue: <значение>,"," * \t\t\t\t\t\t\t\t\tvalset: <набор значений>"," * \t\t\t\t\t\t\t\t}"," * \t\t\t\t\t\t\tФормат valset см. в описании класса jsCheckboxClientView."," * \t\t\t\t\t\t\tНабор значений по умолчанию: {on: true, off: false}."," */","controlTypes.checkbox = function(obj){","\tobj.ctrl = new jsInputController(obj.value);","\tobj.nextIface = \"checkbox\";","\tif(!obj.options) obj.options = {};","\tvar opt = obj.options;","\topt.humanName = obj.name;","\tif(obj.valset){","\t\topt.valset = obj.valset;","\t}","\telse{","\t\topt.valset = {on: true, off: false};","\t}","}","","/**Генератор стандартного описания поля ввода числа для метода describe."," * @param\t{Object}\tobj\tКраткое описание поля ввода числа."," * \t\t\t\t\t\t\tФормат:"," * \t\t\t\t\t\t\t\t{"," *\t\t\t\t\t\t\t\t\tname: <имя>,"," * \t\t\t\t\t\t\t\t\tvalue: <значение>,"," * \t\t\t\t\t\t\t\t\tminval: <минимальное значение>,"," * \t\t\t\t\t\t\t\t\tmaxval: <максимальное значение>"," * \t\t\t\t\t\t\t\t}"," */","controlTypes.number = function(obj){","\tobj.ctrl = new jsInputController(obj.value);","\tobj.nextIface = \"number\";","\tif(!obj.options) obj.options = {};","\tvar opt = obj.options;","\topt.humanName = obj.name;","\topt.minval = obj.minval;","\topt.maxval = obj.maxval;","}","","/**Генератор стандартного описания поля статического текста для метода describe."," * @param\t{Object}\tobj\tКраткое описание поля статического текста."," * \t\t\t\t\t\t\tФормат:"," * \t\t\t\t\t\t\t\t{"," *\t\t\t\t\t\t\t\t\tname: <имя>,"," * \t\t\t\t\t\t\t\t\tvalue: <значение>"," * \t\t\t\t\t\t\t\t}"," */","controlTypes.text = function(obj){","\tobj.ctrl = new jsInputController(obj.value);","\tobj.nextIface = \"text\";","\tif(!obj.options) obj.options = {};","\tvar opt = obj.options;","\topt.humanName = obj.name;","}","","/**"," * @fileoverview Модуль selectex.<br />"," * Данный модуль реализует расширенный выпадающий список, элементы которого списка имеют самостаятельную реализацию и могут образовывать список любого вида.<br />"," * Как этим пользоваться:<br />"," * <ul>"," * \t<li>"," * \tСоздать класс контроллера jsInputController<br>"," *  </li>"," *  <li>"," *  Добавить созданному контроллеру список методом jsSelectExClientView.addItem.<br />"," *  <i>Список может иметь древовидную или любую другую структуру, но должен удовлетворять ряду требований.<br />"," *  Если бы мы писали на языке с жёсткой типизацией поддрежиющем множественное наследование, то эти требования были бы офирмлены в виде интерфейсных классов.<br />"," *  Вот эти требования:"," *     Модель элементов списка должна содержать методы:"," *\t\t<ul>"," *\t\t\t<li>"," *\t\t\t\tgetValue /все элементы списка/"," *\t\t\t</li>"," *\t\t</ul>"," *\t\tПредставление элементов списка должно содержать методы:"," *\t\t<ul>"," *\t\t\t<li>"," *\t\t\t\tgetName /все элементы списка/"," *\t\t\t</li>"," *\t\t\t<li>"," *\t\t\t\tclearSelection /корневой элемент списка/"," *\t\t\t</li>"," * \t\t\t<li>"," * \t\t\t\tsetItemSelected /все элементы списка/"," * \t\t\t</li>"," * \t\t\t<li>"," * \t\t\t\tclearVisited /если поддерживается поиск; корневой элемент списка/"," * \t\t\t</li>"," * \t\t\t<li>"," * \t\t\t\tsearchItem /если поддерживается поиск; корневой элемент списка/"," * \t\t\t</li>"," * \t\t\t<li>"," * \t\t\t\tfindItemName /корневой элемент списка/"," * \t\t\t</li>"," * \t\t</ul>"," * \t\tИ свойства:"," * \t\t<ul>"," * \t\t\t<li>"," * \t\t\t\tselectedSelectExItem /корневой элемент списка/"," * \t\t\t</li>"," * \t\t</ul>"," * \t\tПрототипы и смысл методов и свойств можно посмотреть в частной реализации списка в классах jsSelectExItemView и jsSelectExItemModel."," *  </li>"," * \t<li>"," * \tВ качестве интерфейса указать 'selectex'"," * \t</li>"," * </ul></i>"," * Пример использования в тестовом наборе."," */","","/**Генератор стандартного описания расширенного выпадающего списка для метода describe."," * @param\t{Object}\tobj\tКраткое описание расширенного выпадающего списка."," */","controlTypes.selectex = function(obj){","\tobj.ctrl = new jsInputController(obj.value);","\tobj.nextIface = \"selectex\";","\tif(!obj.options) obj.options = {};","\tvar opt = obj.options;","\topt.humanName = obj.name;","\topt.editable = obj.editable;","\topt.width = obj.width;","\topt.height = obj.height;","}","","/**Создаёт новый экземпляр класса jsSelectExClientView"," * @class\t\t\tПредставление расширенного выпадающего списка."," * @param\t{int}\t\t\tviewInx\tИндекс интерфейса, к которому будет принадлежать представление."," * @param\t{jsController}\tctrl\tСсылка на контроллер."," * @param\t{Object}\t\toptions\tОпции представления."," * \t\t\t\t\t\t\tОпции:<br>"," * \t\t\t\t\t\t\t<ul>"," * \t\t\t\t\t\t\t\t<li>summary - Показать в режиме \"сводки\" (текст без возможности изменения)</li>"," * \t\t\t\t\t\t\t\t<li>editable - Редактируемое поле</li>"," * \t\t\t\t\t\t\t\t<li>width - Ширина выпадающего списка</li>"," * \t\t\t\t\t\t\t\t<li>height - Высота выпадающего списка (если не указать, то будет растягиватся самостоятельно)</li>"," * \t\t\t\t\t\t\t</ul>"," * @constructor"," */ ","function jsSelectExClientView(ctrl, viewInx, options){","\tjsSelectExClientView.superclass.constructor.call(this, ctrl, viewInx, options);","\t","\t/**Нарисовать выпадающий список*/","\tjsSelectExClientView.prototype.drawView = function(){\t\t","\t\tvar htmlToDraw = \"\";","\t\tvar options = this.options;","\t\tvar elemID = \"elemID\" + getUID();","\t\tvar childCtrls = this.ctrl.children;","\t\tvar childBoxSel = null;","\t\tvar obj;","\t\t","\t\tif(options.summary){","\t\t\tthis.inputSel = options.viewBoxSel + \">div.selectex>div.s_ex_input\";","\t\t\tthis.childBoxSel = options.viewBoxSel + \">div.selectex>div.box\";","\t\t\tthis.options.childBoxSel = this.childBoxSel;","\t\t\tif(childCtrls.length > 0){","\t\t\t\tobj = this.getChild(0);","\t\t\t\tobj.options.viewBoxSel = this.options.childBoxSel;","\t\t\t\tobj.viewBoxSel = obj.options.viewBoxSel;","\t\t\t}","\t\t\thtmlToDraw += \"<div class='selectex'>\";","\t\t\thtmlToDraw += \"<div class='s_ex_input'></div>\";","\t\t\thtmlToDraw += \"<div class='box'></div>\";","\t\t\thtmlToDraw += \"</div>\";","","\t\t\tdelete this.inputId;","\t\t}","\t\telse{","\t\t\tif(no(this.inputId)){","\t\t\t\tthis.inputId = \"elemId\" + getUID();","\t\t\t}","\t\t\tthis.inputSel = \"#\" + this.inputId;","\t\t\tthis.childBoxSel = options.viewBoxSel + \">div.selectex>div.box\";","\t\t\tthis.options.childBoxSel = this.childBoxSel;","\t\t\tif(childCtrls.length > 0){","\t\t\t\tobj = this.getChild(0);","\t\t\t\tobj.options.viewBoxSel = this.options.childBoxSel;","\t\t\t\tobj.viewBoxSel = obj.options.viewBoxSel;","\t\t\t}","\t\t\thtmlToDraw += \"<div class='selectex'>\";","\t\t\thtmlToDraw += \"<div class='s_ex_input'>\";","\t\t\thtmlToDraw += \"<input type='text' id='\" + this.inputId + \"'\";","\t\t\tif(!options.editable){","\t\t\t\thtmlToDraw += \" readonly='readonly'\";","\t\t\t}","\t\t\thtmlToDraw += \"/>\";","\t\t\thtmlToDraw += \"</div>\";","\t\t\thtmlToDraw += \"<div class='s_ex_btn'>&nbsp;</div>\";","\t\t\thtmlToDraw += \"<div class='clear'></div>\";","\t\t\thtmlToDraw += \"<div class='box'></div>\";","\t\t\thtmlToDraw += \"</div>\";","\t\t}","\t\t","\t\tthis.html(htmlToDraw);","\t\t","\t\tjsSelectExClientView.superclass.drawView.call(this);","","\t\tif(!options.summary) {","","\t\t\tif(options.width){","\t\t\t\t$(this.childBoxSel).css('width', options.width);","\t\t\t}","\t\t\tif(options.height){","\t\t\t\t$(this.childBoxSel).css('height', options.height);","\t\t\t}","\t\t\tif(childCtrls.length > 0){","\t\t\t\t$(this.childBoxSel).append(\"<div/>\");","\t\t\t}","\t\t\t//привязать обработчики событий","\t\t\tif(!options.disabled){","\t\t\t\tthis.$input.click(context(this).callback(this.showBox));","\t\t\t\t$(options.viewBoxSel+'>div.selectex>div.s_ex_btn').click(context(this).callback(this.setDisplayBox));","\t\t\t\tthis.$input.keypress(context(this).callback(this.keyPress));","\t\t\t\t// Потому что webkit-подобные и ie решили пойти своим путем :D","\t\t\t\tif($.browser.msie || $.browser.webkit){","\t\t\t\t\tthis.$input.keydown(context(this).callback(this.keyDown));","\t\t\t\t}","\t\t\t\t//Имитация потери фокуса при клике вне viewBoxSel","\t\t\t\t$(window).click(context(this).callback(this.onbodyclick));","\t\t\t\t$(options.viewBoxSel).click(context(this).callback(this.onviewboxclick));","\t\t\t\t","\t\t\t}","\t\t\telse{","\t\t\t\t$(options.viewBoxSel+'>div.selectex>div.s_ex_btn').addClass(\"disabled\");","\t\t\t}","\t\t\tthis.getChild(0).setItemSelected(this.ctrl.model.value);","\t\t}","\t}","\t","\t/**Обработчик клика на body.","\t * Нужен для имитации потери фикуса списком.","\t */","\tthis.onbodyclick = function(){","\t\tif(!this.infocus){","\t\t\tthis.hideBox(this.getChild(0).selectedSelectExItem.length);","\t\t}","\t\tthis.infocus = false;","\t\treturn true;","\t}","\t","\t/**Обработчик клика на боксе представления.","\t * Нужен для имитации потери фикуса списком.","\t */","\tthis.onviewboxclick = function(){","\t\tthis.infocus = true;","\t}","\t","\t/**Показать\\Скрыть выпадающий список*/","\tthis.setDisplayBox = function(e) {","\t\tthis.$input.focus();","\t\tif ($(this.childBoxSel).is(':visible')) {","\t\t\tthis.hideBox(false);","\t\t} else {","\t\t\tthis.showBox();","\t\t}","\t\tthis.onviewboxclick(e);","\t\t$(window).click();","\t\treturn false;","\t}","","\t/**Показать выпадающий список*/","\tthis.showBox = function() {","\t\t$(this.childBoxSel).show();","\t}","","\t/**Скрыть выпадающий список*/","\tthis.hideBox = function(isSelected) {","\t\tif (!isSelected) {","\t\t\tthis.updateView();","\t\t}","\t\t$(this.childBoxSel).hide();","\t}","","\t/**Обработка нажатие клавиши (для webkit & ie)*/","\tthis.keyDown = function(event) {","\t\tif(event.keyCode == 9","\t\t\t|| event.keyCode == 38","\t\t\t|| event.keyCode == 40){","\t\t\tthis.keyPress(event);","\t\t\treturn false;","\t\t}","\t\t","\t}","","\t/**Обработка нажатие клавиши*/","\tthis.keyPress = function(event) {","\t\tvar rootOfList = this.getChild(0);","\t\tvar item;","\t\tvar name;","\t\t// Если нажали enter и есть выделенный пункт списка","\t\tif(event.keyCode == 13){","\t\t\tif($(this.childBoxSel).is(':visible')){","\t\t\t\tif(rootOfList.currentSelectExItem){","\t\t\t\t\tif(rootOfList.currentSelectExItem.getName()){","\t\t\t\t\t\tthis.onselectitem(rootOfList.currentSelectExItem);","\t\t\t\t\t}","\t\t\t\t\tvar i = this.$input.val().length;","\t\t\t\t\tthis.$input.caret(i,i);","\t\t\t\t}","\t\t\t}","\t\t\telse if(!$(this.childBoxSel).is(':visible')){","\t\t\t\tthis.showBox();","\t\t\t}","\t\t}","\t\tif (!isCharCode(event.which)","\t\t\t&& event.keyCode != 9\t\t//не tab","\t\t\t&& event.keyCode != 38\t\t//не стрелка вверх","\t\t\t&& event.keyCode != 40){\t//не стрелка вниз","\t\t\treturn true;","\t\t}","\t\t// Если выпадающий список закрыт","\t\tif (!$(this.childBoxSel).is(':visible')) {","\t\t\tthis.showBox();","\t\t}","\t\tif (event.keyCode == 38) {\t\t//стрелка вверх","\t\t\tif (rootOfList.currentSelectExItem.ctrl.thisInx > 0) {","\t\t\t\titem = rootOfList.currentSelectExItem.getParent().getChild(rootOfList.currentSelectExItem.ctrl.thisInx - 1).setItemSelected();","\t\t\t\tname = item.getName();","\t\t\t\tif(name){","\t\t\t\t\tthis.$input.val(lng(name));","\t\t\t\t}","\t\t\t}","\t\t\treturn true;","\t\t}","\t\tif (event.keyCode == 40) {\t//стрелка вниз","\t\t\tif (rootOfList.currentSelectExItem.ctrl.thisInx < rootOfList.currentSelectExItem.ctrl.getParent().children.length - 1) {","\t\t\t\titem = rootOfList.currentSelectExItem.getParent().getChild(rootOfList.currentSelectExItem.ctrl.thisInx + 1).setItemSelected();","\t\t\t\tname = item.getName();","\t\t\t\tif(name){","\t\t\t\t\tthis.$input.val(lng(name));","\t\t\t\t}","\t\t\t}","\t\t\treturn true;","\t\t}","\t\tvar nchar = '';","\t\tvar offset = 0;","\t\t// Если нажали не tab","\t\tif (event.keyCode != 9\t\t//не tab","\t\t\t&& event.keyCode != 38\t\t//не стрелка вверх","\t\t\t&& event.keyCode != 40) {\t//не стрелка вниз","\t\t\trootOfList.clearVisited();","\t\t\tnchar = String.fromCharCode(event.which);","\t\t\toffset = 1;","\t\t}","\t\tvar caret = $(event.target).caret();","\t\tvar leftText = this.$input.val().substring(0, caret.start) + nchar;","\t\tvar rightText = rootOfList.searchItem(leftText);","\t\tif (rootOfList.selectedSelectExItem.length > 0 && rightText == null) {","\t\t\trootOfList.clearVisited();","\t\t\trightText = rootOfList.searchItem(leftText);","\t\t}","\t\tif (rightText != null) {","\t\t\tthis.$input.val(rightText);","\t\t\tthis.$input.caret(caret.start+offset, rightText.length);","\t\t} else {","\t\t\tthis.$input.caret(caret.start, this.$input.val().length);","\t\t}","\t\treturn false","\t}","\t/***/","\tisCharCode = function(x) {","\t\tif (x>46 && x != 91 && x!=92 || x==32) {","\t\t\treturn true;","\t\t} else {","\t\t\treturn false;","\t\t}","\t}","\t/**Обновить модель*/","\tthis.updateModel = function(){","\t\tthis.ctrl.model.value = this.val();","\t\treturn jsSelectExClientView.superclass.updateModel.call(this);","\t}","\t","\t/**Обновить представление*/","\tthis.updateView = function(){","\t\tthis.val(this.ctrl.model.value);","\t\tjsSelectExClientView.superclass.updateView.call(this);","\t}","","\t/**Обработка события выбора пункта списка */","\tthis.onselectitem = function(obj){","\t\tvar name = lng(obj.getName());","\t\tvar val = obj.ctrl.model.getValue();","\t\tthis.tempValue = val;","\t\tthis.$input.val(name);","\t\tobj.setItemSelected();","\t\tthis.hideBox(true);","\t\tthis.ctrl.event('fieldchange', {view:this,value:val}, true);","\t\treturn false; //не всплывает!","\t}","\t","\t/**Возвращает и устанавливает значение в поле.","\t * @param\t{String}\tvalue\tЗначение для установки.","\t * @return\t{String}\t\t\tЗначение контрола.","\t */","\tthis.val = function(value){","\t\tif(!no(value)){","\t\t\tvar name = this.getChild(0).findItemName(value);","\t\t\tif(this.options.summary){","\t\t\t\tthis.$input.html(lng(name));","\t\t\t}","\t\t\telse{","\t\t\t\tthis.$input.val(lng(name));","\t\t\t}","\t\t\tthis.tempValue = value;","\t\t}","\t\treturn this.tempValue;","\t}","\t","\tthis.bind(\"selectitem\", this.onselectitem);","\t","\tthis.tempValue = this.ctrl.model.value;","\tthis.infocus = false;","}","extend(jsSelectExClientView, jsBaseInputView);","","/**Создаёт новый экземпляр класса jsSelectExItemModel"," * @class\t\t\t\tМодель содержит отображаемое имя и соответствующее значение."," * @param\titemInfo\tСвойства пункта списка ({name: <имя>, value: <значение>})."," * @constructor"," */ ","function jsSelectExItemModel(itemInfo){","\tjsSelectExItemModel.superclass.constructor.call(this);","\t","\tthis.itemName = (itemInfo.name)?itemInfo.name:'';","\tthis.itemValue = (itemInfo.value)?itemInfo.value:null;","","\t\t","\t/**Получить значение.","\t * Интерфейсный метод.","\t * @return\t{String}\tЗначение элемента списка.","\t */","\tthis.getValue = function(){","\t\tif(!this.ctrl.children.length){","\t\t\treturn this.ctrl.model.itemValue;","\t\t}","\t\treturn null;","\t};","}","extend(jsSelectExItemModel, jsModel);","","/**Создаёт новый экземпляр класса jsSelectExItemController"," * @class\t\t\t\tКонтроллер древовидной структуры списка."," * @constructor"," * @param\t{Object}\titemInfo\tСвойства пункта списка ({name: <имя>, value: <значение>})."," * @param\t{Object}\toptions\t\tОпции.<br>"," */","function jsSelectExItemController(itemInfo, options){","\tjsSelectExItemController.superclass.constructor.call(this);","","\tif (itemInfo == undefined) {","\t\titemInfo = {};","\t}","","\tthis.changeModel(new jsSelectExItemModel(itemInfo));\t","\tthis.ifaceTypes.tree = {type: jsSelectExItemView, def:true, options: {style:null,open:false,noPath:true}};","\t","}","extend(jsSelectExItemController, jsController);","","/**Создаёт новый экземпляр класса jsSelectExItemView"," * @class\t\t\t\t\tПредставление древовидной структуры списка."," * @param\t{int}\t\t\tviewInx\tИндекс интерфейса, к которому будет принадлежать представление."," * @param\t{jsController}\tctrl\tСсылка на контроллер."," * @param\t{Object}\t\toptions\tОпции представления."," * @constructor"," */ ","function jsSelectExItemView(ctrl, viewInx, options){","\tjsSelectExItemView.superclass.constructor.call(this, ctrl, viewInx, options);","\t\t","\t/**Получить имя элемента списка.","\t * Интерфейсный метод.","\t * @return\t{String}\tИмя элемента списка.","\t */","\tthis.getName = function(){","\t\tif(!this.ctrl.children.length){","\t\t\treturn this.ctrl.model.itemName;","\t\t}","\t\treturn null;","\t};","","\t /**Обработчик клика по пункту списка.","\t  */","\tthis.click = function(e) {","\t\tthis.ctrl.event(\"selectitem\", this, true);","\t\treturn true;","\t}","\t","\t/**Переопределение drawView.","\t */","\tjsSelectExItemView.prototype.drawView = function(){","\t\tjsSelectExItemView.superclass.drawView.call(this);","\t\tif (!this.ctrl.root) {","\t\t\t$(this.myBoxSel).html(lng(this.ctrl.model.itemName));","\t\t\t$(this.viewBoxSel).parent().addClass('selectexItem');","\t\t\tif (this.ctrl.children.length > 0) {","\t\t\t\t$(this.viewBoxSel).addClass('branch_close');","\t\t\t} else {","\t\t\t\t$(this.viewBoxSel).addClass('leaf');","\t\t\t\t$(this.viewBoxSel+'>a').bind('click', context(this).callback(this.click));","\t\t\t}","\t\t}","\t}","","\t/**Переопределение активации пункта списка.","\t */","\tjsSelectExItemView.prototype.onactivate = function(){","\t\tjsSelectExItemView.superclass.onactivate.call(this);","\t\tif (!this.ctrl.root) {","\t\t\tif (this.ctrl.children.length > 0) {","\t\t\t\t$(this.viewBoxSel).removeClass('branch_close');","\t\t\t\t$(this.viewBoxSel).addClass('branch_open');","\t\t\t} else {","\t\t\t\t$(this.viewBoxSel+'>a').css('font-weight', 'normal');","\t\t\t}","\t\t}","\t\treturn false; // прервать всплытие события","\t}","\t","\t/**Переопределение деактивации пункта списка","\t */","\tjsSelectExItemView.prototype.ondeactivate = function(){","\t\tjsSelectExItemView.superclass.ondeactivate.call(this);","\t\tif (!this.ctrl.root) {","\t\t\tif (this.ctrl.children.length > 0) {","\t\t\t\t$(this.viewBoxSel).removeClass('branch_open');","\t\t\t\t$(this.viewBoxSel).addClass('branch_close');","\t\t\t}","\t\t}","\t\treturn false; // прервать всплытие события","\t}","","\t/**Установить выделенный элемент по значению.","\t * @param\tvalue\t\t\t\t\tЗначение для сравнения со своим значением, если не задано, то выделяет себя.","\t * @return\t{jsSelectExItemView}\tВозвращает this потомка (или свой) у которого значения совпали.","\t * \t\t\t\t\t\t\t\t\tЕсли не было ни одного совпадения, то возвращает null.","\t */","\tthis.setItemSelected = function(value){","\t\t//Найти элемент по значению и выделить","\t\tif(no(value) || value == this.ctrl.model.itemValue){","\t\t\tthis.clearSelection();","\t\t\t$(this.options.viewBoxSel).addClass('marked');","\t\t\tthis.ctrl.activate();","\t\t\tthis.rootOfTree.currentSelectExItem = this;","\t\t\tthis.rootOfTree.selectedSelectExItem.push(this);","\t\t\treturn this;","\t\t}","\t\telse{","\t\t\tvar obj;","\t\t\tfor(var i in this.ctrl.children){","\t\t\t\tobj = this.getChild(i).setItemSelected(value);","\t\t\t\tif(obj){","\t\t\t\t\treturn obj;","\t\t\t\t}","\t\t\t}","\t\t}","\t\treturn null;","\t}","\t","\t/**Очистить все выделения.","\t */","\tthis.clearSelection = function(){","\t\t$(this.rootOfTree.options.viewBoxSel + ' ul.selectexItem>li.marked').removeClass('marked');","\t}","\t","\t/**Очистить список найденных элементов.","\t */","\tthis.clearVisited = function(){","\t\tthis.rootOfTree.selectedSelectExItem = [];","\t}","","\t/**Определяет, есть ли текущий элемент в списке найденных.","\t */","\tthis.isNotVisited = function(){","\t\tfor(var i in this.rootOfTree.selectedSelectExItem){","\t\t\tif(this.rootOfTree.selectedSelectExItem[i] == this){","\t\t\t\treturn false;","\t\t\t}","\t\t}","\t\treturn true;","\t}","","\t/**Помощник поиска значения.","\t * @param\t{String}\t\t\t\tСтрока для поиска.","\t * @return\t{jsSelectExItemView}\tПредставление найденного элемента или null.","\t */","\tthis.searchItem = function(str){","\t\tvar result = null;","\t\tvar obj;","\t\tvar currName = lng(this.ctrl.model.itemName);","\t\t","\t\tif(this.isNotVisited()","\t\t\t&& !no(this.ctrl.model.itemValue)","\t\t\t&& currName.length >= str.length","\t\t\t&& currName.substring(0, str.length).toLowerCase() == str.toLowerCase()){","\t\t\t","\t\t\tthis.setItemSelected();","\t\t\treturn currName;","\t\t}","\t\telse{","\t\t\tfor(var i in this.ctrl.children){","\t\t\t\tresult = this.getChild(i).searchItem(str);","\t\t\t\tif(!no(result)){","\t\t\t\t\treturn result;","\t\t\t\t}","\t\t\t}","\t\t}","\t\treturn null;","\t}","","\t/**Найти название элемента списка по значению.","\t * @param\t\t\t\tЗначение для поиска имени.","\t * @return\t{String}\tПредставление найденного элемента или null.","\t */","\tthis.findItemName = function(value){","\t\tvar model = this.ctrl.model;","\t\tif(model.itemValue == value){","\t\t\treturn model.itemName;","\t\t}","\t\telse{","\t\t\tvar itemName;","\t\t\tfor(var i in this.ctrl.children){","\t\t\t\titemName = this.getChild(i).findItemName(value);","\t\t\t\tif(!no(itemName)){","\t\t\t\t\treturn itemName;","\t\t\t\t}","\t\t\t}","\t\t}","\t\treturn null;","\t}","","\t/**Массив представлений найденных элементов списка.","\t * @type\tArray","\t */","\tthis.selectedSelectExItem = [];","\t","\tthis.bind(\"activate\", this.onactivate);","\tthis.bind(\"deactivate\", this.ondeactivate);","}","extend(jsSelectExItemView, jsViewTree);","","/**Создаёт новый экземпляр класса jsSubNetAddrModel."," * @class\t\t\t\tМодель, представляющая адрес подсети. Общий случай, применим для всех сетевых адресов."," * \t\t\t\t\t\tОна представляет его следующим образом:<br>"," * \t\t\t\t\t\t1. Массивом parts. Массив частей адреса (октеты в случае IPv4).<br>"," * \t\t\t\t\t\t2. Полем bits. Количество бит в адресе."," * \t\t\t\t\t\t3. Полем bitmask. Количество бит в маске."," * @param\t{int}\t\tbits\tОбщее количество бит в адресе."," * @param\t{int}\t\tradix\tСистема счисления."," * @param\t{String}\taddr\tАдрес в принятой нотации."," * @param\t{String}\tdelim\tРазделитель."," * @param\t{String}\texpandZero\tЗаполнять нулями часть на все digitCount если часть нулевая"," * @param\t{bool}\t\tomitFullMask\tНе приписывать \"/<кол. бит>\" если кол. бит равно полному кол. бит в адресе."," * @constructor"," */ ","function jsSubNetAddrModel(bits, addr, radix, delim, expandZero, omitFullMask){","\tjsSubNetAddrModel.superclass.constructor.call(this);","\t","\t/**Вычислить массив частей маски адреса исходя из поля bitmask.*/","\tjsSubNetAddrModel.prototype.getMaskParts = function(){","\t\tvar i = 0;","\t\tvar partCount = this.parts.length;","\t\tvar partMax = Math.pow(2, this.partBitCount) - 1;","\t\tvar b = this.bitmask - this.partBitCount;","\t\tvar maskParts = new Array();","\t\twhile(b>=0 && i < partCount){","\t\t\tmaskParts[i++] = partMax;","\t\t\tb -= this.partBitCount;","\t\t}","\t\tif(i<partCount){","\t\t\tif(b < 0 && b < Math.abs(this.partBitCount)){","\t\t\t\tmaskParts[i++] = (~(Math.pow(2, Math.abs(b)) - 1))&(Math.pow(2, this.partBitCount) - 1);","\t\t\t}","\t\t\twhile(i<partCount){","\t\t\t\tmaskParts[i++] = 0;","\t\t\t}","\t\t}","\t\treturn maskParts;","\t}","","\t/**Наложить маску.*/","\tjsSubNetAddrModel.prototype.applyMask = function(){","\t\tvar maskParts = this.getMaskParts();","\t\tfor(var i=0;i<this.parts.length;i++){","\t\t\tthis.parts[i] = this.parts[i] & maskParts[i];","\t\t}","","\t}","\t","\t/**Установить поле parts из строки или массива.","\t * @param\t\t\t\taddr\tМассив частей адреса или строка.","\t * @param\t{int}\t\tradix\tСистема счисления. Необходим если параметр addr задаётся строкой. Если не задавать, будет использ. this.radix, иначе изменит this.radix.","\t * @param\t{String}\tdelim\tРазделитель. Необходим если параметр addr задаётся строкой. Если не задавать, будет использ. this.delim, иначе изменит this.delim","\t */","\tjsSubNetAddrModel.prototype.setParts = function(addr, radix, delim){","\t\t","\t\ttry{","\t\t\tthis.attrs = addr.__attrs__;","\t\t}","\t\tcatch(e){}","\t\t","\t\tif(!(addr instanceof Array)){","\t\t\tvar addrArray = (new String(addr)).split('/');","\t\t\taddr = addrArray[0];","\t\t\tif(addrArray.length > 1){","\t\t\t\tthis.bitmask = addrArray[1];","\t\t\t}","\t\t\telse{","\t\t\t\tthis.bitmask = this.bits","\t\t\t}","\t\t}","","\t\tthis.radix = no(radix)?this.radix:radix;","\t\tthis.delim = no(delim)?this.delim:delim;","\t\t","\t\t//addr = addrArray[0];","\t\tif(!addr && this.parts instanceof Array){","\t\t\tfor(var i in this.parts){","\t\t\t\tthis.parts[i] = null;","\t\t\t}","\t\t}","\t\telse if(addr){","\t\t\tif(addr instanceof Array){","\t\t\t\tthis.parts = addr;","\t\t\t}","\t\t\telse{","\t\t\t\tif(this.radix && this.delim){","\t\t\t\t\tvar strParts = addr.split(this.delim);","\t\t\t\t\tthis.partBitCount = this.bits/strParts.length;","\t\t\t\t\tfor(var i in strParts){","\t\t\t\t\t\tthis.parts[i] = this.parsePart(strParts[i], this.radix);","\t\t\t\t\t}","\t\t\t\t}","\t\t\t}","\t\t}","","\t\tthis.partBitCount = this.bits/this.parts.length;","\t\tthis.digitCount = Math.ceil(Math.log(Math.pow(2, this.partBitCount))/Math.log(this.radix));","\t}\t","","","\t/**Проанализировать часть адреса и вернуть адекватное значение.","\t * @param\t\t\t\tpart\tЧасть адреса.","\t * @param\t{int}\t\tradix\tСистема счисления. Необходим если параметр addr задаётся строкой.","\t * @type\tint","\t * @return\t\t\t\t\t\tЧисло, если метод обнаружил в аргументе part адекватное для части адреса число,","\t * \t\t\t\t\t\t\t\tиначе null.","\t */","\tjsSubNetAddrModel.prototype.parsePart = function(part, radix){","\t\tvar res = null;","\t\tif(!this.checkPart(part, Math.pow(2, this.partBitCount) - 1)){","\t\t\t res = parseInt(part, radix);","\t\t }","\t\t return res;","\t}","\t","\t/**Проверить часть сетевого адреса (октет в случае IPv4)","\t * @param\tpart\tЧасть адреса для проверки. В общем случае это строка, но может быть и число. В случае","\t * \t\t\t\t\tчисла netAddrEmpty и netAddrEmpty никогда не будут иметь место. Это метод используется","\t * \t\t\t\t\tметодом toString данного класса и валидатором клиентского представления.","\t * @param\tmaxval\tМаксимальное значение части.","\t * @param\tradix\tСистема счисления. Если не указана используется this.radix.","\t * @type\tString","\t * @return\tКод ошибки. Возможные коды ошибки:","\t * \t\t\t<ul>","\t * \t\t\t\t<li>Empty</li>","\t * \t\t\t\t<li>NaN</li>","\t * \t\t\t\t<li>OutOfScope</li>","\t * \t\t\t</ul>","\t * \t\t\tВ случае успеха возвращает null;","\t */","\tthis.checkPart = function(part, maxval, radix){","\t\tvar res = null;","\t\tvar empty = (no(part) || part.toString().match(/^\\s*$/));","\t\tvar isString = part instanceof String || typeof(part) == \"string\";","\t\tvar radix = radix?radix:this.radix;","\t\tif(empty){","\t\t\tres = \"Empty\";","\t\t}","\t\telse{","\t\t\tif(isString){","\t\t\t\tvar p = parseInt(part, radix).toString(radix);","//\t\t\t\tif(!part.match(/^0+$/) && (p == \"NaN\" || p.length != part.replace(/^0*/, \"\").length)){","\t\t\t\tif(!part.match(/^0+$/) && (p == \"NaN\" || p.length != part.replace(/^0*/, \"\").length)){","\t\t\t\t\tres = \"NaN\";","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\tpart = parseInt(part, radix);","\t\t\t\t}","\t\t\t}","\t\t\tif(!res){","\t\t\t\tif(part < 0){","\t\t\t\t\tres = \"OutOfScope\";","\t\t\t\t}","\t\t\t\telse if(part > maxval){","\t\t\t\t\tres = \"OutOfScope\";","\t\t\t\t}","\t\t\t}","\t\t}","\t\treturn res;","\t}","","\t/**Преобразовать адрес в строку.*/","\tjsSubNetAddrModel.prototype.toString = function(){","\t\tvar parts = this.parts;","\t\tvar addr = \"\";","\t\tvar clear = false;","\t\tvar part;","\t\tvar format = \"%.\" + this.digitCount;","\t\t","\t\tswitch(this.radix){","\t\t\tcase 2:","\t\t\t\tformat += \"b\";","\t\t\tbreak;","\t\t\tcase 8:","\t\t\t\tformat += \"o\";","\t\t\tbreak;","\t\t\tcase 10:","\t\t\t\tformat += \"d\";","\t\t\tbreak;","\t\t\tcase 16:","\t\t\t\tformat += \"X\";","\t\t\tbreak;","\t\t\tdefault:","\t\t\t\tformat += \"d\";","\t\t\tbreak;","\t\t}","\t\t","\t\tif(parts.length){","\t\t\tvar noPart;","\t\t\tfor(var i=0;i<parts.length-1;i++){","\t\t\t\tpart = parts[i];","\t\t\t\tnoPart = no(part) && !this.optionalParts","\t\t\t\tif(!noPart && !this.checkPart(part, Math.pow(2, this.partBitCount) - 1)){","\t\t\t\t\tif(no(part)) part = 0;","\t\t\t\t\tif(this.expandZero){","\t\t\t\t\t\taddr += sprintf(format, part) + this.delim;","\t\t\t\t\t}","\t\t\t\t\telse{","\t\t\t\t\t\taddr += part.toString(this.radix) + this.delim;","\t\t\t\t\t}","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\tclear = true;","\t\t\t\t\tbreak;","\t\t\t\t}","\t\t\t}","\t\t\tpart = parts[parts.length-1];","\t\t\tnoPart = no(part) && !this.optionalParts","\t\t\tif(!noPart && !clear){","\t\t\t\tif(no(part)) part = 0;","\t\t\t\tif(this.expandZero){","\t\t\t\t\taddr += sprintf(format, part);","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\taddr += part.toString(this.radix);","\t\t\t\t}","\t\t\t}","\t\t\telse{","\t\t\t\taddr = \"\";","\t\t\t}","\t\t}","","\t\tif(this.omitFullMask){","\t\t\tif(addr != \"\" && this.bitmask && this.bitmask < this.bits) addr += \"/\" + this.bitmask;","\t\t}","\t\telse{","\t\t\tif(addr != \"\" && this.bitmask) addr += \"/\" + this.bitmask;","\t\t}","\t\treturn addr;","\t}","","\t/**Количество бит в маске.","\t * @type\tint","\t */","\tthis.bitmask = bits;","","\t/**Количество бит в маске.","\t * @type\tbool\tomitFullMask\tНе приписывать \"/<кол. бит>\" если кол. бит равно полному кол. бит в адресе.","\t */","\tthis.omitFullMask = omitFullMask;","\t\t","\t/**Массив частей адреса (октеты в случае IPv4).","\t * @type\tArray","\t */","\tthis.parts = [];","\t/**Общее количество бит в адресе.","\t * @type\tint","\t */","\tthis.bits = bits;","","\t/**Система счисления. Необходим если параметр addr задаётся строкой.","\t * @type\tint","\t */","\tthis.radix = radix;","\t/**Разделитель. Необходим если параметр addr задаётся строкой.","\t * @type\tString","\t */","\tthis.delim = delim;","","","\t/**Количество бит в одной части адреса","\t * @type\tint","\t */","\tthis.partBitCount = null;","","\t/**Количество цифр в одной части адреса","\t * @type\tint","\t */","\tthis.digitCount = null;","\t","\tif(addr instanceof Object){","\t\tthis.attrs = addr.__attrs__;","\t}","","\tthis.setParts(addr, radix, delim);","","","\t","\t/**Заполнять нулями часть на все digitCount если часть нулевая","\t * @type\tbool","\t */","\tthis.expandZero = expandZero;","","}","extend(jsSubNetAddrModel, jsModel);","","/**Создаёт новый экземпляр класса jsSubNetAddrController"," * @class\t\t\t\t\t\tГлавный контроллер адреса подсети."," * \t\t\t\t\t\t\t\tВсе аргументы используются для создания модели."," * @param\t{int}\t\tbits\tОбщее количество бит в адресе."," * @param\t{int}\t\tradix\tСистема счисления."," * @param\t{String}\taddr\tАдрес в принятой нотации."," * @param\t{String}\tdelim\tРазделитель."," * @param\t{String}\texpandZero\tЗаполнять нулями часть на все digitCount если часть нулевая"," * @param\t{bool}\t\tomitFullMask\tНе приписывать \"/<кол. бит>\" если кол. бит равно полному кол. бит в адресе."," * @constructor"," * @see \tjsSubNetAddrModel"," */ ","function jsSubNetAddrController(bits, addr, radix, delim, expandZero, omitFullMask){","\tjsSubNetAddrController.superclass.constructor.call(this);","","\tthis.ifaceTypes.client = {type: jsSubNetAddrSlotView, options:{}};","\t\t","\tthis.addChild(new jsSubNetAddrFieldController(bits, addr, radix, delim, expandZero, omitFullMask), \"field\");","\tthis.changeModel(this.getChild(\"field\").model);","","}","extend(jsSubNetAddrController, jsEditController);","","/**Создаёт новый экземпляр класса jsSubNetAddrFieldController"," * @class\t\t\t\t\t\tКонтроллер поля ввода адреса подсети. Само поле ввода."," * \t\t\t\t\t\t\t\tВсе аргументы используются для создания модели."," * @param\t{int}\t\tbits\tОбщее количество бит в адресе."," * @param\t{int}\t\tradix\tСистема счисления."," * @param\t{String}\taddr\tАдрес в принятой нотации."," * @param\t{String}\tdelim\tРазделитель."," * @param\t{String}\texpandZero\tЗаполнять нулями часть на все digitCount если часть нулевая"," * @param\t{bool}\t\tomitFullMask\tНе приписывать \"/<кол. бит>\" если кол. бит равно полному кол. бит в адресе."," * @constructor"," * @see \tjsSubNetAddrModel"," */ ","function jsSubNetAddrFieldController(bits, addr, radix, delim, expandZero, omitFullMask){","\tjsSubNetAddrFieldController.superclass.constructor.call(this);","\t","\tthis.ifaceTypes.client = {type: jsSubNetAddrClientView, options:{}};","\tthis.changeModel(new jsSubNetAddrModel(bits, addr, radix, delim, expandZero, omitFullMask));","}","extend(jsSubNetAddrFieldController, jsController);","","/**Создаёт новый экземпляр класса jsSubNetAddrSlotView"," * @class\t\t\t\t\t\t\tВнешняя раскладка для полей ввода."," * @param\t{int}\t\t\tviewInx\tИндекс интерфейса, к которому будет принадлежать представление."," * @param\t{jsController}\tctrl\tСсылка на контроллер."," * @param\t{Object}\t\toptions\tОпции представления."," * @constructor"," */ ","function jsSubNetAddrSlotView(ctrl, viewInx, options){","\tctrl.getChild(\"field\").nextIface = ctrl.lastIface;","\toptions.mandatory = true;","\tjsSubNetAddrSlotView.superclass.constructor.call(this, ctrl, viewInx, options);\t","\t","\tjsSubNetAddrSlotView.prototype.drawView = function(){","\t\t","\t\ttry{","\t\t\tswitch(this.ctrl.model.attrs.mode){","\t\t\t\tcase 4:","\t\t\t\t\tthis.setOption(\"disabled\", true);","\t\t\t\tbreak;","\t\t\t\tcase 0:","\t\t\t\t\tthis.options.hide = true;","\t\t\t\tbreak;","\t\t\t}","\t\t}","\t\tcatch(e){}","","\t\tjsSubNetAddrSlotView.superclass.drawView.call(this);","\t\t\t\t\t","\t}","}","extend(jsSubNetAddrSlotView, jsEditClientView);","","/**Создаёт новый экземпляр класса jsSubNetAddrClientView"," * @class\t\t\t\t\t\t\tПредставление поля ввода адреса подсети."," * @param\t{int}\t\t\tviewInx\tИндекс интерфейса, к которому будет принадлежать представление."," * @param\t{jsController}\tctrl\tСсылка на контроллер."," * @param\t{Object}\t\toptions\tОпции представления."," * \t\t\t\t\t\t\tОпции:<br>"," * \t\t\t\t\t\t\t<ul>"," * \t\t\t\t\t\t\t\t<li>summary - Показать в режиме \"сводки\" (текст без возможности изменения)</li>"," * \t\t\t\t\t\t\t</ul>"," * @constructor"," */ ","function jsSubNetAddrClientView(ctrl, viewInx, options){","\tjsSubNetAddrClientView.superclass.constructor.call(this, ctrl, viewInx, options);","\t","\t/**Отрисовка поля ввода сетевого адреса.*/","\tjsSubNetAddrClientView.prototype.drawView = function(){","\t\tjsSubNetAddrClientView.superclass.drawView.call(this);","\t\t","\t\tvar htmlToDraw;","\t\tvar model = this.ctrl.model;","\t\tvar options = this.options;","\t\t","\t\tif(options.summary){","\t\t\tthis.inputSel = options.viewBoxSel;","\t\t\tdelete this.inputId;","\t\t}","\t\telse{","\t\t\tif(no(this.inputId)){","\t\t\t\tthis.inputId = \"elemId\" + getUID();","\t\t\t}","\t\t\tthis.inputSel = \"#\" + this.inputId;","\t\t\tvar\tsize = model.digitCount*model.parts.length + model.parts.length -1;","\t\t\thtmlToDraw  = \"<input id='\" + this.inputId + \"' type='\";","\t\t\thtmlToDraw += options.password?\"password\":\"text\";","\t\t\thtmlToDraw += \"' maxlength='\" + size + \"'\";","\t\t\thtmlToDraw += \"' size='\" + size + \"'\";","\t\t\thtmlToDraw += \"/>\";","\t\t}","","\t\tthis.html(htmlToDraw);","","\t\tif(!options.summary && (model.bitmask < model.bits || !model.omitFullMask)){","\t\t\tvar size = parseInt(this.$input.attr(\"size\"));","\t\t\tthis.bitmaskDigitCount = Math.ceil(Math.log(this.ctrl.model.bits)/Math.log(10));","\t\t\tsize += this.bitmaskDigitCount + 1;","\t\t\tthis.$input.attr(\"size\", size).attr(\"maxlength\", size);","\t\t}","\t\t\t","\t}","\t","\t/**Проверить введённый сетевой адрес.","\t * statusCode может принимать следующие значения:<br>","\t * <span>&nbsp;&nbsp;</span>subNetMaskEmpty\t\t\t-\tпользователь оставил поле пустым.","\t * <span>&nbsp;&nbsp;</span>subNetMaskNaN\t\t\t-\tпользователь ввёл не число.","\t * <span>&nbsp;&nbsp;</span>subNetMaskOutOfScope\t-\tОдна из частей адреса вышла за допустимые пределы.","\t * Если при скрытом или запрещённом представлении валидатор находит ошибку, то устанавливает значение undefined","\t * в поле ввода и сбрасывает код ошибки.","\t * @param\t{String}\tvalue\tЗначение для проверки. Если не задано, то валидатор работает как обычно, т.е. проверяет значение из поля ввода.","\t * @type\tbool","\t * @return\tКод возврата метода базового класса.","\t */","\tjsSubNetAddrClientView.prototype.validate = function(){","\t\tthis.statusCode = null;","\t\tvar notEmpty;","\t\tvalue = this.val();","\t\tvar realtek = this.options.isRealtek;","\t\t","\t\tif(value.match(/^\\s*$/)){","\t\t\tthis.statusCode = \"netAddrEmpty\";","\t\t}","","\t\tvalue = value.split(\"/\")[0];","\t\tvar parts = value.split(this.ctrl.model.delim);","//\t\tthis.ctrl.model.partBitCount = this.ctrl.model.bits/parts.length;","\t\tfor(var i=0;i<parts.length;i++){","\t\t\tvalue = parts[i];","\t\t\t","\t\t\tif(!no(value) && !value.toString().match(/^\\s*$/)){","\t\t\t\tnotEmpty = true;","\t\t\t}","\t\t\tthis.statusCode = this.ctrl.model.checkPart(value, Math.pow(2, this.partBitCount) - 1);","\t\t\tif((this.options.ishidden || this.options.disabled) && this.statusCode){","\t\t\t\tthis.val(undefined);","\t\t\t\tthis.statusCode = null;","\t\t\t}","\t\t\tif(this.statusCode){","\t\t\t\tif(this.statusCode == \"Empty\") this.statusCode = \"Invalid\";","\t\t\t\tthis.statusCode = \"netAddr\" + this.statusCode;","\t\t\t\tbreak;","\t\t\t}","\t\t}","","\t\tif (realtek && options.pageTitle == 'LAN') {","\t\t\tif (parts[0]!=255 || parts[1]!=255 || parts[2]!=255) {","\t\t\t\tthis.statusCode = \"NetmaskErrorRealtek\";","\t\t\t}","\t\t}","","\t\tif(!this.options.ishidden && !this.options.disabled && !notEmpty) this.statusCode = \"netAddrEmpty\";","","\t\tif(!this.statusCode){","\t\t\tvar arr = value.split(\"/\");","\t\t\tif(arr instanceof Array && arr[1]){","\t\t\t\tthis.statusCode = this.ctrl.model.checkPart(arr[1], this.ctrl.model.bits, 10);","\t\t\t\tif(this.statusCode){","\t\t\t\t\tthis.statusCode = \"netAddr\" + this.statusCode;","\t\t\t\t}","\t\t\t}","\t\t}","\t\treturn jsSubNetAddrClientView.superclass.validate.call(this);","\t}","\t","","\t/**Обновить модель. Включает валидатор.","\t * @type\tbool","\t * @return\ttrue - обновилась, false - нет.","\t */","\tjsSubNetAddrClientView.prototype.updateModel = function(){","\t\tif(this.validate()){","\t\t\tthis.ctrl.model.setParts(this.val());","\t\t\treturn jsSubNetAddrClientView.superclass.updateModel.call(this);","\t\t}","\t\telse{","\t\t\treturn false;","\t\t}","\t}","","\t","\t/**Обновить представление.","\t */","\tjsSubNetAddrClientView.prototype.updateView = function(){","\t\tthis.val(this.ctrl.model.toString());","\t\tjsSubNetAddrClientView.superclass.updateView.call(this);","\t}","\t","\t/*Событие изменения значения поля ввода","\t * */","\tjsSubNetAddrClientView.prototype.onfieldchange = function(obj){","\t\tif (this.ctrl.subIPController) {","\t\t\tthis.ctrl.subIPController.getChild(0).event(\"guessmask\", obj.value);","\t\t}","\t\treturn true;","\t}","\t","\t/*Событие автоматической подстановки маски подсети","\t * */","\tthis.onguessmask = function(ip) {","\t\t/* IPv4 Only */","\t\tfunction guessMask(ip) {","\t\t\tif (ip.indexOf('.') > 0) {","\t\t\t\tif (options.isRealtek && options.pageTitle == 'LAN') {","\t\t\t\t\treturn '255.255.255.0';","\t\t\t\t} else {","\t\t\t\t\tvar classX = parseInt(ip.substring(0, ip.indexOf('.')));","","\t\t\t\t\tif (classX >= 1 && classX <= 126) {","\t\t\t\t\t\treturn '255.0.0.0';","\t\t\t\t\t}","\t\t\t\t\tif (classX >= 128 && classX <= 191) {","\t\t\t\t\t\treturn '255.255.0.0';","\t\t\t\t\t}","\t\t\t\t\tif (classX >= 192 && classX <= 223) {","\t\t\t\t\t\treturn '255.255.255.0';","\t\t\t\t\t}","\t\t\t\t\treturn '255.255.255.0'; // Скорее всего все-таки эта м��ска :)","\t\t\t\t}","\t\t\t}","\t\t\treturn null;","\t\t}","\t\t","\t\tvar mask = guessMask(ip);","\t\tif (mask) {","\t\t\tthis.ctrl.model.setParts(mask);","\t\t\tthis.updateView();","\t\t}","\t\treturn true;","\t}","\t","\t/**Количество частей адреса.","\t * @type\tint","\t */","\tthis.partCount = this.ctrl.model.parts.length;","\t/**Количество бит в одной части адреса","\t * @type\tint","\t */","\tthis.partBitCount = this.ctrl.model.bits/this.partCount;","","\t/**Количество цифр в поле ввода битовой маски.","\t * Вычисляется исходя из максимального количества бит в маске.","\t * @type\tint","\t */","\tthis.bitmaskDigitCount = Math.ceil(Math.log(this.ctrl.model.bits)/Math.log(10));","\t","\tthis.bind(\"fieldchange\", this.onfieldchange);","\tthis.bind(\"guessmask\", this.onguessmask);","}","extend(jsSubNetAddrClientView, jsBaseInputView);","","","/**Генератор стандартного описания MAC адреса для метода describe."," * @param\t{Object}\tobj\tКраткое описание MAC адреса."," */","controlTypes.mac = function(obj){","\tobj.ctrl = new jsMAController(obj.value);","\tobj.nextIface = \"client\";","\tif(!obj.options) obj.options = {};","\tvar opt = obj.options;","\topt.humanName = obj.name;","}","","/**Создаёт новый экземпляр класса jsNetAddrController"," * @class\t\t\t\t\t\tКонтроллер одиночного сетевого адреса."," * \t\t\t\t\t\t\t\tВсе аргументы используются для создания модели."," * @param\t{int}\t\tbits\tОбщее количество бит в адресе."," * @param\t{int}\t\tradix\tСистема счисления."," * @param\t{String}\taddr\tАдрес в принятой нотации."," * @param\t{String}\tdelim\tРазделитель."," * @param\t{String}\texpandZero\tЗаполнять нулями часть на все digitCount если часть нулевая"," * @constructor"," * @see \tjsNetAddrModel"," */ ","function jsNetAddrController(bits, addr, radix, delim, expandZero){","\tjsNetAddrController.superclass.constructor.call(this);","\t","\tthis.ifaceTypes.client = {type: jsSubNetAddrSlotView, options:{}};","\t","\tthis.addChild(new jsSubNetAddrFieldController(bits, addr, radix, delim, expandZero, true), \"field\");","\tthis.changeModel(this.getChild(\"field\").model);","}","extend(jsNetAddrController, jsEditController);","","//===============MAC адрес=======================","","/**Создаёт новый экземпляр класса jsMAController"," * @class\t\t\t\t\t\tКонтроллер MAC адреса."," * @param\t{String}\taddr\tMAC адрес."," * @constructor"," * @see \tjsNetAddrModel"," */ ","function jsMAController(addr){","\tif(!addr) addr = [null, null, null, null, null, null];","\tjsMAController.superclass.constructor.call(this, 48, addr, 16, \":\", true);","\t","\tthis.ifaceTypes.client.options = {","\t\tdelim: \":\",","\t\tradix: 16","\t};","}","extend(jsMAController, jsNetAddrController);","","/**Генератор стандартного описания IP адреса подсети для метода describe."," * @param\t{Object}\tobj\tКраткое описание IP адреса подсети."," */","controlTypes.ipsubnet = function(obj){","\tobj.ctrl = new jsSubNetIPController(obj.value, obj.version);","\tobj.nextIface = \"client\";","\tif(!obj.options) obj.options = {};","\tvar opt = obj.options;","\topt.humanName = obj.name;","}","","/**Генератор стандартного описания IPv4 адреса подсети для метода describe."," * @param\t{Object}\tobj\tКраткое описание IPv4 адреса подсети."," */","controlTypes.ipv4subnet = function(obj){","\tobj.ctrl = new jsSubNetIPv4Controller(obj.value);","\tobj.nextIface = \"client\";","\tif(!obj.options) obj.options = {};","\tvar opt = obj.options;","\topt.humanName = obj.name;","}","","/**Генератор стандартного описания IPv6 адреса подсети для метода describe."," * @param\t{Object}\tobj\tКраткое описание IPv6 адреса подсети."," */","controlTypes.ipv6subnet = function(obj){","\tobj.ctrl = new jsSubNetIPv6Controller(obj.value);","\tobj.nextIface = \"client\";","\tif(!obj.options) obj.options = {};","\tvar opt = obj.options;","\topt.humanName = obj.name;","}","","/**Создаёт новый экземпляр класса jsSubNetIPModel."," * Хранить адрес одним числом нельзя из-за ограничения разрядности числа в javascript - 32."," * @class\t\t\t\tМодель, представляющая IP адреса версий 4 и 6."," * \t\t\t\t\t\tПереопределяет методы toString и setParts для поддержки специфических нотаций IPv6<br>"," * @param\t{int}\t\tbits\tОбщее количество бит в адресе."," * @param\t{int}\t\tradix\tСистема счисления частей (октетов в IPv4)."," * @param\t{String}\taddr\tАдрес в принятой нотации."," * @param\t{String}\tdelim\tРазделитель частей (октетов в IPv4)."," * @param\t{bool}\t\texpandZero\tЗаполнять нулями часть на все digitCount если часть нулевая"," * @param\t{bool}\t\tomitFullMask\tНе приписывать \"/<кол. бит>\" если кол. бит равно полному кол. бит в адресе."," * @constructor"," */ ","function jsSubNetIPModel(bits, addr, radix, delim, expandZero, omitFullMask){","","\t/**Установить поле parts из строки или массива.","\t * @param\t\t\t\taddr\tМассив частей адреса или строка.","\t * @param\t{int}\t\tradix\tСистема счисления. Необходим если параметр addr задаётся строкой. Если не задавать, будет использ. this.radix, иначе изменит this.radix.","\t * @param\t{String}\tdelim\tРазделитель. Необходим если параметр addr задаётся строкой. Если не задавать, будет использ. this.delim, иначе изменит this.delim","\t */","\tjsSubNetIPModel.prototype.setParts = function(addr, radix, delim){","\t\tif(this.bits == 32){","\t\t\t//IPv4","\t\t\tjsSubNetIPModel.superclass.setParts.call(this, addr, radix, delim);","\t\t}","\t\telse{","\t\t\tif(!addr || addr instanceof Array){","\t\t\t\tjsSubNetIPModel.superclass.setParts.call(this, addr, radix, delim);","\t\t\t}","\t\t\telse{","\t\t\t\t//IPv6","\t\t\t\tthis.radix = no(radix)?this.radix:radix;","\t\t\t\tthis.delim = no(delim)?this.delim:delim;","\t\t\t\tthis.partBitCount = 16;","\t\t\t\tvar bitmask = addr.split(\"/\")[1];","\t\t\t\tif(no(bitmask)){","\t\t\t\t\tthis.bitmask = this.bits;","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\tthis.bitmask = parseInt(bitmask);","\t\t\t\t}","\t\t\t\tif(addr.match(/^::ffff:[0-9]{1,3}[.][0-9]{1,3}[.][0-9]{1,3}[.][0-9]{1,3}/)){","\t\t\t\t\tthis.parts = this.parseIPv4MappedIPv6(addr);","\t\t\t\t}","\t\t\t\telse if(addr.match(/::/) || addr.match(/^0+:0+/) || addr.match(/0+:0+$/)){","\t\t\t\t\tthis.parts = this.parseShortNotation(addr);","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\tjsSubNetIPModel.superclass.setParts.call(this, addr, radix, delim);","\t\t\t\t}","\t\t\t\tthis.partBitCount = this.bits/this.parts.length;","\t\t\t\tthis.digitCount = Math.ceil(Math.log(Math.pow(2, this.partBitCount))/Math.log(this.radix));","\t\t\t}","\t\t}","\t}","\t","\t/**Распарсить сокращённую нотацию IPv6","\t * @param\t{String}\taddr\tАдрес","\t * @type\t\t\t\tArray\tМассив частей адреса","\t */","\tthis.parseShortNotation = function(addr){","\t\taddr = addr.split(/\\//)[0];","\t\taddr = addr.replace(/^::/, \"z:\");","\t\taddr = addr.replace(/::$/, \":z\");","\t\taddr = addr.replace(/^0:0/, \"z:\");","\t\taddr = addr.replace(/0:0$/, \":z\");","\t\taddr = addr.replace(/::/, \":z:\");","\t\tvar arr = addr.split(/:/);","\t\t","\t\tvar parts = [0,0,0,0,0,0,0,0];","\t\tvar j = 0;","\t\tfor(var i in arr){","\t\t   if(arr[i] != \"z\"){","\t\t      parts[j++] = this.parsePart(arr[i], this.radix);","\t\t   }","\t\t   else{","\t\t      break;","\t\t   }","\t\t}","\t\tj = parts.length - 1;","\t\tfor(var i=arr.length-1;i>=0;i--){","\t\t   if(arr[i] != \"z\"){","\t\t      parts[j--] = this.parsePart(arr[i], this.radix);;","\t\t   }","\t\t   else{","\t\t      break;","\t\t   }","\t\t}","\t\treturn parts;","\t}","\t","\t/**Распарсить IPv6, отображенный на IPv4","\t * @param\t{String}\taddr\tАдрес","\t * @type\t\t\t\tArray\tМассив частей адреса","\t */","\tthis.parseIPv4MappedIPv6 = function(addr){","\t\tvar parts = [0,0,0,0,0,0xffff,0,0];","\t\tvar ipv4 = addr.match(/[0-9]{1,3}[.][0-9]{1,3}[.][0-9]{1,3}[.][0-9]{1,3}/)[0];","\t\tvar arr = ipv4.split(\".\");","\t\tvar part7 = sprintf(\"%.2X%.2X\", parseInt(arr[0], 10), parseInt(arr[1], 10));","\t\tparts[6] = this.parsePart(part7, this.radix);","\t\tvar part8 = sprintf(\"%.2X%.2X\", parseInt(arr[2], 10), parseInt(arr[3], 10));","\t\tparts[7] = this.parsePart(part8, this.radix);","\t\treturn parts;","\t}","","\t/**Преобразовать адрес в строку.*/","\tjsSubNetIPModel.prototype.toString = function(noMappedIPv4){","\t\tif(this.bits == 32){","\t\t\t//IPv4","\t\t\treturn jsSubNetIPModel.superclass.toString.call(this);","\t\t}","\t\telse{","\t\t\t//IPv6","\t\t\tvar addr = \"\";","\t\t\tvar parts = this.parts;","\t\t\tif(!noMappedIPv4","\t\t\t\t&& parts[0] == 0","\t\t\t\t&& parts[1] == 0","\t\t\t\t&& parts[2] == 0","\t\t\t\t&& parts[3] == 0","\t\t\t\t&& parts[4] == 0","\t\t\t\t&& parts[5] == 0xffff){","\t\t\t\t\tif(!no(parts[6]) && !no(parts[7])){","\t\t\t\t\t\t//IPv6, отображенный на IPv4","\t\t\t\t\t\taddr = sprintf(\"::ffff:%d.%d.%d.%d\", (parts[6] & 0xff00) >>> 8, parts[6] & 0x00ff, (parts[7] & 0xff00) >>> 8, parts[7] & 0x00ff);","\t\t\t\t\t\tif(this.bitmask < this.bits || !this.omitFullMask){","\t\t\t\t\t\t\taddr += \"/\" + this.bitmask;","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t\telse{","\t\t\t\t\t\taddr == \"\";","\t\t\t\t\t}","\t\t\t}","\t\t\telse{","\t\t\t\t//Сокращённая или обычная нотация","\t\t\t\tvar z = 0;","\t\t\t\tvar clear = false;","\t\t\t\tvar part = null","\t\t\t\tfor(var i=0;i<parts.length-1;i++){","\t\t\t\t\tpart = parts[i];","\t\t\t\t\tif(!no(part) && !this.checkPart(part, Math.pow(2, this.partBitCount) - 1)){","\t\t\t\t\t\tif(part || (z > 0 && z <= i)){","\t\t\t\t\t\t\taddr += part.toString(this.radix);","\t\t\t\t\t\t}","\t\t\t\t\t\telse{","\t\t\t\t\t\t\tz++;","\t\t\t\t\t\t}","\t\t\t\t\t\taddr += this.delim;","\t\t\t\t\t}","\t\t\t\t\telse{","\t\t\t\t\t\tclear = true;","\t\t\t\t\t\tbreak;","\t\t\t\t\t}","\t\t\t\t}","\t\t\t\tif(!no(parts[parts.length - 1]) && !clear){","\t\t\t\t\tif(parts[parts.length - 1] || (z > 0 && z <= i)){","\t\t\t\t\t\taddr += parts[parts.length - 1].toString(this.radix);","\t\t\t\t\t}","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\taddr = \"\";","\t\t\t\t}","\t\t\t\taddr = addr.replace(/:[0:]+/, \"::\");","\t\t\t\taddr = addr.replace(/::[0:]+/, \"::\");","\t\t\t\taddr = addr.replace(/:::+/, \"::\");","\t\t\t\t","\t\t\t\tif(!clear && (this.bitmask < this.bits || !this.omitFullMask)){","\t\t\t\t\taddr += \"/\" + this.bitmask;","\t\t\t\t}","\t\t\t}","\t\t\treturn addr;","\t\t}","\t}","\tjsSubNetIPModel.superclass.constructor.call(this, bits, addr, radix, delim, expandZero, omitFullMask);","}","extend(jsSubNetIPModel, jsSubNetAddrModel);","","/**Создаёт новый экземпляр класса jsSubNetIPController"," * @class\t\t\t\t\t\tГлавный контроллер адреса подсети."," * \t\t\t\t\t\t\t\tВсе аргументы используются для создания модели."," * @param\t{String}\taddr\tАдрес в принятой нотации."," * @param\t{int}\t\tversion\tВерсия IP протокола. Допустимые значения: 4 (по умолчанию), 6."," * @param\t{bool}\t\tomitFullMask\tНе приписывать \"/<кол. бит>\" если кол. бит равно полному кол. бит в адресе."," * @constructor"," * @see \tjsSubNetIPModel"," */ ","function jsSubNetIPController(addr, version, omitFullMask){","\tjsSubNetIPController.superclass.constructor.call(this);","\t","\tthis.ifaceTypes.client = {type: jsSubNetAddrSlotView, options:{}};","\t\t","\tthis.addChild(new jsSubNetIPFieldController(addr, version, omitFullMask), \"field\");","\tthis.changeModel(this.getChild(\"field\").model);","","\t/**Вызвать метод setVersion своего потомка field.","\t * @param\t{int}\tversion\tВерсия IP протокола. Допустимые значения: 4 (по умолчанию), 6.","\t */","\tthis.setVersion = function(version){","\t\tthis.getChild(\"field\").setVersion(version);","\t}","}","extend(jsSubNetIPController, jsEditController);","","/**Создаёт новый экземпляр класса jsSubNetIPFieldController"," * @class\t\t\t\t\tКонтроллер IP адреса подсети. Само поле ввода."," * @param\t{String}\t\taddr\t\t\tАдрес в принятой нотации."," * @param\t{int}\t\t\tversion\t\t\tВерсия IP протокола. Допустимые значения: 4 (по умолчанию), 6."," * @param\t{bool}\t\t\tomitFullMask\tНе приписывать \"/<кол. бит>\" если кол. бит равно полному кол. бит в адресе."," * @constructor"," * @see \tjsSubNetAddrModel"," */ ","function jsSubNetIPFieldController(addr, version, omitFullMask){","\tjsSubNetIPFieldController.superclass.constructor.call(this);","\tvar radix = 10;","\tvar delim = \".\";","\tvar bits = 32;","\tif(version && version == 6){","\t\tif(!addr) addr = [null, null, null, null, null, null, null, null];","\t\tradix = 16;","\t\tdelim = \":\";","\t\tbits = 128;","\t}","\telse{","\t\tif(!addr) addr = [null, null, null, null];","\t}","\tthis.ifaceTypes.client = {type: jsSubNetIPClientView, options:{}};","\tthis.changeModel(new jsSubNetIPModel(bits, addr, radix, delim, false, omitFullMask));","//\tjsSubNetIPController.superclass.constructor.call(this, bits, addr, radix, delim, omitFullMask);","\t","\t/**Установить версию протокола IP и преобразовать адрес, если это возможно","\t * @param\t{int}\tversion\tВерсия IP протокола. Допустимые значения: 4 (по умолчанию), 6.","\t */","\tthis.setVersion = function(version){","\t\tvar model  = this.model;","\t\tif(version && version == 6){","\t\t\tmodel.bits = 128;","\t\t\tmodel.radix = 16;","\t\t\tmodel.delim = \":\";","\t\t\tmodel.setParts([null, null, null, null, null, null, null, null]);","\t\t}","\t\telse{","\t\t\tmodel.bits = 32;","\t\t\tmodel.radix = 10;","\t\t\tmodel.delim = \".\";","\t\t\tmodel.setParts([null, null, null, null]);","\t\t}","\t\tmodel.bitmask = model.bits;","\t\tmodel.partBitCount = model.bits/model.parts.length;","\t\tmodel.digitCount = Math.ceil(Math.log(Math.pow(2, model.partBitCount))/Math.log(model.radix));","\t}","}","extend(jsSubNetIPFieldController, jsController);","","/**Создаёт новый экземпляр класса jsSubNetIPv4Controller"," * @class\t\t\t\t\tКонтроллер IPv4 адреса подсети."," * @param\t{String}\t\taddr\tАдрес в принятой нотации."," * @constructor"," * @see \tjsSubNetAddrModel"," */ ","function jsSubNetIPv4Controller(addr){","\tjsSubNetIPv4Controller.superclass.constructor.call(this, addr, 4);","}","extend(jsSubNetIPv4Controller, jsSubNetIPController);","","/**Создаёт новый экземпляр класса jsSubNetIPv6Controller"," * @class\t\t\t\t\tКонтроллер IPv6 адреса подсети."," * @param\t{String}\t\taddr\tАдрес в принятой нотации."," * @constructor"," * @see \tjsSubNetAddrModel"," */ ","function jsSubNetIPv6Controller(addr){","\tjsSubNetIPv6Controller.superclass.constructor.call(this, addr, 6, true);","}","extend(jsSubNetIPv6Controller, jsSubNetIPController);","","/**Создаёт новый экземпляр класса jsSubNetIPClientView"," * @class\t\t\t\t\tПредставление адреса подсети."," * @param\t{int}\t\t\tviewInx\tИндекс интерфейса, к которому будет принадлежать представление."," * @param\t{jsController}\tctrl\tСсылка на контроллер."," * @param\t{Object}\t\toptions\tОпции представления."," * @constructor"," */ ","function jsSubNetIPClientView(ctrl, viewInx, options){","\tjsSubNetIPClientView.superclass.constructor.call(this, ctrl, viewInx, options);","\t","\t/**Проверить введённый сетевой адрес.","\t * statusCode может принимать следующие значения:<br>","\t * <span>&nbsp;&nbsp;</span>subNetMaskEmpty\t\t\t-\tпользователь оставил поле пустым.","\t * <span>&nbsp;&nbsp;</span>subNetMaskNaN\t\t\t-\tпользователь ввёл не число.","\t * <span>&nbsp;&nbsp;</span>subNetMaskOutOfScope\t-\tОдна из частей адреса вышла за допустимые пределы.","\t * Если при скрытом или запрещённом представлении валидатор находит ошибку, то устанавливает значение undefined","\t * в поле ввода и сбрасывает код ошибки.","\t * @type\tbool","\t * @return\tКод возврата метода базового класса.","\t */","\tjsSubNetIPClientView.prototype.validate = function(){","\t\tthis.statusCode = null;","\t\tvar value = this.val();","\t\tvar arr;","\t\tif(this.options.ishidden || this.options.disabled) return jsSubNetAddrClientView.superclass.validate.call(this);","\t\t","\t\tif(value.match(/^$/)){","\t\t\tthis.statusCode = \"netAddrEmpty\";","\t\t\treturn jsSubNetAddrClientView.superclass.validate.call(this);","\t\t}","\t\t","\t\tif(this.ctrl.model.bits == 128){","\t\t\tthis.ctrl.model.partBitCount = 16;","\t\t\tif(value.match(/::/) || value.match(/^0+:0+/) || value.match(/0+:0+$/)){","\t\t\t\t//специальная нотация","\t\t\t\tif(!value.match(/^::ffff:[0-9]{1,3}[.][0-9]{1,3}[.][0-9]{1,3}[.][0-9]{1,3}/)){","\t\t\t\t\t//сокращённая нотация","\t\t\t\t\tif(value.match(/^\\s*$/)){","\t\t\t\t\t\tthis.statusCode = \"netAddrEmpty\";","\t\t\t\t\t}","\t\t\t\t\tif(!value.match(/^::$/) && !value.match(/^::[0:]*$/)  && !value.match(/^[0:]*::$/)){","\t\t\t\t\t\tvar parts = this.ctrl.model.parseShortNotation(value);","\t\t\t\t\t\tif(no(parts[0])","\t\t\t\t\t\t\t|| no(parts[1])","\t\t\t\t\t\t\t|| no(parts[2])","\t\t\t\t\t\t\t|| no(parts[3])","\t\t\t\t\t\t\t|| no(parts[4])","\t\t\t\t\t\t\t|| no(parts[5])","\t\t\t\t\t\t\t|| no(parts[6])","\t\t\t\t\t\t\t|| no(parts[7])){","\t\t\t\t\t\t\tthis.statusCode = \"netAddrInvalid\";","\t\t\t\t\t\t}","\t\t\t\t\t\tif(!this.statusCode){","\t\t\t\t\t\t\tvar arr = value.split(\"/\");","\t\t\t\t\t\t\tif(arr instanceof Array && arr[1]){","\t\t\t\t\t\t\t\tthis.statusCode = this.ctrl.model.checkPart(arr[1], this.ctrl.model.bits, 10);","\t\t\t\t\t\t\t\tif(this.statusCode){","\t\t\t\t\t\t\t\t\tthis.statusCode = \"netAddr\" + this.statusCode;","\t\t\t\t\t\t\t\t}","\t\t\t\t\t\t\t}","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t}","\t\t\t\treturn jsSubNetAddrClientView.superclass.validate.call(this);","\t\t\t}","\t\t\telse{","\t\t\t\t//общая нотация","\t\t\t\tarr = value.split(\":\");","\t\t\t\tif(arr.length == 8){","//\t\t\t\tif(value.match(/^\\w{1,4}:\\w{1,4}:\\w{1,4}:\\w{1,4}:\\w{1,4}:\\w{1,4}:\\w{1,4}:\\w{1,4}\\/*/)){","//\t\t\t\tif(value.match(/^\\w{1,4}:\\w{1,4}:\\w{1,4}:\\w{1,4}:\\w{1,4}:\\w{1,4}:\\w{1,4}:\\w{1,4}$/)){","\t\t\t\t\treturn jsSubNetIPClientView.superclass.validate.call(this);","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\tthis.statusCode = \"netAddrInvalid\";","\t\t\t\t\treturn jsSubNetAddrClientView.superclass.validate.call(this);","\t\t\t\t}","","\t\t\t}","\t\t}","\t\telse{","\t\t\tthis.ctrl.model.partBitCount = 8;","\t\t\tarr = value.split(\".\");","\t\t\tif(arr.length == 4){","//\t\t\tif(value.match(/^[0-9]{1,3}[.][0-9]{1,3}[.][0-9]{1,3}[.][0-9]{1,3}\\/*/)){","//\t\t\tif(value.match(/^[0-9]{1,3}[.][0-9]{1,3}[.][0-9]{1,3}[.][0-9]{1,3}/)){","\t\t\t\treturn jsSubNetIPClientView.superclass.validate.call(this);","\t\t\t}","\t\t\telse{","\t\t\t\tthis.statusCode = \"netAddrInvalid\";","\t\t\t\treturn jsSubNetAddrClientView.superclass.validate.call(this);","\t\t\t}","\t\t}","\t}","}","extend(jsSubNetIPClientView, jsSubNetAddrClientView);","","/**Генератор стандартного описания IP адреса для метода describe."," * @param\t{Object}\tobj\tКраткое описание IP адреса."," */","controlTypes.ip = function(obj){","\tobj.ctrl = new jsIPController(obj.value, obj.version);","\tobj.nextIface = \"client\";","\tif(!obj.options) obj.options = {};","\tvar opt = obj.options;","\topt.humanName = obj.name;","}","","/**Генератор стандартного описания IPv4 адреса для метода describe."," * @param\t{Object}\tobj\tКраткое описание IPv4 адреса."," */","controlTypes.ipv4 = function(obj){","\tobj.ctrl = new jsIPv4Controller(obj.value);","\tobj.nextIface = \"client\";","\tif(!obj.options) obj.options = {};","\tvar opt = obj.options;","\topt.humanName = obj.name;","}","","/**Генератор стандартного описания IPv6 адреса для метода describe."," * @param\t{Object}\tobj\tКраткое описание IPv6 адреса."," */","controlTypes.ipv6 = function(obj){","\tobj.ctrl = new jsIPv6Controller(obj.value);","\tobj.nextIface = \"client\";","\tif(!obj.options) obj.options = {};","\tvar opt = obj.options;","\topt.humanName = obj.name;","}","","","/**Создаёт новый экземпляр класса jsIPController"," * @class\t\t\t\t\t\tГлавный контроллер IP-адреса."," * \t\t\t\t\t\t\t\tВсе аргументы используются для создания модели."," * @param\t{String}\taddr\tАдрес в принятой нотации."," * @param\t{int}\t\tversion\tВерсия IP протокола. Допустимые значения: 4 (по умолчанию), 6."," * @param\t{jsIPController}\tsubIPController\tСсылка на контроллер связанный с данным (маска подсети!)."," * @constructor"," * @see \tjsSubNetIPModel"," */ ","function jsIPController(addr, version, subIPController, realtek){","\tjsIPController.superclass.constructor.call(this);","\t","\tthis.ifaceTypes.client = {type: jsSubNetAddrSlotView, options:{}};","\t\t","\tthis.addChild(new jsIPFieldController(addr, version, subIPController, realtek), \"field\");","\tthis.changeModel(this.getChild(\"field\").model);","","\t/**Вызвать метод setVersion своего потомка field.","\t * @param\t{int}\tversion\tВерсия IP протокола. Допустимые значения: 4 (по умолчанию), 6.","\t */","\tthis.setVersion = function(version){","\t\tthis.getChild(\"field\").setVersion(version);","\t}","}","extend(jsIPController, jsEditController);","","/**Создаёт новый экземпляр класса jsIPFieldController"," * @class\t\t\t\t\tКонтроллер IP адреса подсети. Само поле ввода."," * @param\t{String}\t\taddr\tАдрес в принятой нотации."," * @param\t{int}\t\t\tversion\tВерсия IP протокола. Допустимые значения: 4 (по умолчанию), 6."," * @param\t{jsIPController}\tsubIPController\tСсылка на контроллер связанный с данным (маска подсети!)."," * @constructor"," */ ","function jsIPFieldController(addr, version, subIPController, realtek){","\tjsIPFieldController.superclass.constructor.call(this);","\t","\tif (subIPController) {","\t\tthis.subIPController = subIPController;","\t} else this.subIPController = null;","\t","\tvar radix = 10;","\tvar delim = \".\";","\tvar bits = 32;","\tif(version && version == 6){","\t\tif(!addr) addr = [null, null, null, null, null, null, null, null];","\t\tradix = 16;","\t\tdelim = \":\";","\t\tbits = 128;","\t}","\telse{","\t\tif(!addr) addr = [null, null, null, null];","\t}","\tthis.changeModel(new jsSubNetIPModel(bits, addr, radix, delim, false, true));\t","\t","\tthis.ifaceTypes.client = {type: jsSubNetIPClientView, options:{ isRealtek:realtek }};","\t","\t/**Установить версию протокола IP и преобразовать адрес, если это возможно","\t * @param\t{int}\tversion\tВерсия IP протокола. Допустимые значения: 4 (по умолчанию), 6.","\t */","\tthis.setVersion = function(version){","\t\tvar model  = this.model;","\t\tif(version && version == 6){","\t\t\tmodel.bits = 128;","\t\t\tmodel.radix = 16;","\t\t\tmodel.delim = \":\";","\t\t\tmodel.setParts([null, null, null, null, null, null, null, null]);","\t\t}","\t\telse{","\t\t\tmodel.bits = 32;","\t\t\tmodel.radix = 10;","\t\t\tmodel.delim = \".\";","\t\t\tmodel.setParts([null, null, null, null]);","\t\t}","\t\tmodel.bitmask = model.bits;","\t\tmodel.partBitCount = model.bits/model.parts.length;","\t\tmodel.digitCount = Math.ceil(Math.log(Math.pow(2, model.partBitCount))/Math.log(model.radix));","\t}","}","extend(jsIPFieldController, jsController);","","//===============IP адрес одиночного узла конкретной версии=======================","","/**Создаёт новый экземпляр класса jsIPv4Controller"," * @class\t\t\t\t\t\tКонтроллер IPv4 адреса."," * @param\t{String}\taddr\tIPv4 адрес."," * @param\t{jsIPController}\tsubIPv4Controller\tСсылка на контроллер связанный с данным (маска подсети!)."," * @constructor"," * @see \tjsNetAddrModel"," */ ","function jsIPv4Controller(addr, subIPv4Controller, realtek){","\tjsIPv4Controller.superclass.constructor.call(this, addr, 4, subIPv4Controller, realtek);","}","extend(jsIPv4Controller, jsIPController);","","/**Создаёт новый экземпляр класса jsIPv6Controller"," * @class\t\t\t\tКонтроллер IPv6 адреса."," * @param\t{String}\taddr\tIPv6 адрес."," * @constructor"," * @see \tjsNetAddrModel"," */ ","function jsIPv6Controller(addr){","\tjsIPv6Controller.superclass.constructor.call(this, addr, 6, null);","}","extend(jsIPv6Controller, jsIPController);","","","/**Создаёт новый экземпляр класса jsDecorController."," * @class Главная функция этого контроллера объявлять интерфейсы клиентской стороны,"," * которые рисуют всякие декоративные элементы. На данный момент есть всего один - разделитель."," * @constructor"," */","function jsDecorController(){","\tjsDecorController.superclass.constructor.call(this);","\t","\tthis.ifaceTypes.separator = {type: jsSeparatorView};","}","extend(jsDecorController, jsController);","","/**Создаёт новый экземпляр класса jsSeparatorView"," * @class\tПредставляет горизонтальный разделитель старницы"," * \t\t\tдля визуального разделения группы полей ввода и прочего."," * @constructor"," * @param\t{int}\t\t\tviewInx\tИндекс интерфейса, к которому будет принадлежать пре��ставление."," * @param\t{jsController}\tctrl\tСсылка на контроллер."," * @param\t{Object}\t\toptions\tОпции представления."," * \t\t\t\t\t\t\tОпции:<br>"," * \t\t\t\t\t\t\tlabel - то, что написано над разделителем (ключ объекта lang).<br>"," * \t\t\t\t\t\t\tdescText - то, что написано под разделителем (ключ объекта lang)."," */","function jsSeparatorView(ctrl, viewInx, options){","\tjsSeparatorView.superclass.constructor.call(this, ctrl, viewInx, options);","","\t/**Отрисовка разделителя.*/","\tjsSeparatorView.prototype.drawView = function(){","\t\tjsSeparatorView.superclass.drawView.call(this);","\t\t","\t\tvar htmlToDraw;","\t\t","\t\tvar options = this.options?this.options:{};","\t\t","\t\thtmlToDraw\t\t=  \t\"<div class='decorSeparator'>\"","\t\t\t\t\t\t+\t\"<div class='decorLabelImage'></div>\"","\t\t\t\t\t\t+\t\"<div class='decorLabelText'>\"","\t\tif(options.label){","\t\t\thtmlToDraw\t+=\t\"<font>\"","\t\t\t\t\t\t+\t\"&nbsp;&nbsp;\"+lng(options.label)","\t\t\t\t\t\t+\t\"</font>\";","\t\t}","\t\thtmlToDraw\t\t+=\t\"</font>\"","\t\t\t\t\t\t+\t\"</div>\"","\t\t\t\t\t\t+\t\"<div class='decorEndUpImage'>\"","\t\t\t\t\t\t+\t\"</div>\"","\t\t\t\t\t\t+\t\"</div>\";","","\t\thtmlToDraw\t\t+=\t\"<div class='decorSection'>\"","\t\t\t\t\t\t+\t\"<div class='decorDescImage'></div>\";","\t\thtmlToDraw\t\t+=\t\"</div>\";","\t\tif(options.descText){","\t\t\thtmlToDraw\t+=\t\"<div class='decorDescText'>\"","\t\t\t\t\t\t+\tlng(options.descText)","\t\t\t\t\t\t+\t\"</div>\";","\t\t}","\t\thtmlToDraw\t\t+=\t\"<div class='decorSpacer'></div>\";","\t\t$(options.viewBoxSel).html(htmlToDraw);","\t}","","}","extend(jsSeparatorView, jsCSideView);","(function(){","","\t//-------------------------------------","\t// Делаем копию jQuery, используя sub()","\t//-------------------------------------","\tvar plugin = jQuery.sub();","","\t// Добавим наш плагин к оригинальной копии jQuery","\tjQuery.fn.lightUIOverlay = function(){","\t\tvar $overlay = this.find(\">.lightUI>.overlay\");","\t\tif(!$overlay.length){","\t\t\tthis.append(\"<div class='lightUI'><div class='overlay' style='display: none'></div></div>\");","\t\t\tthis.css(\"position\", \"relative\");","\t\t}","","\t\t//-----------------------------------------------------------------------","\t\t// Расширим возможности полученной копии новыми методами плагина (public)","\t\t//-----------------------------------------------------------------------","\t\tplugin.fn.extend({","\t\t\tshow: function(){","\t\t\t\tif(this.is(\":visible\")){","\t\t\t\t\tvar $content = this.find(\">.lightUI>.overlay\");","\t\t\t\t\tvar nodeName = this.get(0).nodeName;","\t\t\t\t\tthis.find(\">.lightUI>.overlay\").css(\"display\", \"\");","\t\t\t\t}","\t\t\t\treturn this;","\t\t\t},","\t\t\thide: function(){","\t\t\t\tthis.find(\">.lightUI>.overlay\").css(\"display\", \"none\");","\t\t\t\treturn this;","\t\t\t}","\t\t});","","\t\treturn plugin(this);","\t}","})();","(function(){","\t\t","\t//-------------------------------------","\t// Делаем копии jQuery, используя sub()","\t//-------------------------------------","\tvar plugin = jQuery.sub();\t\t//для самого плагина ","\tvar rowPlugin = jQuery.sub();\t//для подплагина строки","\tvar colPlugin = jQuery.sub();\t//для подплагина столбца","\tvar cellPlugin = jQuery.sub();\t//для подплагина ячейки","","","\t//-------------------------------------","\t// Объявляем статические свойства","\t//-------------------------------------","\tvar lockEditing = false;","","\t//-------------------------------------","\t// Объявляем статические методы","\t//-------------------------------------","\tvar checkUniqueFlag = function(index, flags){","\t\tif(is.unset(flags)) flags = {};","\t\tif(is.unset(flags.unique)) return;","\t\tif(is.unset(flags.re)) flags.re = [];","\t\telse if(is.func(flags.re)){","\t\t\tvar foo = flags.re;","\t\t\tflags.re = [foo];","\t\t}","\t\t","\t\tflags.re.push(callbackEx(this, function(value, alias, index, matchCase){","\t\t\tvar $col = this.col(index);","\t\t\tvar $cell;","\t\t\tif(matchCase){","\t\t\t\tvar val;","\t\t\t\tfor(var i=0; i<$col.length; i++){","\t\t\t\t\t$cell = $col.row(i);","\t\t\t\t\tval = $cell.html();","\t\t\t\t\tif(is.unset($cell.data(\"$input\")) && val != \"\" && alias == val) return \"dup\";","\t\t\t\t}","\t\t\t}","\t\t\telse{","\t\t\t\tvar alias = alias.toLowerCase();","\t\t\t\tvar val;","\t\t\t\tfor(var i=0; i<$col.length; i++){","\t\t\t\t\t$cell = $col.row(i);","\t\t\t\t\tval = $cell.html();","\t\t\t\t\tif(is.unset($cell.data(\"$input\")) && val != \"\" && alias == val.toLowerCase()) return \"dup\";","\t\t\t\t}","\t\t\t}","\t\t\treturn null;","\t\t}, index, flags.unique==\"hard\"?true:false));","\t}","\t","\tvar getRowPattern = function(){","\t\tvar pattern = \"<tr>\";","\t\t\t","\t\tvar header = this.data(\"header\");","\t\tvar colspan;","\t\tfor(var i=0; i<header.length; i++){","\t\t\tpattern += \"<td\";","\t\t\tpattern += \" cell-name='\" + lng(header[i].name) + \"'\";","\t\t\tcolspan = header[i].colspan;","\t\t\tif(is.set(colspan) && colspan > 1){","\t\t\t\tpattern += \" colspan=\" + colspan;","\t\t\t}","\t\t\tpattern += \"></td>\";","\t\t}","\t\tpattern += \"</tr>\";","\t\treturn pattern;","\t}","\t\t","\tvar getHeadRow = function(header){","\t\tvar pattern = \"<tr>\";","\t\tfor(var i=0; i<header.length; i++){","\t\t\tpattern += \"<td\";","\t\t\tif(header[i].colspan){","\t\t\t\tpattern += \" colspan='\" + header[i].colspan + \"'\";","\t\t\t}","\t\t\tif(header[i].rowspan){","\t\t\t\tpattern += \" rowspan='\" + header[i].rowspan + \"'\";","\t\t\t}","\t\t\tif(is.set(header[i].name)){","\t\t\t\tif(header[i].notranslate){","\t\t\t\t\tpattern += \">\" + header[i].name;","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\tpattern += \" langkey='\" + header[i].name + \"'>\";","\t\t\t\t\tpattern += lng(header[i].name);","\t\t\t\t}","\t\t\t}","\t\t\telse{","\t\t\t\tpattern += \">\";","\t\t\t}","\t\t\tpattern += \"</td>\";","\t\t}","\t\tpattern += \"</tr>\";","\t\treturn pattern;","\t}","\t\t","\tvar getHeadPattern = function(header){","\t\tvar pattern = \"<thead>\";","\t\tif(is.array(header[0])){","\t\t\tfor(var i=0; i<header.length; i++){","\t\t\t\tpattern += getHeadRow(header[i]);","\t\t\t}","\t\t}","\t\telse{","\t\t\tpattern += getHeadRow(header);","\t\t}","\t\tpattern += \"</thead>\";","\t\treturn pattern;","\t}","\t\t","\tvar getColInx = function(index){","\t\tif(is.string(index)){","\t\t\tvar namedColumns = this.data(\"namedColumns\");","\t\t\tif(is.unset(namedColumns)){","\t\t\t\tnamedColumns = this.data(\"plugin\").data(\"namedColumns\");","\t\t\t}","\t\t\treturn namedColumns[index].inx;","\t\t}","\t\telse{","\t\t\treturn index;","\t\t}","\t}","","\tvar zebra = function($grid){","\t\t$grid.find(\"tbody tr:even\").addClass(\"even\").removeClass(\"odd\");","\t\t$grid.find(\"tbody tr:odd\").removeClass(\"even\").addClass(\"odd\");","\t}","\t\t","\tvar selectAll = function(event){","\t\t$(this).closest(\"table\").find(\" tbody td.selectable>input\").attr(\"checked\", is.set($(this).attr(\"checked\"))?$(this).attr(\"checked\"):false).trigger(\"change\");","\t}","\t","\tvar selectRow = function(event){","\t\tvar $row = rowPlugin($(this).parent());","\t\tif($(this).find(\"input\").attr(\"checked\")){","\t\t\t$row.selectRow();","\t\t}","\t\telse{","\t\t\t$row.unselectRow();","\t\t}","\t}","","\tvar insSelCol = function(){","\t\tvar pattern = \"<td class='selectable' rowspan='\" + this.data(\"headerHeight\") + \"'><input type='checkbox'/></td>\";","\t\tthis.find(\"thead tr:first\")","\t\t\t.find(\"td:first\")","\t\t\t.before(pattern);","\t\tthis.find(\"thead tr:first td:first input\")","\t\t\t.change(selectAll);","\t\tthis.find(\"tbody tr\")","\t\t\t.find(\"td:first\")","\t\t\t.before(\"<td class='selectable'><input type='checkbox'/></td>\")","\t\t\t.prev()","\t\t\t.change(selectRow);","\t}","","\tvar insDragCol = function(){","\t\tthis.find(\"thead tr:first\")","\t\t\t.find(\"td:last\")","\t\t\t.after(\"<td rowspan='\" + this.data(\"headerHeight\") + \"'>&nbsp;</td>\");","\t\tthis.find(\"thead tr:first td:last\")","\t\t\t.addClass(\"draggable\");","\t\tthis.find(\"tbody tr\")","\t\t\t.find(\"td:last\")","\t\t\t.after(\"<td class='draggable'>&nbsp;</td>\");","\t}","","\tvar createInput = function($inputBox, type, flags){","\t\tvar inputFlags;","\t\tvar $input = null;","\t\tswitch(type){","\t\t\tcase \"ipv4\":","\t\t\t\tinputFlags = $.extend(true, {maxLength: 18}, flags);","\t\t\t\t$input = $inputBox.lightUIIPv4(inputFlags);","\t\t\tbreak;","\t\t\tcase \"ipv6\":","\t\t\t\tinputFlags = $.extend(true, {maxLength: 43}, flags);","\t\t\t\t$input = $inputBox.lightUIIPv6(inputFlags);","\t\t\tbreak;","\t\t\tcase \"ipv4ipv6\":","\t\t\t\tinputFlags = $.extend(true, {maxLength: 43}, flags);","\t\t\t\t$input = $inputBox.lightUIIPv4IPv6(inputFlags);","\t\t\tbreak;","\t\t\tcase \"mac\":","\t\t\t\tinputFlags = $.extend(true, {maxLength: 17}, flags);","\t\t\t\t$input = $inputBox.lightUIMAC(inputFlags);","\t\t\tbreak;","\t\t\tcase \"port\":","\t\t\t\t$input = $inputBox.lightUIPort(flags);","\t\t\tbreak;","\t\t\tcase \"host\":","\t\t\t\t$input = $inputBox.lightUIDomainName(flags);","\t\t\tbreak;","\t\t\tcase \"select\":","\t\t\t\t$input = $inputBox.lightUISelect(flags);","\t\t\tbreak;","\t\t\tcase \"combogrid\":","\t\t\t\t$input = $inputBox.lightUIComboGrid(flags);","\t\t\tbreak;","\t\t\tcase \"number\":","\t\t\t\t$input = $inputBox.lightUINumber(flags);","\t\t\tbreak;","\t\t\tcase \"checkbox\":","\t\t\t\t$input = $inputBox.lightUICheckbox(flags);","\t\t\tbreak;","\t\t\tcase \"text\":","\t\t\tdefault:","\t\t\t\tif(is.func(type)){","\t\t\t\t\t$input = type.call($inputBox, flags);","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\t$input = $inputBox.lightUIText(flags);","\t\t\t\t}","//\t\t\t\t$input = $inputBox.lightUIText(flags);","\t\t\tbreak;","\t\t}","\t\treturn $input;","\t}","\t","\tvar onedit = function(event){","\t\tsetTimeout(callback(this, function(){","\t\t\tif(lockEditing) return;","\t\t\t","\t\t\tvar $cell = cellPlugin(this);","\t\t\tvar $grid = $cell.data(\"plugin\");","","\t\t\t//Закрыть активную ячейку","\t\t\tvar $activeCell = $grid.data(\"$activeCell\");","\t\t\tif(is.set($activeCell)){","\t\t\t\t$activeCell.stopEditing();","\t\t\t}","\t\t\t","\t\t\t$cell.startEditing();","\t\t\tvar $input = $cell.data(\"$input\");","\t\t\t","\t\t\t//Инициализация и позиционирование","\t\t\tif(is.jquery($input)){","\t\t\t\tvar data = {$cell: $cell, $input: $input};","\t\t\t\t$input.bind(\"enter.input\", data, ontab)","\t\t\t\t\t.bind(\"tab.input\", data, ontab)","\t\t\t\t\t.bind(\"unfocus.input\", data, onenter)","\t\t\t\t\t.bind(\"error.input\", data, onerror)","\t\t\t\t\t.bind(\"esc.input\", data, onescape)","\t\t\t\t\t.find(\"input, select\")","\t\t\t\t\t.bind(\"keydown\", function(event){$(this).removeClass(\"error\")});","\t\t\t\t\t","\t\t\t\t\tif($cell.data(\"type\") == \"checkbox\"){","\t\t\t\t\t\tif(navigator.userAgent.match(/Chrome|Safari/)){","\t\t\t\t\t\t\t$input.unbind(\"unfocus.input\");","\t\t\t\t\t\t\t$(window).bind(\"click\", data, function(event){","\t\t\t\t\t\t\t\tif(event.target.tagName != \"INPUT\"){","\t\t\t\t\t\t\t\t\tonenter(event);","\t\t\t\t\t\t\t\t}","\t\t\t\t\t\t\t});","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t}","\t\t\t","\t\t\t//Запретить добавлять новые строки","\t\t\tvar $buttonAdd = $grid.data(\"$buttonAdd\");","\t\t\tif($buttonAdd) $buttonAdd.disable();","","\t\t\t//Установить новую активную ячейку","\t\t\t$grid.data(\"$activeCell\", $cell)","\t\t}), 1);","\t}","\t","\tvar onerror = function(event, errorCode){","\t\tlockEditing = true;","\t\t$(this).addClass(\"error\");","\t\tif(confirm(lng(errorCode) + \". \" + lng(\"edit_or_esc\"))){","\t\t\tsetTimeout(\"$('#\"+event.data.$input.find(\"input, select\").attr(\"id\")+\"').focus()\", 1);","\t\t}","\t\telse{","\t\t\tonescape.call(this, event);","\t\t}","\t}","\t","\tvar onenter = function(event){","\t\tlockEditing = false;","","\t\t$cell = event.data.$cell;","\t\t$grid = $cell.data(\"plugin\");","\t\t$cell.applyEditing().stopEditing();","\t\t$grid.data(\"editing\", false);","","\t\t//Разрешить добавлять новые строки","\t\tvar $buttonAdd = $grid.data(\"$buttonAdd\");","\t\tif($buttonAdd) $buttonAdd.enable();","\t}","\t","\tvar ontab = function(event){","\t\tonenter.call(this, event);","\t\tvar $cell = event.data.$cell;","\t\tvar $editableCells = $cell.parents(\".lightUI:eq(0)\").find(\"table td.editable\").not(\".disabled\");","\t\tvar nextInx = $editableCells.index($cell) + 1;","\t\tif(nextInx >= $editableCells.length) nextInx = 0;","\t\tvar $next = $editableCells.eq(nextInx);","\t\t$next.trigger(\"click\");","\t}","\t","\tvar onescape = function(event){","\t\tlockEditing = false;","","\t\t$cell = event.data.$cell;","\t\t$grid = $cell.data(\"plugin\");","\t\t$cell.stopEditing();","\t\t$grid.data(\"editing\", false);","","\t\t//Разрешить добавлять новые строки","\t\tvar $buttonAdd = $grid.data(\"$buttonAdd\");","\t\tif($buttonAdd) $buttonAdd.enable();","\t}","\t\t","\tvar toggle = function(event){","\t\tvar $options = $(this).parents(\".lightUI:eq(0)\").find(\".options\");","\t\tif($options.is(\":visible\")){","\t\t\t$options.css(\"display\", \"none\");","\t\t}","\t\telse{","\t\t\t$options.css(\"display\", \"block\");","\t\t}","\t}","\t\t","\tvar clickWin = function(event){","\t\tvar $gridBox = $(\"#\" + event.data.id).closest(\".lightUI\");","\t\tif(!$gridBox.length) return;","\t\tif(!$(event.target).closest(\".options, .select .arrow\").length){","\t\t\t$gridBox.find(\".options\").css(\"display\", \"none\");","\t\t}","\t\tif(!$(event.target).closest(\".combo\").length){","","\t\t\t$input = $gridBox.data(\"fieldPlugin\");","\t\t\tif(is.set($input)){","\t\t\t\tvar errorCode = $input.validate();","\t\t\t\tif(is.string(errorCode)){","\t\t\t\t\t$gridBox.trigger(\"error.input\", errorCode);","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\t$gridBox.trigger(\"unfocus.input\");","\t\t\t\t}","\t\t\t}","","\t\t}","\t}","\t\t","\tvar selectOption = function(event, $row){","\t\tvar flags = $(this).data(\"flags\");","\t\tif(!is.string(flags.combobox.blank)){","\t\t\t$(this).data(\"fieldPlugin\").fieldval($row.col(flags.combobox.index).html()).find(\"input\").focus();","\t\t}","\t\t$(this).find(\".options\").css(\"display\", \"none\");","\t}","","\tvar onrowclick = function(event){","\t\tvar $this = $(this);","\t\tvar $grid = $this.data(\"plugin\");","\t\tvar $row = rowPlugin($this.parent());","/*\t\t","\t\tif($grid.data(\"hasEditable\") && !$grid.data(\"editing\")){","\t\t\t","\t\t\t$row.startEditing();","\t\t\t","\t\t\tvar setError = function($input, errorCode){","\t\t\t\tif(errorCode){","\t\t\t\t\t$input.attr(\"title\", lng(errorCode));","\t\t\t\t\t$input.data(\"$cell\").addClass(\"error\").attr(\"title\", lng(errorCode));","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\t$input.attr(\"title\", \"\");","\t\t\t\t\t$input.data(\"$cell\").removeClass(\"error\").attr(\"title\", \"\");","\t\t\t\t}","\t\t\t}","\t\t\t\t","\t\t\t$grid.find(\">div.editable\").bind(\"error.input\", function(event, errorCode){","\t\t\t\tsetError($(event.target), errorCode);","\t\t\t}).bind(\"onfocus.input\", function(event, errorCode){","\t\t\t\tsetError($(event.target));","\t\t\t});","","\t\t\t//Показать или добавить кнопки в футер","\t\t\tvar $footerRight = $grid.find(\".grid-footer-right\");","\t\t\tvar $buttonUpdate = $row.data(\"$buttonUpdate\");","\t\t\tif($buttonUpdate){","\t\t\t\t$buttonUpdate.show();","\t\t\t}","\t\t\telse{","\t\t\t\t$footerRight.append(\"<div></div>\");","\t\t\t\t$row.data(\"$buttonUpdate\", $footerRight.find(\">div:last\").lightUIButton(\"update\").bind(\"button.click\", callback($row, function(){","","\t\t\t\t\tvar $grid = $row.data(\"plugin\");","\t\t\t\t\tvar flags = $grid.data(\"flags\");","\t\t\t\t\tvar colBegin = flags.selectable?1:0;","\t\t\t\t\tvar $cell, errorCode;","\t\t\t\t\tvar hasError = false;","\t\t\t\t\tfor(var i=colBegin; i<colBegin + $grid.ncol(); i++){","\t\t\t\t\t\tvar $cell = this.col(i);","\t\t\t\t\t\t$input = $cell.data(\"$input\");","\t\t\t\t\t\tif($input){","\t\t\t\t\t\t\terrorCode = $input.validate();","\t\t\t\t\t\t\tif(errorCode){","\t\t\t\t\t\t\t\thasError |= true;","\t\t\t\t\t\t\t\t$input.trigger(\"error.input\", errorCode);","\t\t\t\t\t\t\t}","\t\t\t\t\t\t\telse{","\t\t\t\t\t\t\t\tsetError($input);","\t\t\t\t\t\t\t\t","\t\t\t\t\t\t\t}","\t\t\t\t\t\t}","\t\t\t\t\t}","","\t\t\t\t\tif(hasError){","\t\t\t\t\t\tif(confirm(lng(\"hasError\"))){","\t\t\t\t\t\t\treturn;","\t\t\t\t\t\t}","\t\t\t\t\t\telse{","\t\t\t\t\t\t\tthis.stopEditing();","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t\telse{","\t\t\t\t\t\tthis.applyEditing();","\t\t\t\t\t}","\t\t\t\t\t","\t\t\t\t\t//Скрыть кнопки","\t\t\t\t\tthis.data(\"$buttonCancel\").hide();","\t\t\t\t\tthis.data(\"$buttonUpdate\").hide();","","\t\t\t\t\t//Разрешить добавлять новые строки","\t\t\t\t\tvar $grid = this.data(\"plugin\");","\t\t\t\t\tvar $buttonAdd = $grid.data(\"$buttonAdd\");","\t\t\t\t\tif($buttonAdd) $buttonAdd.enable();","\t\t\t\t\t","\t\t\t\t\t//Сбросить флаг редактирования таблицы","\t\t\t\t\t$grid.data(\"editing\", false);","\t\t\t\t\t","\t\t\t\t})));","\t\t\t}","\t\t\tvar $buttonCancel = $row.data(\"$buttonCancel\");","\t\t\tif($buttonCancel){","\t\t\t\t$buttonCancel.show();","\t\t\t}","\t\t\telse{","\t\t\t\t$footerRight.append(\"<div></div>\");","\t\t\t\t$row.data(\"$buttonCancel\", $footerRight.find(\">div:last\").lightUIButton(\"cancel\").bind(\"button.click\", callback($row, function(){","","\t\t\t\t\tthis.stopEditing();","","\t\t\t\t\t//Скрыть кнопки","\t\t\t\t\tthis.data(\"$buttonCancel\").hide();","\t\t\t\t\tthis.data(\"$buttonUpdate\").hide();","","\t\t\t\t\t//Разрешить добавлять новые строки","\t\t\t\t\tvar $grid = this.data(\"plugin\");","\t\t\t\t\tvar $buttonAdd = $grid.data(\"$buttonAdd\");","\t\t\t\t\tif($buttonAdd) $buttonAdd.enable();","","\t\t\t\t\t//Сбросить флаг редактирования таблицы","\t\t\t\t\t$grid.data(\"editing\", false);","\t\t\t\t})));","\t\t\t}","\t\t}","\t\t*/","","\t\tif($grid.data(\"hasEditable\") && getCookie(\"viewmode\") == \"mobile\"){","//\t\t\t$overlay = $(\"body\").lightUIOverlay().show();","","\t\t\t//Создать форму","\t\t\tvar formID = gID.get();","\t\t\tvar $form = $(\"<div class='lightUI gridMobileForm' id='\" + formID + \"'><div class='header'></div><div class='content'></div><div class='footer'></div></div>\");","","\t\t\t//Накидать поля ввода","\t\t\tvar $col, $input, $edit, inputFlags, inputType, inputName;","\t\t\tvar flags = $grid.data(\"flags\");","\t\t\tvar colBegin = flags.selectable?1:0;","\t\t\tvar header = $grid.data(\"header\");","\t\t\tvar $footer = $form.find(\".footer\");","\t\t\tvar $content = $form.find(\".content\");","\t\t\tfor(var i=colBegin, ii=0; i<colBegin + $grid.ncol(); i++, ii++){","\t\t\t\t$cell = $row.col(i);","\t\t\t\tinputName = header[ii].name;","\t\t\t\tif($cell.hasClass(\"editable\")){","\t\t\t\t\tinputType = $cell.data(\"type\");","\t\t\t\t\tinputFlags = $cell.data(\"flags\");","\t\t\t\t\t$edit = $(\"<div></div>\").lightUIEdit(inputName);","\t\t\t\t\tvar value = $cell.html();","\t\t\t\t\t$input = createInput($edit.find(\".input\"), inputType, inputFlags).fieldval(value).data(\"lastRightValue\", value);","\t\t\t\t\t$content.append($edit);","\t\t\t\t\t$cell.data(\"$input\", $input);\t//Необходим для работы метода ячейки applyEditing()","\t\t\t\t}","\t\t\t\t","\t\t\t}","\t\t\t\t\t\t","\t\t\tfunction onsave(){","\t\t\t\t$row.applyEditing();","\t\t\t\t$form.remove();","\t\t\t}","","\t\t\tfunction oncancel(){","\t\t\t\t//Удалить форму","\t\t\t\t$form.remove();","\t\t\t\t//Удалить обработчик resize","\t\t\t\t$(window).unbind(\"resize\", onresize);","\t\t\t}","","\t\t\t//Кнопка сохранения","\t\t\tvar $apply = $(\"<div></div>\");","\t\t\t$apply.lightUIButton(\"save\").bind(\"click.button\", onsave);","\t\t\t$content.append($apply);","\t\t\t\t\t\t","\t\t\t//Кнопка отмены","\t\t\tvar $cancel = $(\"<div></div>\");","\t\t\t$cancel.lightUIButton(\"cancel\").bind(\"click.button\", oncancel);","\t\t\t$content.append($cancel);","","\t\t\t//Привязать обработчик ошибок","\t\t\t$form.bind(\"error.input\", function(event, errorCode){","\t\t\t\tvar $input = $(event.target).getLightUIElem(\"input\");","\t\t\t\tif(confirm(lng(errorCode) + \". \" + lng(\"edit_or_esc\"))){","\t\t\t\t\tsetTimeout(function(){$input.find(\"input, select\").focus()}, 1);","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\t$input.fieldval($input.data(\"lastRightValue\"));","\t\t\t\t}","\t\t\t});","\t\t\t\t\t\t\t\t\t","\t\t\t//Здесь изменяем последнее валидное значение для отката в слючае ошибки","\t\t\t$form.bind(\"unfocus.input\", function(event, errorCode){","\t\t\t\tvar $input = $(event.target).getLightUIElem(\"input\");","\t\t\t\t$input.data(\"lastRightValue\", $input.fieldval());","\t\t\t});","","\t\t\tvar inForm;","","\t\t\tfunction onresize(event){","\t\t\t\tif(id) clearTimeout(id);","\t\t\t\tvar id = setTimeout(function(){","\t\t\t\t\t//позиционирование","\t\t\t\t\t$form = $(\"#\" + formID);","\t\t\t\t\t$form.css({","//\t\t\t\t\t\ttop: $(document).scrollTop() + ($(window).height() - $form.height())/2,","\t\t\t\t\t\ttop: $(document).scrollTop(),","\t\t\t\t\t\tleft: $(document).scrollLeft() + ($(window).width() - $form.width())/2","\t\t\t\t\t});","\t\t\t\t}, 100);","\t\t\t}","\t\t\t","\t\t\tfunction onrelease(event){","\t\t\t\tif(inForm){","\t\t\t\t\tinForm = false;","\t\t\t\t\t$(document).one(\"click\", onrelease);","\t\t\t\t\treturn;","\t\t\t\t}","\t\t\t\toncancel();","\t\t\t}","","\t\t\tfunction onformclick(event){","\t\t\t\tinForm = true;","\t\t\t}","\t\t\t","\t\t\t//Реакция на enter","\t\t\t$form.bind(\"enter.input\", onsave);","","\t\t\t//Реакция на escape","\t\t\t$form.bind(\"esc.input\", onsave);","\t\t\t","\t\t\t$(\"body\").append($form);","\t\t\t$(window).resize(onresize).trigger(\"resize\");","\t\t\tsetTimeout(function(){","\t\t\t\t$(\".gridMobileForm\").bind(\"click\", onformclick);","\t\t\t\t$(document).one(\"click\", onrelease);","\t\t\t}, 5);","\t\t}","\t\t","\t\tif(!$row.data(\"editing\")) $grid.trigger(\"rowclick.grid\", [$row]);","\t}","","\tvar ondragstart = function(event){","\t\tevent.preventDefault();","\t\tevent.stopImmediatePropagation();","\t\t","\t\tvar $target = $(event.target);","\t\tvar $grid = $target.closest(\".lightUI\");","\t\tvar $rows = $target.closest(\"tbody\").find(\"tr\");","\t\t$rows.mouseover(ondragstep);","\t\t$(\"body\").bind(\"mouseup\", {$grid: $target.data(\"plugin\")}, ondragstop);","\t\t","\t\t$(event.target).data(\"row\").startDragging();","\t}","\t","\tvar ondragstop = function(event){","\t\tevent.preventDefault();","\t\tevent.stopImmediatePropagation();","","\t\tvar $grid = event.data.$grid;","\t\tif(!$grid.data(\"dragging\")) return;","\t\t","\t\tvar $rows = $grid.find(\"tbody tr\");","\t\t$rows.unbind(\"mouseover\", ondragstep);","\t\t$(\"body\").unbind(\"mouseup\", ondragstop);","\t\t","\t\tevent.data.$grid.stopDragging();","\t}","\t","\tvar ondragstep = function(event){","\t\tevent.preventDefault();","\t\tevent.stopImmediatePropagation();","","\t\tvar $row = $(event.target).closest(\"table\").find(\"tbody tr.draggable\");","\t\tif($row.length){","\t\t\trowPlugin($row).moveTo(rowPlugin(this).irow());","\t\t}","\t}","","","\tvar applyAttrs = function(value){","\t\ttry{","\t\t\tthis.data(\"flags\").accessMode = value.__attrs__.mode;","\t\t}","\t\tcatch(e){","\t\t}","\t}","","\t// Добавим наш плагин к оригинальной копии jQuery","\tjQuery.fn.lightUIGrid = function(header, nrow, flags){","","\t\t//Вариант вызова без аргументов - получение ссылки на уже созданный плагин","\t\tif(!is.array(header)){","\t\t\tvar $grid = this.data(\"light_ui_grid\");","\t\t\tif($grid){","\t\t\t\treturn $grid;","\t\t\t}","\t\t\telse{","\t\t\t\treturn this;","\t\t\t}","\t\t}","","\t\tif(!is.object(flags)) flags = {};","\t\t","\t\tvar $this = plugin(this);","\t\tvar colBegin = flags.selectable?1:0;","","\t\t//header0 используется при формировании патерна строки","\t\tvar _header = $.extend(true, [], header);","\t\tif(is.array(_header[0])){","\t\t\tfor(var i=0; i<_header.length-1; i++){","\t\t\t\tvar h = _header[i];","\t\t\t\tfor(var j=0, c=0; j<h.length; j++){","\t\t\t\t\tvar h0 = h[j];","\t\t\t\t\tif(is.set(h0.rowspan)){","\t\t\t\t\t\tvar rowspan = h0.rowspan;","\t\t\t\t\t\tdelete h0.rowspan;","\t\t\t\t\t\th0.spaned = {irow: i, icol: j + colBegin};","\t\t\t\t\t\tfor(var k=1; k<=rowspan; k++){","\t\t\t\t\t\t\tif(is.unset(_header[i+k])) break;","\t\t\t\t\t\t\t_header[i+k].splice(c, 0, h0);","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t\tc += is.set(h0.colspan)?h0.colspan:1;","\t\t\t\t}","\t\t\t}","\t\t\tvar header0 = _header[_header.length-1];","\t\t}","\t\telse{","\t\t\tvar header0 = _header;","\t\t}","\t\t","\t\t//namedColumns используется при доступе к ячейкам и столбцам по символьному имени (index)","\t\tvar namedColumns = {};","\t\tfor(var i in header0){","\t\t\tvar h = header0[i];","\t\t\tif(is.object(h) && is.string(h.index)){","\t\t\t\tnamedColumns[h.index] = {inx: colBegin + Number(i), name: h.name, header: h};","\t\t\t}","\t\t}","","\t\t//Навешивание данных на контейнер плагина","\t\tthis.data(\"namedColumns\", namedColumns)","\t\t\t.data(\"header\", header0)","\t\t\t.data(\"headerHeight\", is.array(header[0])?header.length:1)","\t\t\t.data(\"light_ui_grid\", $this);","\t\t\t","","\t\tvar objID = gID.get();","","\t\t//Формирование паттерна таблицы","\t\tvar pattern = \"<table cellspacing='0' cellpadding='0'>\" + getHeadPattern(header) + \"<tbody>\";","\t\tpattern += \"</tbody></table><div class='grid-footer'><div class='grid-footer-left'></div><div class='grid-footer-right'></div></div>\";","","\t\t//Завершение формирования паттерна таблицы в зависимости от типа","\t\tif(is.object(flags.combobox)){","\t\t\t","\t\t\tflags.clickable = true;","\t\t\t","\t\t\tif(is.unset(flags.combobox.index)) flags.combobox.index = 0;","\t\t\t","\t\t\tpattern =\t\"<div class='combo'>\"","\t\t\t\t\t+\t\"<div class='select'>\"","\t\t\t\t\t+\t\"<div class='field'></div>\"","\t\t\t\t\t+\t\"<div class='arrow'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>\"","\t\t\t\t\t+\t\"<div class='icon'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>\"","\t\t\t\t\t+\t\"<div class='iconReset'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>\"","\t\t\t\t\t+\t\"<div style='clear: both'></div>\"","\t\t\t\t\t+\t\"</div>\"","\t\t\t\t\t+\t\"<div class='options'>\" + pattern + \"</div>\"","\t\t\t\t\t+\t\"</div>\"","\t\t\t\t\t+\t\"</div>\";","","\t\t\tthis.html(pattern)","\t\t\t\t.find(\".arrow\")","\t\t\t\t.click(toggle);","","\t\t\t$(document).bind(\"click\", {id: objID}, clickWin);","\t\t\tthis.bind(\"rowclick.grid\", selectOption);","\t\t\tthis.find(\".select .icon\").bind(\"click\", function(event){","\t\t\t\t$(event.target).closest(\".lightUI\").trigger(\"iconclick.grid\")","\t\t\t});","\t\t\t","\t\t\tthis.find(\".select .iconReset\").bind(\"click\", function(event){","\t\t\t\t$(event.target).closest(\".lightUI\").trigger(\"iconResetclick.grid\")","\t\t\t});","","\t\t\tvar $field = this.find(\".select .field\");","\t\t\tvar validType = false;","\t\t\tswitch(flags.combobox.type){","\t\t\t\tcase \"ipv4\":","\t\t\t\t\tvar inputFlags = $.extend(true, {maxLength: 18}, flags.combobox.flags);","\t\t\t\t\tthis.data(\"fieldPlugin\", $field.lightUIIPv4(inputFlags));","\t\t\t\t\tvalidType = true;","\t\t\t\tbreak;","\t\t\t\tcase \"ipv6\":","\t\t\t\t\tvar inputFlags = $.extend(true, {maxLength: 43}, flags.combobox.flags);","\t\t\t\t\tthis.data(\"fieldPlugin\", $field.lightUIIPv6(inputFlags));","\t\t\t\t\tvalidType = true;","\t\t\t\tbreak;","\t\t\t\tcase \"ipv4ipv6\":","\t\t\t\t\tvar inputFlags = $.extend(true, {maxLength: 43}, flags.combobox.flags);","\t\t\t\t\tthis.data(\"fieldPlugin\", $field.lightUIIPv4IPv6(inputFlags));","\t\t\t\t\tvalidType = true;","\t\t\t\tbreak;","\t\t\t\tcase \"mac\":","\t\t\t\t\tvar inputFlags = $.extend(true, {maxLength: 17}, flags.combobox.flags);","\t\t\t\t\tthis.data(\"fieldPlugin\", $field.lightUIMAC(inputFlags));","\t\t\t\t\tvalidType = true;","\t\t\t\tbreak;","\t\t\t\tcase \"host\":","\t\t\t\t\tthis.data(\"fieldPlugin\", $field.lightUIDomainName(flags.combobox.flags));","\t\t\t\t\tvalidType = true;","\t\t\t\tbreak;","\t\t\t\tcase \"port\":","\t\t\t\t\tthis.data(\"fieldPlugin\", $field.lightUIPort(inputFlags));","\t\t\t\t\tvalidType = true;","\t\t\t\tbreak;","\t\t\t\tcase \"text\":","\t\t\t\tdefault:","\t\t\t\t\tthis.data(\"fieldPlugin\", $field.lightUIText(flags.combobox.flags))","\t\t\t\t\tvalidType = true;","\t\t\t\tbreak;","\t\t\t}","\t\t\tif(validType){","\t\t\t\tvar blank = flags.combobox.blank;","\t\t\t\tif(is.string(blank)){","\t\t\t\t\tthis.find(\".field input\").val(lng(blank))","\t\t\t\t\t\t\t\t\t\t.attr(\"langkey\", blank)","\t\t\t\t\t\t\t\t\t\t.css(\"cursor\", \"pointer\")","\t\t\t\t\t\t\t\t\t\t.css(\"text-align\", \"center\")","\t\t\t\t\t\t\t\t\t\t.click(toggle)","\t\t\t\t\t\t\t\t\t\t.unbind(\"keypress\")","\t\t\t\t\t\t\t\t\t\t.unbind(\"keydown\")","\t\t\t\t\t\t\t\t\t\t.bind(\"keypress\", function(event){","\t\t\t\t\t\t\t\t\t\t\tevent.preventDefault();","\t\t\t\t\t\t\t\t\t\t})","\t\t\t\t\t\t\t\t\t\t.bind(\"keydown\", function(event){","\t\t\t\t\t\t\t\t\t\t\tevent.preventDefault();","\t\t\t\t\t\t\t\t\t\t});","\t\t\t\t}","\t\t\t\t//Глушим и/или заменяем события вложенного input плагина чтобы event.target указывал на combobox","\t\t\t\t//Это важно для определения источника событий в обработчике","\t\t\t\tthis.data(\"fieldPlugin\").bind(\"unfocus.input\", function(event){","\t\t\t\t\t//Чтобы не конфиктовало с имитацией потери фокуса в функе clickWin","\t\t\t\t\tevent.stopPropagation();","\t\t\t\t}).bind(\"onfocus.input\", function(event){","\t\t\t\t\tevent.stopPropagation();","\t\t\t\t\tsetTimeout(callback(this, function(){","\t\t\t\t\t\t$(this).closest(\".lightUI\").trigger(\"onfocus.input\");","\t\t\t\t\t}), 1);","\t\t\t\t}).bind(\"error.input\", function(event, errorCode, keyCode){","\t\t\t\t\tevent.stopPropagation();","\t\t\t\t\tif(is.set(keyCode)){","\t\t\t\t\t\tsetTimeout(callback(this, function(){","\t\t\t\t\t\t\t$(this).closest(\".lightUI\").trigger(\"error.input\", errorCode);","\t\t\t\t\t\t}), 1);","\t\t\t\t\t}","\t\t\t\t});","\t\t\t}","\t\t","\t\t\tplugin.fn.extend({","\t\t\t\tvalidate: function(){","\t\t\t\t\treturn this.data(\"fieldPlugin\").validate();","\t\t\t\t},","\t\t\t\tfieldval: function(value){","\t\t\t\t\treturn this.data(\"fieldPlugin\").fieldval(value);","\t\t\t\t},","\t\t\t\tisEmpty: function(){","\t\t\t\t\treturn this.data(\"fieldPlugin\").isEmpty();","\t\t\t\t},","\t\t\t\tclean: function(){","\t\t\t\t\tthis.data(\"fieldPlugin\").clean();","\t\t\t\t},","\t\t\t\tflags: function(){","\t\t\t\t\treturn this.data(\"flags\");","\t\t\t\t}","\t\t\t});","","\t\t}","\t\telse{","\t\t\tthis.html(pattern);","\t\t}","","\t\t//Разное","\t\tthis.addClass(\"lightUI grid\")","\t\t\t.data(\"flags\", flags)","\t\t\t.find(\"table\").attr(\"id\", objID)","\t\t\t.find(\"tbody tr\").data(\"plugin\", $this)","\t\t\t.find(\"td\").data(\"plugin\", $this);","\t\tzebra(this);","","\t\t//Обработка опций плагина","\t\tif(flags.selectable) insSelCol.call(this);","\t\t","\t\tif(flags.clickable){","\t\t\tvar $rows = $(\"#\" + objID + \" tbody tr\");","\t\t\t$rows.addClass(\"clickable\");","\t\t\t$rows.find(\"td:not(.draggable,.selectable)\").bind(\"click\", onrowclick);","\t\t}","\t","\t\tif(flags.draggable){","\t\t\tinsDragCol.call(this);","\t\t\tvar $rows = this.find(\"tbody tr\");","\t\t\tvar $dragCol = $rows.find(\"td:last\");","\t\t\t$dragCol.bind(\"mousedown\", ondragstart);","\t\t}","","\t\tif(flags.addable){","\t\t\tvar $footerLeft = this.find(\".grid-footer-left\").append(\"<div></div>\");","\t\t\tthis.data(\"$buttonAdd\", $footerLeft.find(\">div:last\").lightUIButton(\"add\").bind(\"button.click\", callback($this, function(){","\t\t\t\tthis.addRow();","\t\t\t})));","\t\t}","\t\t","\t\t//-----------------------------------------------------------------------","\t\t// Расширим возможности полученных копий новыми методами плагина (public)","\t\t//-----------------------------------------------------------------------","\t\tplugin.fn.extend({","\t\t\trow: function(i){","\t\t\t\tif(i == \"last\"){","\t\t\t\t\ti = this.nrow() - 1;","\t\t\t\t}","\t\t\t\telse if(i == \"first\"){","\t\t\t\t\ti = 0;","\t\t\t\t}","\t\t\t\tvar $row = rowPlugin(this.find(\"tbody tr:eq(\" + i + \")\"));","\t\t\t\treturn $row;","\t\t\t},","\t\t\tcol: function(index){","\t\t\t\tvar icol = getColInx.call(this, index);","\t\t\t\tvar $col = colPlugin(this.find(\"tbody tr\").find(\"td:eq(\" + icol + \")\"));","\t\t\t\treturn $col;","\t\t\t},","\t\t\tcolEditable: function(index, type, inputFlags){","\t\t\t\tif(is.unset(index) || is.unset(type)) return this;","\t\t\t\tif(is.unset(inputFlags)) inputFlags = {};","","\t\t\t\tvar flags = this.data(\"flags\");","\t\t\t\tvar $tbody = this.find(\"table tbody\");","\t\t\t\t","\t\t\t\t//Поиск столбца заголовка","\t\t\t\tvar namedColumns = this.data(\"namedColumns\");","\t\t\t\tvar header = namedColumns[index].header;","\t\t\t\tvar inx = namedColumns[index].inx;","\t\t\t\theader.editable = {type: type, flags: inputFlags};","\t\t\t\tif(header.spaned){","\t\t\t\t\tvar $obj = this.find(\"thead tr\").eq(header.spaned.irow).find(\"td\").eq(header.spaned.icol );","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\tvar $obj = this.find(\"thead tr:last td\").eq(inx)","\t\t\t\t}","","\t\t\t\tvar $col = this.col(index);","","\t\t\t\t//Привязка классов и данных к столбцу","\t\t\t\t$col.addClass(\"editable\");","\t\t\t\t$col.data(\"type\", type).data(\"flags\", inputFlags);","\t\t\t\tif(inputFlags.mandatory){","\t\t\t\t\t$obj.append(\"<span class='mandatory'>*</span>\").addClass(\"mandatory\");","\t\t\t\t\t$col.addClass(\"mandatory\");","\t\t\t\t}","","\t\t\t\t//Установка дефолтного значения для селекта","\t\t\t\t//TODO: Учесть возможность задания опций через optionArray","\t\t\t\tif(type == \"select\" && inputFlags.options){","\t\t\t\t\tfor(var i in inputFlags.options){","\t\t\t\t\t\tvar def = i;","\t\t\t\t\t\tbreak;","\t\t\t\t\t}","\t\t\t\t\tvar $cell;","\t\t\t\t\tif(is.set(def)){","\t\t\t\t\t\tfor(var i=0; i<$col.length; i++){","\t\t\t\t\t\t\t$cell = $col.row(i);","\t\t\t\t\t\t\tif(!$cell.html().length){","\t\t\t\t\t\t\t\t$cell.html(lng(def)).attr(\"langkey\", def);","\t\t\t\t\t\t\t}","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t\t\t\t","\t\t\t\t}","","\t\t\t\tcheckUniqueFlag.call(this, index, inputFlags);","","\t\t\t\tif(flags.clickable){","\t\t\t\t\tthis.data(\"hasEditable\", true);","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\t$col.bind(\"click\", onedit);","\t\t\t\t}","","\t\t\t\treturn this;","\t\t\t},","\t\t\taddRow: function(n){","\t\t\t\tif(is.unset(n)) n = 1;","\t\t\t\tvar flags = this.data(\"flags\");","\t\t\t\tvar header = this.data(\"header\");","\t\t\t\tfor(var k=0; k<n; k++){","\t\t\t\t\tvar nrow = this.nrow();","\t\t\t\t\tthis.find(\"table\").append(getRowPattern.call(this));","\t","\t\t\t\t\tvar $lastRow = this.row(\"last\");","\t\t\t\t\t\t\t\t","\t\t\t\t\tvar colBegin = 0;","\t\t\t\t\tif(flags.selectable){","\t\t\t\t\t\t$lastRow.find(\"td:first\")","\t\t\t\t\t\t\t\t.before(\"<td class='selectable'><input type='checkbox'/></td>\")","\t\t\t\t\t\t\t\t.prev()","\t\t\t\t\t\t\t\t.change(selectRow);","\t\t\t\t\t\tif(this.find(\"table thead tr:last td.selectable input\").attr(\"checked\")){","\t\t\t\t\t\t\t$lastRow.find(\"td.selectable input\")","\t\t\t\t\t\t\t\t.attr(\"checked\", true)","\t\t\t\t\t\t\t\t.change();","\t\t\t\t\t\t}","\t\t\t\t\t\tcolBegin = 1;","\t\t\t\t\t}","\t\t\t\t\tif(flags.clickable){","\t\t\t\t\t\t$lastRow.addClass(\"clickable\");","\t\t\t\t\t\t$lastRow.find(\"td:not(.draggable,.selectable)\").bind(\"click\", {$gridBox: this}, onrowclick);","\t\t\t\t\t}","\t\t\t\t\tif(flags.draggable){","\t\t\t\t\t\t$lastRow.find(\"td:last\")","\t\t\t\t\t\t\t\t.after(\"<td class='draggable'>&nbsp;</td>\")","\t\t\t\t\t\t\t\t.next()","\t\t\t\t\t\t\t\t.mousedown(ondragstart);","\t\t\t\t\t\t$lastRow.mouseover(ondragstep);","\t\t\t\t\t}","\t","\t\t\t\t\t$lastRow.addClass(\"new\")","\t\t\t\t\t\t\t.data(\"plugin\", this)","\t\t\t\t\t\t\t.find(\"td\")","\t\t\t\t\t\t\t.data(\"plugin\", this)","\t\t\t\t\t\t\t.data(\"row\", $lastRow);","\t","\t\t\t\t\tfor(var i=0; i<header.length; i++){","\t\t\t\t\t\tvar editable = header[i].editable;","\t\t\t\t\t\tif(is.set(editable)){","\t\t\t\t\t\t\t$lastRow.col(colBegin + i).editable(editable.type, editable.flags);","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t}","","\t\t\t\tzebra(this);","\t\t\t\tthis.trigger(\"addrow.grid\", n);","","\t\t\t\treturn this;","\t\t\t},","\t\t\tcleanTable: function(){","\t\t\t\tthis.find(\"table tbody tr\").remove();","\t\t\t\treturn this;","\t\t\t},","\t\t\tselection: function(){","\t\t\t\treturn rowPlugin(this.find(\"tbody tr.selected\"));","\t\t\t},","\t\t\tnrow: function(){","\t\t\t\treturn this.find(\"tbody tr\").length;","\t\t\t},","\t\t\tncol: function(){","\t\t\t\treturn this.data(\"header\").length;","//\t\t\t\treturn this.find(\"thead tr:last td\").length;","\t\t\t},","\t\t\tcheckMandatory: function(checkSelected){","\t\t\t\tvar res = true;","","\t\t\t\tif(checkSelected){","\t\t\t\t\tvar $cellSet = this.find(\"tbody tr\").not(\".selected\").find(\"td.mandatory\").not(\".disabled\");","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\tvar $cellSet = this.find(\"tbody td.mandatory\").not(\".disabled\");","\t\t\t\t}","\t\t\t\t\t","\t\t\t\t$cellSet.each(function(index, elem){","\t\t\t\t\tvar $cell = cellPlugin($(elem));","\t\t\t\t\tvar $input = createInput($(\"<div></div>\"), $cell.data(\"type\"), $cell.data(\"flags\")).fieldval($cell.html());","\t\t\t\t\tif($input.isEmpty()){","\t\t\t\t\t\tres = false;","\t\t\t\t\t\t$cell.addClass(\"error\");","\t\t\t\t\t}","\t\t\t\t});","\t\t\t\t","\t\t\t\t//TODO: Заточнить под сложный заголовок","\t\t\t\tthis.find(\"thead tr:last td\").each(function(index, elem){","\t\t\t\t\tif($(elem).hasClass(\"mandatory\")){","\t\t\t\t\t\tif($(this).parents(\"table\")","\t\t\t\t\t\t\t.find(\"tbody tr\")","\t\t\t\t\t\t\t.find(\"td:eq(\" + index +\")\")","\t\t\t\t\t\t\t.filter(\".error\")","\t\t\t\t\t\t\t.length){","\t\t\t\t\t\t\t$(elem).addClass(\"error\");","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t});","","\t\t\t\treturn res;","\t\t\t},","\t\t\tcleanErrors: function(){","\t\t\t\tthis.find(\"td.error\").removeClass(\"error\");","\t\t\t\treturn this;","\t\t\t},","\t\t\tchangedRows: function(){","\t\t\t\treturn rowPlugin(this.find(\"tr.changed\"));","\t\t\t},","\t\t\tnewRows: function(){","\t\t\t\treturn rowPlugin(this.find(\"tr.new\"));","\t\t\t},","\t\t\tresetNew: function(){","\t\t\t\tthis.find(\"tr.new\").removeClass(\"new\");","\t\t\t\treturn this;","\t\t\t},","\t\t\tresetChanged: function(){","\t\t\t\tthis.find(\"tr.changed\").removeClass(\"changed\");","\t\t\t\treturn this;","\t\t\t},","\t\t\tresetAll: function(){","\t\t\t\tthis.find(\"tr.changed, tr.new\").removeClass(\"changed\").removeClass(\"new\");","\t\t\t\treturn this;","\t\t\t},","\t\t\tstopDragging: function(){","\t\t\t\tvar $table = this.find(\">table\");","\t","\t\t\t\t$table.removeClass(\"unselectable\").find(\"tbody tr.draggable td\").attr(\"unselectable\", false);","\t","\t\t\t\t//разрешить добавление строк","\t\t\t\tvar $buttonAdd = this.data(\"$buttonAdd\");","\t\t\t\tif($buttonAdd) $buttonAdd.enable();","\t\t\t\t","\t\t\t\tvar $row = rowPlugin($table.find(\"tr.draggable\"));","\t\t\t\t$row.removeClass(\"draggable\");","\t\t\t\tthis.data(\"dragging\", false).trigger(\"dragstop.grid\", [$row]);","\t\t\t\t","\t\t\t\treturn this;","\t\t\t}","\t\t\t\t","\t\t});","\t\t","\t\trowPlugin.fn.extend({","\t\t\tcol: function(index){","\t\t\t\tvar icol = getColInx.call(this, index);","\t\t\t\tvar $cell = cellPlugin(this.find(\"td:eq(\" + icol + \")\"));","\t\t\t\treturn $cell;","\t\t\t},","\t\t\tmoveTo: function(i){","\t\t\t\tif(!this.length) return this;","\t\t\t\tvar src = this.irow();","\t\t\t\tvar dst = i;","\t\t\t\tif(is.set(i)){","\t\t\t\t\tvar $parent = this.parent();","\t\t\t\t\tif(i == \"last\"){","\t\t\t\t\t\ti = $parent.find(\"tr\").length - 1;","\t\t\t\t\t}","\t\t\t\t\telse if(i == \"first\"){","\t\t\t\t\t\ti = 0;","\t\t\t\t\t}","\t\t\t\t\tvar irow = this.irow();","\t\t\t\t\tif(i != irow){","\t\t\t\t\t\tthis.detach();","\t\t\t\t\t\tif(i > irow){","\t\t\t\t\t\t\t$parent.find(\"tr:eq(\" + (i-1) + \")\").after(this);","\t\t\t\t\t\t}","\t\t\t\t\t\telse{","\t\t\t\t\t\t\t$parent.find(\"tr:eq(\" + i + \")\").before(this);\t\t\t\t\t","\t\t\t\t\t\t}","\t\t\t\t\t\tzebra(this.data(\"plugin\"));","\t\t\t\t\t}","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\tthis.detach();","\t\t\t\t}","\t\t\t\tthis.data(\"plugin\").trigger(\"moverow.grid\", [src, dst]);","\t\t\t\treturn this;","\t\t\t},","\t\t\tremoveRow: function(){","\t\t\t\treturn this.moveTo();","\t\t\t},","\t\t\tselectRow: function(i){","\t\t\t\tthis.addClass(\"selected\");","\t\t\t\tvar plugin = this.data(\"plugin\");","\t\t\t\tif(plugin.data(\"flags\").selectable){","\t\t\t\t\tthis.find(\"td.selectable input\").attr(\"checked\", true);","\t\t\t\t}","\t\t\t\tplugin.trigger(\"selection.grid\")\t\t\t\t","\t\t\t\treturn this;","\t\t\t},","\t\t\tunselectRow: function(i){","\t\t\t\tthis.removeClass(\"selected\");","\t\t\t\tvar plugin = this.data(\"plugin\");","\t\t\t\tif(plugin.data(\"flags\").selectable){","\t\t\t\t\tthis.find(\"td.selectable input\").attr(\"checked\", false);","\t\t\t\t\tthis.parents(\".lightUI:eq(0)\").find(\"table thead tr:last td.selectable input\").attr(\"checked\", false);","\t\t\t\t}","\t\t\t\tplugin.trigger(\"selection.grid\")\t\t\t\t","\t\t\t\treturn this;","\t\t\t},","\t\t\tselected: function(){","\t\t\t\treturn this.hasClass(\"selected\");","\t\t\t},","\t\t\tchanged: function(){","\t\t\t\treturn this.hasClass(\"changed\");","\t\t\t},","\t\t\tisNew: function(){","\t\t\t\treturn this.hasClass(\"new\");","\t\t\t},","\t\t\tirow: function(){","\t\t\t\treturn this.parent().find(\"tr\").index(this);","\t\t\t},","\t\t\tstartEditing: function(){","\t\t\t\tvar $grid = this.data(\"plugin\");","","\t\t\t\t//Запретить добавлять новые строки","\t\t\t\tvar $buttonAdd = $grid.data(\"$buttonAdd\");","\t\t\t\tif($buttonAdd) $buttonAdd.disable();","","\t\t\t\tvar $col;","\t\t\t\tvar flags = $grid.data(\"flags\");","\t\t\t\tvar colBegin = flags.selectable?1:0;","\t\t\t\tfor(var i=colBegin; i<colBegin + $grid.ncol(); i++){","\t\t\t\t\t$col = this.col(i);","\t\t\t\t\tif($col.hasClass(\"editable\")){","\t\t\t\t\t\t$col.startEditing();","\t\t\t\t\t\tvar editing = true;","\t\t\t\t\t}","\t\t\t\t}","\t\t\t\tif(editing){","\t\t\t\t\t//Флаги для блокировок различных действий ","\t\t\t\t\tthis.data(\"editing\", true);","\t\t\t\t\t$grid.data(\"editing\", true);","\t\t\t\t}","\t\t\t\t","\t\t\t\treturn this;","\t\t\t},","\t\t\tstopEditing: function(){","\t\t\t\tvar $col;","\t\t\t\tvar $grid = this.data(\"plugin\");","\t\t\t\tvar flags = $grid.data(\"flags\");","\t\t\t\tvar colBegin = flags.selectable?1:0;","\t\t\t\tvar editing = this.data(\"editing\");","\t\t\t\tfor(var i=colBegin; i<colBegin + $grid.ncol(); i++){","\t\t\t\t\t$col = this.col(i);","\t\t\t\t\tif($col.hasClass(\"editable\")){","\t\t\t\t\t\t$col.stopEditing();","\t\t\t\t\t\tediting = false;","\t\t\t\t\t}","\t\t\t\t}","\t\t\t\tthis.data(\"editing\", editing);","\t\t\t\treturn this;","\t\t\t},","\t\t\tapplyEditing: function(){","\t\t\t\tvar $col;","\t\t\t\tvar $grid = this.data(\"plugin\");","\t\t\t\tvar flags = $grid.data(\"flags\");","\t\t\t\tvar colBegin = flags.selectable?1:0;","\t\t\t\tvar editing = this.data(\"editing\");","\t\t\t\tfor(var i=colBegin; i<colBegin + $grid.ncol(); i++){","\t\t\t\t\t$col = this.col(i);","\t\t\t\t\t$col.applyEditing();","\t\t\t\t\tediting = false;","\t\t\t\t}","\t\t\t\tthis.data(\"editing\", editing);","\t\t\t\treturn this;","\t\t\t},","\t\t\tstartDragging: function(){","\t\t\t\tvar $grid = this.data(\"plugin\");","\t\t\t\tvar $table = $grid.find(\">table\");","\t","\t\t\t\tif($grid.data(\"editing\")) return;","\t\t\t\t","\t\t\t\tthis.addClass(\"draggable\");","\t\t\t\t$table.addClass(\"unselectable\");","\t\t\t\tthis.find(\"td\").attr(\"unselectable\", true);","\t\t\t\t","\t\t\t\t//запретить добавление строк","\t\t\t\tvar $buttonAdd = $grid.data(\"$buttonAdd\");","\t\t\t\tif($buttonAdd) $buttonAdd.disable();","\t\t\t\t","\t\t\t\t$grid.data(\"dragging\", true).trigger(\"dragstart.grid\", [this]);","\t\t\t\t","\t\t\t\treturn this;","\t\t\t}","\t\t});","\t\t","\t\tcolPlugin.fn.extend({","\t\t\trow: function(i){","\t\t\t\tvar $cell = cellPlugin(this.filter(\"td:eq(\" + i + \")\"));","\t\t\t\treturn $cell;","\t\t\t},","\t\t\ticol: function(){","\t\t\t\treturn this.eq(0).parent().find(\"td\").index(this.eq(0));","\t\t\t}","\t\t});","\t\t","\t\tcellPlugin.fn.extend({","\t\t\tirow: function(){","\t\t\t\treturn $(this.parents()[1]).find(\"tr\").index(this.parent());","\t\t\t},","\t\t\ticol: function(){","\t\t\t\treturn this.parent().find(\"td\").index(this);","\t\t\t},","\t\t\tgetColAlias: function(){","\t\t\t\tvar icol = this.icol();","\t\t\t\tvar namedColumns = this.parents(\".lightUI:eq(0)\").data(\"namedColumns\");","\t\t\t\tfor(var i in namedColumns){","\t\t\t\t\tif(namedColumns[i].inx == icol){","\t\t\t\t\t\treturn i;","\t\t\t\t\t}","\t\t\t\t}","\t\t\t\treturn null;","\t\t\t},","\t\t\teditable: function(type, inputFlags){","\t\t\t\tvar $row = this.parent();","\t\t\t\tthis.addClass(\"editable\");","","\t\t\t\tif(is.unset(inputFlags)) inputFlags = {};","\t\t\t\tif(inputFlags.mandatory) this.addClass(\"mandatory\");","\t\t\t\t","\t\t\t\tthis.data(\"type\", type).data(\"flags\", inputFlags);","","\t\t\t\tif(type == \"select\" && inputFlags && inputFlags.options){","\t\t\t\t\tfor(var i in inputFlags.options){","\t\t\t\t\t\tvar def = i;","\t\t\t\t\t\tbreak;","\t\t\t\t\t}","\t\t\t\t\tif(is.set(def) && !this.html().length){","\t\t\t\t\t\tthis.html(lng(def)).attr(\"langkey\", def);","\t\t\t\t\t}\t\t\t\t\t\t\t","\t\t\t\t}","","\t\t\t\tif(inputFlags.disabled){","\t\t\t\t\tthis.disable();","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\tthis.enable();","\t\t\t\t}","\t\t\t\t\t\t\t\t\t","\t\t\t\tif($row.hasClass(\"clickable\")){","\t\t\t\t\tthis.data(\"plugin\").data(\"hasEditable\", true);","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\tthis.bind(\"click\", onedit);","\t\t\t\t\t// Кастылёчек для мобильной темы ","\t\t\t\t\tif (navigator.userAgent.match(/Android/i) || navigator.userAgent.match(/BlackBerry/i) || navigator.userAgent.match(/iPhone|iPad|iPod/i) || navigator.userAgent.match(/Opera Mini/i) || navigator.userAgent.match(/IEMobile/i)){","\t\t\t\t\t\tthis.bind(\"mouseover\", onedit);","\t\t\t\t\t}","\t\t\t\t}","","\t\t\t\treturn this;","\t\t\t},","\t\t\tstartEditing: function(){","\t\t\t\tvar flags = this.data(\"flags\");","\t\t\t\tif(flags.disabled || flags.accessMode == 4 || flags.accessMode == 0) return;","","\t\t\t\tvar $table = this.closest(\"table\"); ","\t\t\t\tvar $grid = this.data(\"plugin\");","\t\t\t\t","\t\t\t\tvar type = this.data(\"type\");","\t\t\t\tvar objID = $table.attr(\"id\");","\t\t\t\tvar inputID = objID + \"_edit_\" + this.irow() + \"_\" + this.icol();","\t\t\t\tif(!$(\"#\" + inputID).length){","\t\t\t\t\t$grid.append(\"<div id='\" + inputID + \"' class='lightUI editable'></div>\");","\t\t\t\t}","\t\t\t\tvar $inputBox = $(\"#\" + inputID);","\t\t\t\tvar $input = createInput($inputBox, type, flags);","","\t\t\t\t//Инициализация и позиционирование","\t\t\t\tif(is.jquery($input)){","\t\t\t\t\tvar $this = $(this);","\t\t\t\t\tvar width = $this.width();","\t\t\t\t\tvar innerWidth = $this.innerWidth();","\t\t\t\t\tvar height = $this.height();","\t\t\t\t\tvar innerHeight = $this.innerHeight();","\t\t\t\t\tvar borderLeft = (new Number($this.css(\"border-left-width\").match(/\\d*/)[0])).valueOf();","\t\t\t\t\tvar borderTop = (new Number($this.css(\"border-top-width\").match(/\\d*/)[0])).valueOf();","","\t\t\t\t\tvar $field = $input.find(\"input,select\");","\t\t\t\t\tvar paddingLeft = (new Number($field.css(\"padding-left\").match(/\\d*/)[0])).valueOf();","\t\t\t\t\tvar paddingRight = (new Number($field.css(\"padding-right\").match(/\\d*/)[0])).valueOf();","","\t\t\t\t\tif(type == \"checkbox\"){","\t\t\t\t\t\tif(navigator.userAgent.match(/Chrome|Safari/)){","\t\t\t\t\t\t\t$input.css({","\t\t\t\t\t\t\t\t'position': 'absolute',","\t\t\t\t\t\t\t\t'left': $(this).position().left,","\t\t\t\t\t\t\t\t'top': $(this).position().top,","\t\t\t\t\t\t\t\t'width': '21px',","\t\t\t\t\t\t\t\t'height': '21px'","\t\t\t\t\t\t\t});","\t\t\t\t\t\t}","\t\t\t\t\t\telse{","\t\t\t\t\t\t\tvar fieldWidth = $field.width();","\t\t\t\t\t\t\tvar fieldHeight = $field.height();","\t\t\t\t\t\t\t$input.css({","\t\t\t\t\t\t\t\t'position': 'absolute',","\t\t\t\t\t\t\t\t'left': $(this).position().left,// + (innerWidth - fieldWidth - 1)/2 + borderLeft,","\t\t\t\t\t\t\t\t'top': $(this).position().top + (innerHeight - fieldHeight - 1)/2 + borderTop","\t\t\t\t\t\t\t});","\t\t\t\t\t\t}","\t\t\t\t\t\t$field.focus().select();","\t\t\t\t\t\t","\t\t\t\t\t\tdebug($(this).position());","\t\t\t\t\t\tdebug($input.css('top'));","\t\t\t\t\t\tdebug($input.css('left'));","\t\t\t\t\t\t","\t\t\t\t\t\tvar langkey = $this.attr(\"langkey\");","\t\t\t\t\t\tif(langkey == \"yes\"){","\t\t\t\t\t\t\t$input.fieldval(true);","\t\t\t\t\t\t}","\t\t\t\t\t\telse{","\t\t\t\t\t\t\t$input.fieldval(false);","\t\t\t\t\t\t}","\t\t\t\t\t\t$this.html(\"\");","\t\t\t\t\t}","\t\t\t\t\telse{","\t\t\t\t\t\t$input.css({","\t\t\t\t\t\t\t'position': 'absolute',","\t\t\t\t\t\t\t'left': $(this).position().left + (innerWidth - width)/2 + borderLeft,","\t\t\t\t\t\t\t'top': $(this).position().top + (innerHeight - height)/2 + borderTop","\t\t\t\t\t\t});","","\t\t\t\t\t\t$field.width($this.width() - paddingLeft - paddingRight).focus().select();","","\t\t\t\t\t\tif(is.func($input.fieldalias)){","\t\t\t\t\t\t\t$input.fieldalias($(this).attr(\"langkey\"));","\t\t\t\t\t\t}","\t\t\t\t\t\telse{","\t\t\t\t\t\t\t$input.fieldval($(this).html());","\t\t\t\t\t\t}","\t\t\t\t\t}","","","//\t\t\t\t\tvar data = {$cell: this, $input: $input};","//\t\t\t\t\t$input.bind(\"error.input\", data, onerror);","","\t\t\t\t\t$table.parent().trigger(\"startEditing.grid\", [this, $input]);","\t\t\t\t\tthis.data(\"$input\", $input);","\t\t\t\t\t$input.data(\"$cell\", this);","","\t\t\t\t\t//Установить флаги для различных блокировок","\t\t\t\t\tthis.data(\"editing\", true);","\t\t\t\t\t$grid.data(\"editing\", true);","\t\t\t\t}","\t\t\t\t","\t\t\t\treturn this;","\t\t\t},","\t\t\tstopEditing: function(){","\t\t\t\tvar $input = this.data(\"$input\");","\t\t\t\tif($input){","\t\t\t\t\tvar $grid = this.data(\"plugin\");","\t\t\t\t\t$grid.trigger(\"stopEditing.grid\", [this, $input]);","\t\t\t\t\t$input.remove();","\t\t\t\t\tthis.data(\"$input\", null);","","\t\t\t\t\tthis.removeClass(\"error\").attr(\"title\", \"\");","\t\t\t\t\t","\t\t\t\t\tif(this.data(\"type\") == \"checkbox\"){","\t\t\t\t\t\tvar langkey = this.attr(\"langkey\");","\t\t\t\t\t\tif(langkey){","\t\t\t\t\t\t\tthis.html(lng(langkey));","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t}","\t\t\t\tthis.data(\"editing\", false);","\t\t\t\treturn this;","\t\t\t},","\t\t\tapplyEditing: function(){","\t\t\t\tvar $input = this.data(\"$input\");","\t\t\t\tif($input){","\t\t\t\t\tvar isDataChanged = false;","\t\t\t\t\tif(is.func($input.fieldalias)){","\t\t\t\t\t\tvar alias = $input.fieldalias();","\t\t\t\t\t\tvar lngAlias = lng(alias);","\t\t\t\t\t\tvar oldLngAlias = this.html();","\t\t\t\t\t\tisDataChanged = lngAlias != oldLngAlias;","\t\t\t\t\t\tthis.html(lngAlias);","\t\t\t\t\t\tthis.attr(\"langkey\", alias);","\t\t\t\t\t}","\t\t\t\t\telse{","\t\t\t\t\t\tvar value = $input.fieldval();","\t\t\t\t\t\tif(this.data(\"type\") == \"checkbox\"){","\t\t\t\t\t\t\tif(value){","\t\t\t\t\t\t\t\tisDataChanged = (this.attr(\"langkey\") != \"yes\");","\t\t\t\t\t\t\t\tthis.attr(\"langkey\", \"yes\")","\t\t\t\t\t\t\t\t\t.html(lng(\"yes\"));","\t\t\t\t\t\t\t}","\t\t\t\t\t\t\telse{","\t\t\t\t\t\t\t\tisDataChanged = (this.attr(\"langkey\") != \"no\");","\t\t\t\t\t\t\t\tthis.attr(\"langkey\", \"no\")","\t\t\t\t\t\t\t\t\t.html(lng(\"no\"));","\t\t\t\t\t\t\t}","\t\t\t\t\t\t}","\t\t\t\t\t\telse{","\t\t\t\t\t\t\tisDataChanged = this.html() != value;","\t\t\t\t\t\t\tthis.html(value);","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t\tif(isDataChanged){","\t\t\t\t\t\tvar $row = this.parent();","\t\t\t\t\t\t$row.addClass(\"changed\");","\t\t\t\t\t\tthis.data(\"plugin\").trigger(\"cellChange.grid\", [this, $input]);","\t\t\t\t\t}","\t\t\t\t}","\t\t\t\treturn this;","\t\t\t},","\t\t\tenable: function(){","\t\t\t\t//копирую флаги чтобы не изменить через ссылку общие для столбца флаги","\t\t\t\tvar flags = $.extend(true, {}, this.data(\"flags\"));","\t\t\t\tif(is.unset(flags.accessMode) || flags.accessMode != 4){","\t\t\t\t\tthis.removeClass(\"disabled\");","\t\t\t\t\tflags.disabled = false;","\t\t\t\t\tthis.data(\"flags\", flags);","\t\t\t\t}","","\t\t\t\treturn this;","\t\t\t},","\t\t\tdisable: function(){","\t\t\t\tthis.addClass(\"disabled\");","\t\t\t\t//копирую флаги чтобы не изменить через ссылку общие для столбца флаги","\t\t\t\tvar flags = $.extend(true, {}, this.data(\"flags\"));","\t\t\t\tflags.disabled = true;","\t\t\t\tthis.data(\"flags\", flags);","","\t\t\t\treturn this;","\t\t\t},","\t\t\tfieldval: function(value){","\t\t\t\tif(this.hasClass(\"editable\")){","\t\t\t\t\tif(is.set(value)){","\t\t\t\t\t\tapplyAttrs.call(this, value);","\t\t\t\t\t\tvar $input = createInput($(\"<div></div\"), this.data(\"type\"), this.data(\"flags\"));","\t\t\t\t\t\tif(is.func($input.fieldalias)){","\t\t\t\t\t\t\t$input.fieldval(value);","\t\t\t\t\t\t\tvar alias = $input.fieldalias();","\t\t\t\t\t\t\tthis.html(lng(alias));","\t\t\t\t\t\t\tthis.attr(\"langkey\", alias);","\t\t\t\t\t\t}","\t\t\t\t\t\telse if(this.data(\"type\") == \"checkbox\"){","\t\t\t\t\t\t\tif(value){","\t\t\t\t\t\t\t\tisDataChanged = (this.attr(\"langkey\") != \"yes\");","\t\t\t\t\t\t\t\tthis.attr(\"langkey\", \"yes\")","\t\t\t\t\t\t\t\t\t.html(lng(\"yes\"));","\t\t\t\t\t\t\t}","\t\t\t\t\t\t\telse{","\t\t\t\t\t\t\t\tisDataChanged = (this.attr(\"langkey\") != \"no\");","\t\t\t\t\t\t\t\tthis.attr(\"langkey\", \"no\")","\t\t\t\t\t\t\t\t\t.html(lng(\"no\"));","\t\t\t\t\t\t\t}","\t\t\t\t\t\t}","\t\t\t\t\t\telse{","\t\t\t\t\t\t\tthis.html(value);","\t\t\t\t\t\t}","\t\t\t\t\t\treturn this;","\t\t\t\t\t}","\t\t\t\t\telse{","\t\t\t\t\t\tvar $input = createInput($(\"<div></div\"), this.data(\"type\"), this.data(\"flags\"));","\t\t\t\t\t\tif(is.func($input.fieldalias)){","\t\t\t\t\t\t\t$input.fieldalias(this.attr(\"langkey\"));","\t\t\t\t\t\t\treturn $input.fieldval();","\t\t\t\t\t\t}","\t\t\t\t\t\telse if(this.data(\"type\") == \"checkbox\"){","\t\t\t\t\t\t\treturn (this.attr(\"langkey\") == \"yes\")?true:false;","\t\t\t\t\t\t}","\t\t\t\t\t\telse{","\t\t\t\t\t\t\treturn this.html();","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\tif(is.set(value)) return this.html(value);","\t\t\t\t\telse return this.html();","\t\t\t\t}","/*\t\t\t\tif(is.set(value)){","\t\t\t\t\tif(this.hasClass(\"editable\")){","\t\t\t\t\t\tapplyAttrs.call(this, value);","\t\t\t\t\t\tvar $input = createInput($(\"<div></div\"), this.data(\"type\"), this.data(\"flags\"));","\t\t\t\t\t\tif(is.func($input.fieldalias)){","\t\t\t\t\t\t\t$input.fieldval(value);","\t\t\t\t\t\t\tvar alias = $input.fieldalias();","\t\t\t\t\t\t\tthis.html(lng(alias));","\t\t\t\t\t\t\tthis.attr(\"langkey\", alias);","\t\t\t\t\t\t}","\t\t\t\t\t\telse if(this.data(\"type\") == \"checkbox\"){","\t\t\t\t\t\t\tif(value){","\t\t\t\t\t\t\t\tisDataChanged = (this.attr(\"langkey\") != \"yes\");","\t\t\t\t\t\t\t\tthis.attr(\"langkey\", \"yes\")","\t\t\t\t\t\t\t\t\t.html(lng(\"yes\"));","\t\t\t\t\t\t\t}","\t\t\t\t\t\t\telse{","\t\t\t\t\t\t\t\tisDataChanged = (this.attr(\"langkey\") != \"no\");","\t\t\t\t\t\t\t\tthis.attr(\"langkey\", \"no\")","\t\t\t\t\t\t\t\t\t.html(lng(\"no\"));","\t\t\t\t\t\t\t}","\t\t\t\t\t\t}","\t\t\t\t\t\telse{","\t\t\t\t\t\t\tthis.html(value);","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t\telse{","\t\t\t\t\t\tthis.html(value);","\t\t\t\t\t}","\t\t\t\t\treturn this;","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\tif(this.hasClass(\"editable\")){","\t\t\t\t\t\tvar $input = createInput($(\"<div></div\"), this.data(\"type\"), this.data(\"flags\"));","\t\t\t\t\t\tif(is.func($input.fieldalias)){","\t\t\t\t\t\t\t$input.fieldalias(this.attr(\"langkey\"));","\t\t\t\t\t\t\treturn $input.fieldval();","\t\t\t\t\t\t}","\t\t\t\t\t\telse{","\t\t\t\t\t\t\treturn $input.fieldval();","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t\telse{","\t\t\t\t\t\treturn this.html();","\t\t\t\t\t}","\t\t\t\t}*/","\t\t\t},","\t\t\t__html__: this.html,","\t\t\thtml: function(value){","\t\t\t\tif(value instanceof String){","\t\t\t\t\targuments[0] = value.valueOf();","\t\t\t\t}","\t\t\t\treturn this.__html__.apply(this, arguments);","\t\t\t},","\t\t\tvalidate: function(){","\t\t\t\tif(this.hasClass(\"editable\")){","\t\t\t\t\tvar $input = createInput($(\"<div></div\"), this.data(\"type\"), this.data(\"flags\"));","\t\t\t\t\treturn $input.validate();","\t\t\t\t}","\t\t\t\treturn null;","\t\t\t}","\t\t\t","\t\t});","\t\t","\t\t//Добавить начальные строки","\t\t$this.addRow(nrow);","\t\t$this.find(\"tbody tr.new\").removeClass(\"new\");","\t\t\t","\t\t// Убеждаемся, что наш плагин возвращает нашу \"скопированную\" версию jQuery","\t\treturn $this;","\t};","","})();","(function(){","","\t//-------------------------------------","\t// Делаем копию jQuery, используя sub()","\t//-------------------------------------","\tvar plugin = jQuery.sub();","","\t// Добавим наш плагин к оригинальной копии jQuery","\tjQuery.fn.lightUIEdit = function(name, comment, flags){","","\t\tif(is.unset(flags)) flags = {};","","\t\tvar applyArgs = function(){","\t\t\tif(is.string(comment)) this.find(\".comment\").html(lng(comment)).attr(\"langkey\", comment);","\t\t\tif(is.string(flags.inputPadding)) this.find(\".label\").css(\"width\", flags.inputPadding);","\t\t\tif(is.string(name) && name.length){","\t\t\t\tif(name.match(/[\\.,;:?!]/)){","\t\t\t\t\tthis.find(\".label>span:eq(0)\").html(\"&nbsp;\");","\t\t\t\t}","\t\t\t\tvar $label = this.find(\".label>label\");","\t\t\t\t$label.html(lng(name));","\t\t\t\t$label.attr(\"langkey\", name);","\t\t\t}","\t\t\telse{","\t\t\t\tthis.find(\".label>span:eq(0)\").html(\"&nbsp;\");","\t\t\t}","\t\t\tif(is.string(flags.altname)) this.find(\".altname\").html(lng(flags.altname)).attr(\"langkey\", flags.altname);","\t\t\tthis.data(\"flags\", flags);","\t\t}","\t\t","\t\tvar key = \"$\" + this.find(\".edit\").attr(\"id\");","\t\t","\t\tvar pattern  = \"<div class='edit'>\";","\t\tpattern += \"<div class='label'><label></label><span>:</span></div>\";","\t\tpattern += \"<div class='input'></div>\";","\t\tpattern += \"<div class='altname'></div>\";","\t\tpattern += \"<div class='error'></div>\";","\t\tpattern += \"<div class='clear'>&nbsp;</div>\";","\t\tpattern += \"<div class='comment'></div>\";","\t\tpattern += \"<div class='clear'>&nbsp;</div></div>\";","\t\tpattern += \"<div class='clear'>&nbsp;</div>\";","","\t\tthis.html(pattern);","","\t\tif(flags.mandatory){","\t\t\tthis.find(\".label\").append(\"<span class='mandatory'>*</span>\");","\t\t}","\t\tthis.find(\".error\").css(\"display\", \"none\");","\t\tvar $input = this.find(\"input\");","\t\t","\t\tif(is.unset(comment)){","\t\t\tthis.find(\".comment\").css(\"display\", \"none\");","\t\t}","\t\t","\t\t$input.live('focusin', function(){","\t\t\t$(this).addClass('focus');","\t\t}).live('focusout', function(){","\t\t\t$(this).removeClass('focus');","\t\t});","","\t\tvar objID = gID.get();","\t\t","\t\tthis.find(\".edit\").attr(\"id\", objID);","\t\tthis.addClass(\"lightUI\");","","\t\t//-----------------------------------------------------------------------","\t\t// Расширим возможности полученных копии новыми методами плагина (public)","\t\t//-----------------------------------------------------------------------","\t\tplugin.fn.extend({","\t\t\tenable: function(){","\t\t\t\tthis.find(\".edit\").removeClass(\"editDisabled\");","\t\t\t\tif(this.find(\"input\").hasClass(\"validate\")){","\t\t\t\t\tthis.find(\".error\").css(\"display\", \"\");","\t\t\t\t}","\t\t\t\tthis.find(\"input,select,textarea\").attr(\"disabled\", false);","\t\t\t\tthis.find(\".label .mandatory\").html(\"*\");","\t\t\t\treturn this;","\t\t\t},","\t\t\tdisable: function(){","\t\t\t\tthis.find(\".edit\").addClass(\"editDisabled\");","\t\t\t\tthis.find(\".error\").css(\"display\", \"none\");","\t\t\t\tthis.find(\"input,select,textarea\").attr(\"disabled\", true);","\t\t\t\tthis.find(\".label .mandatory\").html(\"\");","\t\t\t\treturn this;","\t\t\t},","\t\t\tisDisabled: function(){","\t\t\t\treturn this.find(\".edit\").hasClass(\"editDisabled\");","\t\t\t},","\t\t\tsetError: function(message){","\t\t\t\tif(is.unset(message)){","\t\t\t\t\tthis.cleanError();","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\tvar $error = this.find(\".error\");","\t\t\t\t\tthis.find(\"input\").addClass(\"validate\");","\t\t\t\t\t$error.fadeIn('slow');","\t\t\t\t\t$error.attr(\"langkey\", message);","\t\t\t\t\t$error.html(lng(message));","\t\t\t\t}","\t\t\t},","\t\t\tcleanError: function(){","\t\t\t\tvar $error = this.find(\".error\");","\t\t\t\tthis.find(\"input\").removeClass(\"validate\");","\t\t\t\t$error.css(\"display\", \"none\");","\t\t\t\t$error.attr(\"langkey\", \"\");","\t\t\t\tthis.find(\".error\").html(\"\");","\t\t\t},","\t\t\tsetComment: function(message){","\t\t\t\tcomment = message;","\t\t\t\tthis.find(\".comment\").show()","\t\t\t\t\t.html(lng(comment))","\t\t\t\t\t.attr(\"langkey\", comment);","\t\t\t},","\t\t\tcleanComment: function(){","\t\t\t\tthis.find(\".comment\").hide();","\t\t\t},","\t\t\tlabel: function(name){","\t\t\t\tvar $label = this.find(\".label>label\");","\t\t\t\tif(is.string(name)){","\t\t\t\t\t$label.html(lng(name));","\t\t\t\t\t$label.attr(\"langkey\", name);","\t\t\t\t\tthis.find(\".label>span\").html(\":\");","\t\t\t\t\treturn this;","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\treturn $label.html(lng(name));","\t\t\t\t}","\t\t\t},","\t\t\taltname: function(name){","\t\t\t\tvar $altname = this.find(\".altname\");","\t\t\t\tif(is.string(name)){","\t\t\t\t\t$altname.html(lng(name));","\t\t\t\t\t$altname.attr(\"langkey\", name);","\t\t\t\t\treturn this;","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\treturn $altname.html(lng(name));","\t\t\t\t}","\t\t\t},","\t\t\tmandatory: function(value){","\t\t\t\tif(is.set(value)){","\t\t\t\t\tif(value){","\t\t\t\t\t\tvar $manda = this.find(\".label .mandatory\");","\t\t\t\t\t\tif($manda.length){","\t\t\t\t\t\t\t$manda.html(\"*\");","\t\t\t\t\t\t}","\t\t\t\t\t\telse{","\t\t\t\t\t\t\tthis.find(\".label\").append(\"<span class='mandatory'>*</span>\");","\t\t\t\t\t\t}","\t\t\t\t\t\tthis.flags().mandatory = true;","\t\t\t\t\t}","\t\t\t\t\telse{","\t\t\t\t\t\tthis.find(\".label .mandatory\").remove();","\t\t\t\t\t\tthis.flags().mandatory = false;","\t\t\t\t\t}","\t\t\t\t\treturn this;","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\treturn this.flags().mandatory;","\t\t\t\t}","\t\t\t},","\t\t\tflags: function(){return this.data(\"flags\");}","\t\t});","","\t\tapplyArgs.call(this);","","\t\t// Убеждаемся, что наш плагин возвращает нашу \"скопированную\" версию jQuery","\t\treturn plugin(this);","\t}","})();","(function(){","\t","\t//-------------------------------------","\t// Делаем копии jQuery, используя sub()","\t//-------------------------------------","\tvar pluginDomainName = jQuery.sub();","\tvar pluginIPv4 = jQuery.sub();","\tvar pluginIPv6 = jQuery.sub();","\tvar pluginIPv4IPv6 = jQuery.sub();","\tvar pluginMAC = jQuery.sub();","\tvar pluginText = jQuery.sub();","\tvar pluginPort = jQuery.sub();","\tvar pluginPortOld = jQuery.sub();","\tvar pluginNumber = jQuery.sub();","\tvar pluginSelect = jQuery.sub();","\tvar pluginStatic = jQuery.sub();","\tvar pluginCheckbox = jQuery.sub();","","\t","\tvar keyDown = function(event){","\t\tif(event.keyCode == 27) {","\t\t\t//~ || event.keyCode == 9){","\t\t\tif(!$.browser.opera){","\t\t\t\tkeyPress.call(this, event);","\t\t\t}","\t\t\treturn false;","\t\t}","\t}","\t","\tvar keyPress = function(event){","\t\tif(navigator.userAgent.match('/Iceweasel/') && event.keyCode == 9) return;","\t\tif(event.keyCode == 13 || event.keyCode == 9){","\t\t\tthis.data(\"noblur\", true);","\t\t\tsetTimeout(context(this).callback(function(){this.data(\"noblur\", false);}), 1);","\t\t\tvar $input = this.find(\"input\");","\t\t\tvar errorCode = this.validate();","\t\t\tif(is.string(errorCode)){","\t\t\t\tthis.trigger(\"error.input\", [errorCode, event.keyCode]);","//\t\t\t\t$input.focus();","\t\t\t\treturn false;","\t\t\t}","\t\t\telse{","\t\t\t\tvar obj = {13: \"enter\", 9: \"tab\"};","\t\t\t\tthis.trigger(obj[event.keyCode] + \".input\");","\t\t\t}","\t\t}","\t\telse if(event.keyCode == 27){","\t\t\tvar $input = this.find(\"input\");","\t\t\tthis.trigger(\"esc.input\");","\t\t}\t\t\t","\t\t","\t\treturn true;","\t}","\t","\tvar onblur = function(event){","\t\tif(this.data(\"noblur\")) return;","\t\tvar errorCode = this.validate();","\t\tif(is.string(errorCode)){","\t\t\tvar $input = this.find(\"input\");","\t\t\tthis.trigger(\"error.input\", errorCode);","//\t\t\tsetTimeout(\"$('#\"+$input.attr(\"id\")+\"').focus()\", 1);","\t\t}","\t\telse{","\t\t\tthis.trigger(\"unfocus.input\");","\t\t}","\t\tevent.stopPropagation();","\t}","","\tvar onfocus = function(event){","\t\tthis.trigger(\"onfocus.input\");","\t\tevent.stopPropagation();","\t}\t\t","\t","\tvar bindEvents = function($obj){","\t\tvar $input = this.find(\"input, select\");","\t\tif($.browser.opera","\t\t\t|| $.browser.webkit","\t\t\t|| $.browser.msie){","\t\t\t$input.keydown(context($obj).callback(keyDown));","\t\t}","\t\t$input.keypress(context($obj).callback(keyPress));","\t\tthis.focusout(context($obj).callback(onblur));","\t\tthis.focusin(context($obj).callback(onfocus));","\t}","\t","\tvar\tfieldval = function(value){","\t\tif(is.set(value)){","\t\t\tapplyAttrs.call(this, value);","\t\t\tthis.find(\"input\").val(value);","\t\t\treturn this;","\t\t}","\t\telse{","\t\t\treturn this.find(\"input\").val();","\t\t}","\t\t\t","\t};","\t","\tvar checkRe = function(errorCode){","\t\tif(!errorCode){","\t\t\tvar re = this.flags().re;","\t\t\tvar validater;","\t\t\tvar value = this.fieldval();","\t\t\tvar alias = value;","\t\t\tif(is.func(this.fieldalias)) alias = this.fieldalias();","\t\t\tif(is.array(re)){","\t\t\t\tfor(var i=0; i<re.length; i++){","\t\t\t\t\tvalidater = re[i];","\t\t\t\t\tif(is.func(validater)){","\t\t\t\t\t\terrorCode = validater(value, alias);","\t\t\t\t\t\tif(errorCode){","\t\t\t\t\t\t\tbreak;","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t}","\t\t\t}","\t\t\telse if(is.func(re)){","\t\t\t\terrorCode = re(value, alias);","\t\t\t}","\t\t}","\t\treturn errorCode;","\t}","","\tvar\tclean = function(){","\t\tthis.fieldval(\"\");","\t\treturn this;","\t};","","\tvar initPlugin = function(flags){","\t\tif(flags.password){","\t\t\tthis.append(\"<input type='password'/>\");","\t\t}","\t\telse{","\t\t\tthis.append(\"<input type='text'/>\");","\t\t}","\t\tvar $input = this.find(\"input\");","\t\tobjID = gID.get();","\t\t$input.attr(\"id\", objID);","\t\tif(is.number(flags.size)) $input.attr(\"size\", flags.size);","\t\tif(is.number(flags.maxLength)) $input.attr(\"maxLength\", flags.maxLength);","\t\tif(flags.disabled) $input.attr(\"disabled\", true);","\t\tthis.data(\"flags\", flags);","\t}","\t","\tvar validateIPv4 = function(str){","\t\tvar patt = /^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/; ","","\t\tif(str.length){","\t\t\tstr = str.match(/\\S+/)[0];","\t\t\t","\t\t\tif(str.length > 18) return \"netAddrInvalid\";","\t\t\t","\t\t\tif(!patt.test(str)) return \"netAddrInvalid\";","","\t\t\tvar arr = str.split(\".\");","\t\t\tfor(var i in arr){","\t\t\t\tif(arr[i] > 255){","\t\t\t\t\treturn \"netAddrInvalid\";","\t\t\t\t}","\t\t\t}","\t\t}","\t\treturn null;","\t}","\t","\tvar validateIPv6 = function(str, flags) {","\t\t","\t\tif(str.match(/^::ffff:/)){","\t\t//IPv6, отображенный на IPv4","\t\t\t","\t\t\treturn validateIPv4(str.replace(/^::ffff:/, \"\"), flags);","\t\t}","\t\telse{","\t\t\tvar re = new RegExp(/^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$/);","\t\t\tif (!re.test(str)) return \"netAddrInvalid\";","\t\t}","\t\treturn null;","\t}","\t","\tvar validateDomain = function(str, flags) {","\t\tvar host = str;","\t\tif(host.length){","\t\t\tvar pat = /^[\\wа-яА-Я-]+$/;","\t\t\tvar dot = host.lastIndexOf(\".\"); ","\t\t\tvar dname = host.substring(0,dot);","\t\t\tvar ext = host.substring(dot+1,host.length); //после последней точки","\t\t\tif(((ext.length-1) < 1) || ((ext.length) > 6)) {","\t\t\t\treturn false;","\t\t\t}","\t\t\thost = host.replace(/(^\\s+|\\s+$)/g,''); // удаляем пробелы в начале и в конце","\t\t\tif ((dot < 2) || (dot > 63)) { // доменное имя от 2 до 63 символов","\t\t\t\treturn false;","\t\t\t}","\t\t\tif ((dot < 2) || (dot > 63)) { // доменное имя от 2 до 63 символов","\t\t\t\treturn false;","\t\t\t}","\t\t\tvar labels = host.split(\".\"); ","\t\t\tfor(var j=0; j<labels.length; j++) {","\t\t\t\tif (!pat.test(labels[j])) {","\t\t\t\t\treturn false;","\t\t\t\t}","\t\t\t}","\t\t\tvar pat_ext = /^[\\wа-яА-Я][^0-9-]+$/; // после последней точки только буквы","\t\t\tif (!pat_ext.test(ext)) {","\t\t\t\treturn false;","\t\t\t}","\t\t\treturn true;","\t\t}","\t}","/*"," * Маски для тестов.","\tvar bitmask = [\"255.255.255.254\", \"255.255.255.252\", \"255.255.255.248\", \"255.255.255.240\", \"255.255.255.224\", \"255.255.255.192\", \"255.255.255.128\", \"255.255.255.0\", ","\t\t\t\t   \"255.255.254.0\", \"255.255.252.0\", \"255.255.248.0\", \"255.255.240.0\", \"255.255.224.0\", \"255.255.192.0\", \"255.255.128.0\", \"255.255.0.0\", ","\t\t\t\t   \"255.254.0.0\", \"255.252.0.0\", \"255.248.0.0\", \"255.240.0.0\", \"255.224.0.0\", \"255.192.0.0\", \"255.128.0.0\", ","\t\t\t\t   \"255.0.0.0\", \"254.0.0.0\", \"252.0.0.0\", \"248.0.0.0\", \"240.0.0.0\", \"224.0.0.0\", \"192.0.0.0\", \"128.0.0.0\", \"0.0.0.0\" ];","\tfor (var i = 0; i <= 128; i++) {","\t\tbitmask.push(i.toString());","\t}","\tvar bitmaskbag = [\"/8\", \"/255.0.0.0\", \"192.168.0.1\", \"255,255.255,254\", \"255.255.o.o\", \"255.255.127.0\", \"255.255.253.0\", \"255.255..0\", \"255.255.3.1\", \"1.2.3.4\", \"8.8.8.8\"];","*/","/*"," * Функция checkMask(mask, type), проверяет валидность введенной маски в зависимости от типа адреса(ipv4 или ipv6);"," * входные данные mask - значение маски типа string;"," * \t\t\t\t  type - значение типа сети;"," * возвращаемое значение - \"InvalidMask\", если ошибка. null - если маска прошла валидацию"," * Вспомогательная функция - checkMaskRange(val, start_range, end_range), проверяет маску при короткой записи(/n)"," * входные значения val - значение, start_range - нижний предел(0), end_range - верхний предел(32 или 128);"," * возвращает true - если валидация не пройдена, false - если пройдена.","*/","\tvar checkMask = function(mask, type) {","","\t\tif(is.string(mask)) {","\t\t\tvar arr = mask.split(\".\");","\t\t\tvar len = arr.length;","\t\t\tswitch(len) {","\t\t\t\tcase 1:","\t\t\t\t\tvar endrange = (type == \"ipv4\")?32:128;","\t\t\t\t\tif (checkMaskRange(arr[0], 0, endrange)) return \"InvalidMask\";","\t\t\t\tbreak;","\t\t\t\tcase 4:","\t\t\t\t\tif (is.IPv4(mask)) {","\t\t\t\t\t\tvar bits = \"\";","\t\t\t\t\t\tfor (var i = 0; i < 4; i++) {","\t\t\t\t\t\t\tvar octet = parseInt(arr[i]);","\t\t\t\t\t\t\tif (octet == 0) {","\t\t\t\t\t\t\t\tbits += \"00000000\";","\t\t\t\t\t\t\t} else {","\t\t\t\t\t\t\t   bits += octet.toString(2);","\t\t\t\t\t\t\t}","\t\t\t\t\t\t}","\t\t\t\t\t\tif (bits.length == 32) {","\t\t\t\t\t\t\tvar flagmask;","\t\t\t\t\t\t\tflagmask = (bits.charAt(0) == \"1\")?false:true;","\t\t\t\t\t\t\tfor (var j = 1; j <= bits.length; j++) {","\t\t\t\t\t\t\t\tif (bits.charAt(j) == 0) {","\t\t\t\t\t\t\t\t\tflagmask = true;","\t\t\t\t\t\t\t\t}","\t\t\t\t\t\t\t\tif ((bits.charAt(j) == 1) && flagmask) {","\t\t\t\t\t\t\t\t\treturn \"InvalidMask\";  ","\t\t\t\t\t\t\t\t}","\t\t\t\t\t\t\t}","\t\t\t\t\t\t} else {","\t\t\t\t\t\t  return \"InvalidMask\" ","\t\t\t\t\t\t}","\t\t\t\t\t} else {","\t\t\t\t\t   return \"InvalidMask\" ","\t\t\t\t\t}","\t\t\t\tbreak;","\t\t\t\tdefault:","\t\t\t\t\treturn \"InvalidMask\"","\t\t\t\tbreak;","\t\t\t}","\t\t\treturn null;","\t\t}","\t}","","\tvar checkMaskRange = function(val, start_range, end_range) {","\t\t","\t\tif ((parseInt(val) == \"NaN\") || (parseInt(val) < start_range) || (parseInt(val) > end_range)) {","\t\t\treturn true;","\t\t} else {","\t\t\treturn false;","\t\t}","\t}","/*"," * Функция checkPort(port, range, several, use_ports), проверяет валидность введенного значения порта или нескольких портов(введенных через диапазон (\":\") или перечисление(\",\"));"," * входные данные port - значение порта типа string;"," * входные данные range - значение флага типа bool. Определяет возможность ввода диапазона значений для порта;"," * входные данные several - значение флага типа bool. Определяет возможность ввода нескольких значений(перечисление) для порта;"," * входные данные use_ports - массив портов, которые уже используются;"," * возвращаемое значение - \"InvalidPort\", если ошибка. null - если маска прошла валидацию;"," * Вспомогательная функция - isPort(val), проверяет действительно ли это порт;"," * входные значения val - значение;"," * возвращает true - если валидация пройдена, false - если не пройдена.","*/","\tvar checkPort = function(port, range, several, use_ports) {","\t\tvar arrport = [];","\t\tvar isrange = false;","\t\tvar isseveral = false;","\t\tvar use_ports = use_ports;","\t\tif (range) {","\t\t\tarrport = port.split(\":\");","\t\t\tif (arrport.length > 1) {","\t\t\t\tisrange = true;","\t\t\t\tif (arrport.length > 2) return \"InvalidPort\";","\t\t\t\tfor (var i = 0; i < arrport.length; i++) {","\t\t\t\t\tif (!isPort(arrport[i])) return \"InvalidPort\";","\t\t\t\t};","\t\t\t\tif (parseInt(arrport[0]) >= parseInt(arrport[1])) return \"InvalidPort\";","\t\t\t}","\t\t}","\t\tif (several) {","\t\t\tarrport = port.split(\",\");","\t\t\tif (arrport.length > 1) {","\t\t\t\tisseveral = true;","\t\t\t\tif (isrange) return \"InvalidPort\";","\t\t\t\tfor (var i = 0; i < arrport.length; i++) {","\t\t\t\t\tif (!isPort(arrport[i])) return \"InvalidPort\";","\t\t\t\t}","\t\t\t}","\t\t}","\t\tif (!isrange && !isseveral) {","\t\t\tif (!isPort(port)) return \"InvalidPort\";","\t\t}","\t\tif (use_ports) {","\t\t\tif (_.indexOf(use_ports, parseInt(port)) != -1) return \"InvalidPortExist\";","\t\t}","\t\treturn null;","\t}","","\tvar isPort = function(val){","\t\tvar patt = /^[0-9]*$/;;","\t\tval = val.match(/\\S+/)[0];","\t\tif(!patt.test(val)) return false;","\t\tvar num = new Number(val);","\t\tif(num < 1) return false;","\t\tif(num > 65535) return false;","\t\treturn true;","\t}","","\tvar isEmpty = function(){","\t\treturn !this.find(\"input\").val().length;","\t}","","\tvar enable = function(){","\t\tvar flags = this.data(\"flags\");","\t\tif(is.unset(flags.accessMode) || flags.accessMode != 4){","\t\t\tthis.find(\"input, select\").attr(\"disabled\", false);","\t\t}","\t\treturn this;","\t}","\t","\tvar show = function(){","\t\tvar flags = this.data(\"flags\");","\t\tif(is.unset(flags.accessMode) || flags.accessMode != 0){","\t\t\tthis.__show__();","\t\t}","\t\treturn this;","\t}","","\tvar isDisabled = function(){","\t\treturn this.find(\"input, select\").attr(\"disabled\")","\t}","\t","\tvar disable = function(){","\t\tthis.find(\"input, select\").attr(\"disabled\", true);","\t}","","\tvar applyAttrs = function(value){","/*","//\t\tfunction toDefaultMode(){","//\t\t\tdelete this.data(\"flags\").accessMode;","//\t\t\tif(!this.flags().disabled) this.enable();","//\t\t}","\t\t","\t\ttry{","\t\t\tvar mode = this.data(\"flags\").accessMode = value.__attrs__.mode;","\t\t\tswitch(mode){","\t\t\t\tcase 4:","\t\t\t\t\tthis.find(\"input, select\").attr(\"disabled\", true);","\t\t\t\tbreak;","\t\t\t\tcase 0:","\t\t\t\t\tthis.hide();","\t\t\t\tbreak;","//\t\t\t\tdefault:","//\t\t\t\t\ttoDefaultMode.call(this);","//\t\t\t\tbreak;","\t\t\t}","\t\t}","\t\tcatch(e){","//\t\t\ttoDefaultMode.call(this);","\t\t}*/","\t}","","\t// Добавим плагин input к оригинальной копии jQuery","\tjQuery.fn.lightUIDomainName = function(flags){","\t\tif(is.unset(flags)) flags = {};","\t\tif(is.set(flags)){","\t\t\tvar isip = flags.isip;","\t\t\tvar ipv6 = flags.ipv6;","\t\t}","\t\t","\t\tvar objID;","\t\tinitPlugin.call(this, flags);","","\t\t//-----------------------------------------------------------------------","\t\t// Расширим возможности полученной копии новыми методами плагина (public)","\t\t//-----------------------------------------------------------------------","\t\tpluginDomainName.fn.extend({","\t\t\tvalidate: function(){","\t\t\t\tif(!this.find(\"input\").attr(\"disabled\")){","\t\t\t\t\tvar host = this.find(\"input\").val();","\t\t\t\t\tif(host.length){","\t\t\t\t\t\tif(isip) {","\t\t\t\t\t\t\tif(ipv6 == true){ // если v6","\t\t\t\t\t\t\t\tif(!validateDomain(host) && (validateIPv4(host)!=null) && (validateIPv6(host)!=null)){ ","\t\t\t\t\t\t\t\t\treturn \"domainNameInvalid\";","\t\t\t\t\t\t\t\t}","\t\t\t\t\t\t\t}","\t\t\t\t\t\t\telse { // если нет v6","\t\t\t\t\t\t\t\tif(!validateDomain(host) && (validateIPv4(host)!=null)){ ","\t\t\t\t\t\t\t\t\treturn \"domainNameInvalid\";","\t\t\t\t\t\t\t\t}","\t\t\t\t\t\t\t}","\t\t\t\t\t\t}","\t\t\t\t\t\telse {","\t\t\t\t\t\t\tif(!validateDomain(host)) {","\t\t\t\t\t\t\t\treturn \"domainNameInvalid\";\t","\t\t\t\t\t\t\t}","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t\treturn checkRe.call(this);","\t\t\t\t}","\t\t\t\treturn null;","\t\t\t},","\t\t\tfieldval: fieldval,","\t\t\tisEmpty: isEmpty,","\t\t\tenable: enable,","\t\t\tdisable: disable,","\t\t\tisDisabled: isDisabled,","\t\t\tflags: function(){return this.data(\"flags\");},","\t\t\tclean: clean,","\t\t\tshow: show,","\t\t\t__show__: this.show","\t\t});","","\t\tvar $obj = pluginDomainName(this);","\t\tbindEvents.call(this, $obj);","\t\tthis.data(\"light_ui_input\", $obj);","","\t\treturn $obj;","\t","\t}","","\t// Добавим плагин IPv4 к оригинальной копии jQuery","\tjQuery.fn.lightUIIPv4 = function(flags){","\t\tif(is.unset(flags)) flags = {};","\t\tvar objID;","\t\tinitPlugin.call(this, flags);","","\t\t//-----------------------------------------------------------------------","\t\t// Расширим возможности полученной копии новыми методами плагина (public)","\t\t//-----------------------------------------------------------------------","\t\tpluginIPv4.fn.extend({","\t\t\tvalidate: function(){","\t\t\t\tif(!this.find(\"input\").attr(\"disabled\")){","\t\t\t\t\tvar str = this.find(\"input\").val();","\t\t\t\t\tvar arr = str.split(\"/\");","\t\t\t\t\tvar errorCode = null;","\t","\t\t\t\t\tvar bitmask = arr[1];","\t\t\t\t\tif(is.string(bitmask)){","\t\t\t\t\t\tif(parseInt(bitmask).toString() == \"NaN\" || bitmask > 32 || bitmask < 0){","\t\t\t\t\t\t\treturn \"netAddrInvalid\";","\t\t\t\t\t\t}","\t\t\t\t\t}","\t","\t\t\t\t\terrorCode = validateIPv4(arr[0], flags);","\t\t\t\t\treturn checkRe.call(this, errorCode);","\t\t\t\t}","\t\t\t\treturn null;","\t\t\t},","\t\t\tfieldval: fieldval,","\t\t\tisEmpty: isEmpty,","\t\t\tenable: enable,","\t\t\tdisable: disable,","\t\t\tisDisabled: isDisabled,","\t\t\tflags: function(){return this.data(\"flags\");},","\t\t\tclean: clean,","\t\t\tshow: show,","\t\t\t__show__: this.show","\t\t});","","\t\t","\t\tvar $obj = pluginIPv4(this);","\t\tbindEvents.call(this, $obj);","\t\tthis.data(\"light_ui_input\", $obj);","","\t\treturn $obj;","\t}","","\t// Добавим плагин IPv6 к оригинальной копии jQuery","\tjQuery.fn.lightUIIPv6 = function(flags){","\t\tif(is.unset(flags)) flags = {};","\t\tvar objID;","\t\tinitPlugin.call(this, flags);","","\t\t//-----------------------------------------------------------------------","\t\t// Расширим возможности полученной копии новыми методами плагина (public)","\t\t//-----------------------------------------------------------------------","\t\tpluginIPv6.fn.extend({","\t\t\tvalidate: function(){","\t\t\t\tif(!this.find(\"input\").attr(\"disabled\")){","\t\t\t\t\tvar str = this.find(\"input\").val();","\t\t\t\t\tvar errorCode = null;","\t","\t\t\t\t\tif(str.length){","\t\t\t\t\t\tstr = str.match(/\\S+/)[0];","\t\t\t\t\t\tvar arr = str.split(\"/\");","\t\t\t\t\t\tvar bitmask = arr[1];","\t\t\t\t\t\tstr = arr[0];","\t\t\t\t\t\tif(is.string(bitmask)){","\t\t\t\t\t\t\tif(parseInt(bitmask).toString() == \"NaN\" || bitmask > 128 || bitmask < 0){","\t\t\t\t\t\t\t\treturn \"netAddrInvalid\";","\t\t\t\t\t\t\t}","\t\t\t\t\t\t}","\t\t\t\t\t\terrorCode = validateIPv6(str);","\t\t\t\t\t}","\t\t\t\t\t","\t\t\t\t\treturn checkRe.call(this, errorCode);","\t\t\t\t}","\t\t\t\treturn null;","\t\t\t},","\t\t\tfieldval: fieldval,","\t\t\tisEmpty: isEmpty,","\t\t\tenable: enable,","\t\t\tdisable: disable,","\t\t\tisDisabled: isDisabled,","\t\t\tflags: function(){return this.data(\"flags\");},","\t\t\tclean: clean,","\t\t\tshow: show,","\t\t\t__show__: this.show","\t\t});","","\t\t","\t\tvar $obj = pluginIPv6(this);","\t\tbindEvents.call(this, $obj);","\t\tthis.data(\"light_ui_input\", $obj);","","\t\treturn $obj;","\t}","","\t// Добавим плагин IPv4IPv6 к оригинальной копии jQuery","\tjQuery.fn.lightUIIPv4IPv6 = function(flags){","\t\tif(is.unset(flags)) flags = {};","\t\tvar objID;","\t\tinitPlugin.call(this, flags);","","\t\t//-----------------------------------------------------------------------","\t\t// Расширим возможности полученной копии новыми методами плагина (public)","\t\t//-----------------------------------------------------------------------","\t\tpluginIPv4IPv6.fn.extend({","\t\t\tvalidate: function(){","\t\t\t\tif(!this.find(\"input\").attr(\"disabled\")){","\t\t\t\t\tvar str = this.find(\"input\").val();","\t\t\t\t\tvar arr = str.split(\"/\");","\t\t\t\t\tvar errorCode = null;","\t","\t\t\t\t\tvar bitmask = arr[1];","\t\t\t\t\terrorCode = validateIPv4(arr[0]);","\t\t\t\t\tif (!errorCode) {","\t\t\t\t\t\terrorCode = checkMask(arr[1], \"ipv4\");","\t\t\t\t\t} else {","\t\t\t\t\t\terrorCode = validateIPv6(arr[0]);","\t\t\t\t\t\tif (!errorCode) {","\t\t\t\t\t\t\terrorCode = checkMask(arr[1], \"ipv6\");","\t\t\t\t\t\t}","\t\t\t\t\t}","\t","\t\t\t\t\treturn checkRe.call(this, errorCode);","\t\t\t\t}","\t\t\t\treturn null;","\t\t\t},","\t\t\tfieldval: fieldval,","\t\t\tisEmpty: isEmpty,","\t\t\tenable: enable,","\t\t\tdisable: disable,","\t\t\tisDisabled: isDisabled,","\t\t\tflags: function(){return this.data(\"flags\");},","\t\t\tclean: clean,","\t\t\tshow: show,","\t\t\t__show__: this.show","\t\t});","","\t\t","\t\tvar $obj = pluginIPv4IPv6(this);","\t\tbindEvents.call(this, $obj);","\t\tthis.data(\"light_ui_input\", $obj);","","\t\treturn $obj;","\t}","","\t// Добавим плагин MAC к оригинальной копии jQuery","\tjQuery.fn.lightUIMAC = function(flags){","\t\tif(is.unset(flags)) flags = {};","\t\tvar objID;","\t\tinitPlugin.call(this, flags);","","\t\t//-----------------------------------------------------------------------","\t\t// Расширим возможности полученной копии новыми методами плагина (public)","\t\t//-----------------------------------------------------------------------","\t\tpluginMAC.fn.extend({","\t\t\tvalidate: function(){","\t\t\t\tif(!this.find(\"input\").attr(\"disabled\")){","\t\t\t\t\tif (flags.isRange) {","\t\t\t\t\t\tvar patt = /^[0-9a-fA-F*]{1,2}:[0-9a-fA-F*]{1,2}:[0-9a-fA-F*]{1,2}:[0-9a-fA-F*]{1,2}:[0-9a-fA-F*]{1,2}:[0-9a-fA-F*]{1,2}$/; ","\t\t\t\t\t} else {","\t\t\t\t\t\tvar patt = /^[0-9a-fA-F]{1,2}:[0-9a-fA-F]{1,2}:[0-9a-fA-F]{1,2}:[0-9a-fA-F]{1,2}:[0-9a-fA-F]{1,2}:[0-9a-fA-F]{1,2}$/; ","\t\t\t\t\t}","\t\t\t\t\tvar str = this.find(\"input\").val();","\t","\t\t\t\t\tif(str.length){","\t\t\t\t\t\tstr = str.match(/\\S+/)[0];","\t\t","\t\t\t\t\t\tif(!patt.test(str)) return \"netAddrInvalid\";","\t\t","\t\t\t\t\t\tvar arr = str.split(\".\");","\t\t\t\t\t\tfor(var i in arr){","\t\t\t\t\t\t\tif(arr[i] > 255){","\t\t\t\t\t\t\t\treturn \"netAddrInvalid\";","\t\t\t\t\t\t\t}","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t\treturn checkRe.call(this);","\t\t\t\t}","\t\t\t\treturn null;","\t\t\t},","\t\t\tfieldval: fieldval,","\t\t\tisEmpty: isEmpty,","\t\t\tenable: enable,","\t\t\tdisable: disable,","\t\t\tflags: function(){return this.data(\"flags\");},","\t\t\tclean: clean,","\t\t\tshow: show,","\t\t\t__show__: this.show","\t\t});","","\t\t","\t\tvar $obj = pluginMAC(this);","\t\tbindEvents.call(this, $obj);","\t\tthis.data(\"light_ui_input\", $obj);","","\t\treturn $obj;","\t}","\t// Добавим плагин Port к оригинальной копии jQuery","\tjQuery.fn.lightUIPort = function(flags){","\t\tif(is.unset(flags)) flags = {};","\t\tvar objID;","\t\tinitPlugin.call(this, flags);","","\t\t//-----------------------------------------------------------------------","\t\t// Расширим возможности полученной копии новыми методами плагина (public)","\t\t//-----------------------------------------------------------------------","\t\tpluginPort.fn.extend({","\t\t\tvalidate: function(){","\t\t\t\t","\t\t\t\tif(!this.find(\"input\").attr(\"disabled\")){","\t\t\t\t\tvar errorCode = null;","\t\t\t\t\tvar isRange = (flags.isRange)?true:false;","\t\t\t\t\tvar isSeveral = (flags.isSeveral)?true:false;","\t\t\t\t\tvar use_ports = (flags.use_ports)?flags.use_ports:false;","\t\t\t\t\tvar str = this.find(\"input\").val();","\t\t\t\t\tif(str.length){","\t\t\t\t\t\terrorCode = checkPort(str, isRange, isSeveral, use_ports);","\t\t\t\t\t}","\t\t\t\t\treturn checkRe.call(this, errorCode);","\t\t\t\t}","\t\t\t\treturn null;","\t\t\t},","\t\t\tfieldval: fieldval,","\t\t\tisEmpty: isEmpty,","\t\t\tenable: enable,","\t\t\tdisable: disable,","\t\t\tflags: function(){return this.data(\"flags\");},","\t\t\tclean: clean,","\t\t\tshow: show,","\t\t\t__show__: this.show","\t\t});","","\t\t","\t\tvar $obj = pluginPort(this);","\t\tbindEvents.call(this, $obj);","\t\tthis.data(\"light_ui_input\", $obj);","","\t\treturn $obj;","\t}","","\t\t// Добавим плагин PortOld к оригинальной копии jQuery","\t\t// Плагин нужен на странице виртуальных серверов, т.к. подряд идет 4 поля nodeport","\t\t// и только в первых 2-х задан параметр use_ports, в итоге не работает проверка на совадение портов","\tjQuery.fn.lightUIPortOld = function(flags){","\t\tif(is.unset(flags)) flags = {};","\t\tvar objID;","\t\tinitPlugin.call(this, flags);","","\t\t//-----------------------------------------------------------------------","\t\t// Расширим возможности полученной копии новыми методами плагина (public)","\t\t//-----------------------------------------------------------------------","\t\tpluginPortOld.fn.extend({","\t\t\tvalidate: function(){","","\t\t\t\tif(!this.find(\"input\").attr(\"disabled\")){","\t\t\t\t\tvar errorCode = null;","\t\t\t\t\tvar isRange = (flags.isRange)?true:false;","\t\t\t\t\tvar isSeveral = (flags.isSeveral)?true:false;","\t\t\t\t\tvar str = this.find(\"input\").val();","\t\t\t\t\tif(str.length){","\t\t\t\t\t\terrorCode = checkPort(str, isRange, isSeveral);","\t\t\t\t\t}","\t\t\t\t\treturn checkRe.call(this, errorCode);","\t\t\t\t}","\t\t\t\treturn null;","\t\t\t},","\t\t\tfieldval: fieldval,","\t\t\tisEmpty: isEmpty,","\t\t\tenable: enable,","\t\t\tdisable: disable,","\t\t\tflags: function(){return this.data(\"flags\");},","\t\t\tclean: clean,","\t\t\tshow: show,","\t\t\t__show__: this.show","\t\t});","","\t\tvar $obj = pluginPortOld(this);","\t\tbindEvents.call(this, $obj);","\t\tthis.data(\"light_ui_input\", $obj);","","\t\treturn $obj;","\t}","","","\t// Добавим плагин MAC к оригинальной копии jQuery","\tjQuery.fn.lightUIText = function(flags){","\t\tif(is.unset(flags)) flags = {};","\t\tvar objID;","\t\tinitPlugin.call(this, flags);","","\t\t//-----------------------------------------------------------------------","\t\t// Расширим возможности полученной копии новыми методами плагина (public)","\t\t//-----------------------------------------------------------------------","\t\tpluginText.fn.extend({","\t\t\tvalidate: function(){","\t\t\t\tif(!this.find(\"input\").attr(\"disabled\")){","\t\t\t\t\treturn checkRe.call(this);","\t\t\t\t}","\t\t\t\treturn null;","\t\t\t},","\t\t\tfieldval: fieldval,","\t\t\tisEmpty: isEmpty,","\t\t\tenable: enable,","\t\t\tdisable: disable,","\t\t\tisDisabled: isDisabled,","\t\t\tflags: function(){return this.data(\"flags\");},","\t\t\tclean: clean,","\t\t\tshow: show,","\t\t\t__show__: this.show","\t\t});","","\t\t","\t\tvar $obj = pluginText(this);","\t\tbindEvents.call(this, $obj);","\t\tthis.data(\"light_ui_input\", $obj);","","\t\treturn $obj;","\t}","","","\t// Добавим плагин Static к оригинальной копии jQuery","\tjQuery.fn.lightUIStatic = function(){","\t\tthis.data(\"flags\", {});","\t\tthis.addClass(\"static\");","\t\t//-----------------------------------------------------------------------","\t\t// Расширим возможности полученной копии новыми методами плагина (public)","\t\t//-----------------------------------------------------------------------","\t\tpluginStatic.fn.extend({","\t\t\tvalidate: function(){","\t\t\t\treturn null;","\t\t\t},","\t\t\tfieldval: function(value){","\t\t\t\tapplyAttrs.call(this, value);","\t\t\t\tif(is.set(value)){","\t\t\t\t\treturn this.html(value.valueOf());","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\treturn this.html();","\t\t\t\t}","\t\t\t\t\t","\t\t\t},","\t\t\tisEmpty: function(){","\t\t\t\treturn !this.html().length;","\t\t\t},","\t\t\tenable: function(){","\t\t\t\treturn this;","\t\t\t},","\t\t\tdisable: function(){","\t\t\t\treturn this;","\t\t\t},","\t\t\tisDisabled: function(){","\t\t\t\treturn false;","\t\t\t},","\t\t\tflags: function(){return this.data(\"flags\");},","\t\t\tclean: clean,","\t\t\tshow: show,","\t\t\t__show__: this.show","\t\t});","","\t\tvar $obj = pluginStatic(this)","\t\tthis.data(\"light_ui_input\", $obj);","","\t\treturn $obj;","\t}","\t","\t// Добавим плагин Number к оригинальной копии jQuery","\tjQuery.fn.lightUINumber = function(flags){","\t\tif(is.unset(flags)) flags = {};","\t\tvar objID;","\t\tinitPlugin.call(this, flags);","","\t\t//-----------------------------------------------------------------------","\t\t// Расширим возможности полученной копии новыми методами плагина (public)","\t\t//-----------------------------------------------------------------------","\t\tpluginNumber.fn.extend({","\t\t\tvalidate: function(){","\t\t\t\tif(!this.find(\"input\").attr(\"disabled\")){","\t\t\t\t\tvar str = this.find(\"input\").val();","\t","\t\t\t\t\tvar flags = this.flags();","\t\t\t\t\tif(str.length){","\t\t\t\t\t\tstr = str.match(/\\S+/)[0];","\t\t\t\t\t\tvar patt = /^-*[0-9]+(\\.?[0-9]+|[0-9]*)$/;","\t\t\t\t\t\tif(!patt.test(str)) return \"numNaN\";","\t","\t\t\t\t\t\tvar num  = new Number(str);","\t\t\t\t\t\tif(is.number(flags.minval) && num < flags.minval) return \"numLessThanMin\";","\t\t\t\t\t\tif(is.number(flags.maxval) && num > flags.maxval) return \"numMoreThanMax\";","\t\t\t\t\t}","\t\t\t\t\treturn checkRe.call(this);","\t\t\t\t}","\t\t\t\treturn null;","\t\t\t},","\t\t\tfieldval: function(value){","\t\t\t\tif(is.set(value)){","\t\t\t\t\tapplyAttrs.call(this, value);","\t\t\t\t\tthis.find(\"input\").val(value);","\t\t\t\t\treturn this;","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\tvar val = this.find(\"input\").val();","\t\t\t\t\tif(val.length){","\t\t\t\t\t\treturn (new Number(this.find(\"input\").val())).valueOf();","\t\t\t\t\t}","\t\t\t\t\telse{","\t\t\t\t\t\treturn val;","\t\t\t\t\t}","\t\t\t\t}","\t\t\t\t\t","\t\t\t},","\t\t\tisEmpty: isEmpty,","\t\t\tenable: enable,","\t\t\tdisable: disable,","\t\t\tisDisabled: isDisabled,","\t\t\tflags: function(){return this.data(\"flags\");},","\t\t\tclean: clean,","\t\t\tshow: show,","\t\t\t__show__: this.show","\t\t});","","\t\t","\t\tvar $obj = pluginNumber(this);","\t\tbindEvents.call(this, $obj);","\t\tthis.data(\"light_ui_input\", $obj);","","\t\treturn $obj;","\t}","","\t// Добавим плагин Select к оригинальной копии jQuery","\tjQuery.fn.lightUISelect = function(flags){","\t\tif(is.unset(flags)) flags = {};","\t\tif(is.unset(flags.options)) flags.options = {};","","\t\tvar $input = this.append(\"<select></select\").find(\"select\");","\t\tif(flags.disabled) $input.attr(\"disabled\", true);","","\t\tvar options = flags.options;","\t\tvar optionArray = flags.optionArray;","\t\tif(is.array(optionArray)){","\t\t\tvar opt;","\t\t\tflags.options = {};","\t\t\toptions = flags.options;","\t\t\tfor(var i=0; i<optionArray.length; i++){","\t\t\t\topt = optionArray[i];","\t\t\t\toptions[opt.name] = opt.value;","\t\t\t\t$input.append(\"<option value='\" + opt.value + \"'>\" + lng(opt.name) + \"</option>\")","\t\t\t\t\t.find(\"option:last\").attr(\"langkey\", opt.name);","\t\t\t}","\t\t}","\t\telse if(is.object(options)){","\t\t\tfor(var i in options){","\t\t\t\t$input.append(\"<option value='\" + options[i] + \"'>\" + lng(i) + \"</option>\")","\t\t\t\t\t.find(\"option:last\").attr(\"langkey\", i);","\t\t\t}","\t\t}","\t\tif(options.length){","\t\t\tvar value = this.find(\"option:eq(0)\").attr(value);","\t\t\t$input.val(value).data(\"value\", value);","\t\t}","\t\t$input.attr(\"id\", gID.get());","\t\tif(is.number(flags.size)) $input.attr(\"size\", flags.size);","\t\tif(is.set(flags.multiple)) $input.attr(\"multiple\", flags.multiple);","\t\tthis.data(\"flags\", flags);","","\t\t//-----------------------------------------------------------------------","\t\t// Расширим возможности полученной копии новыми методами плагина (public)","\t\t//-----------------------------------------------------------------------","\t\tpluginSelect.fn.extend({","\t\t\tvalidate: function(){","\t\t\t\tif(!this.find(\"select\").attr(\"disabled\")){","\t\t\t\t\treturn checkRe.call(this);","\t\t\t\t}","\t\t\t\treturn null;","\t\t\t},","\t\t\tfieldval: function(value){","\t\t\t\tvar $select = this.find(\"select\");","\t\t\t\tif(is.set(value)){","\t\t\t\t\tapplyAttrs.call(this, value);","\t\t\t\t\t$select.val(value.valueOf()).data(\"value\", value.valueOf());","\t\t\t\t\treturn this;","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\treturn $select.val();","\t\t\t\t}","\t\t\t},","\t\t\tfieldalias: function(alias){","\t\t\t\tvar $select = this.find(\"select\");","\t\t\t\tvar options = this.flags().options;","\t\t\t\tif(is.set(alias)){","\t\t\t\t\tvar $option = this.find(\"option\");","\t\t\t\t\tfor(var i=0; i<$option.length; i++){","\t\t\t\t\t\tif($option.eq(i).attr(\"langkey\") == alias){","\t\t\t\t\t\t\tthis.fieldval($option.eq(i).attr(\"value\"));","\t\t\t\t\t\t\tbreak","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t\treturn this;","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\treturn this.find(\"select option:selected\").attr(\"langkey\");","/*\t\t\t\t\tvar value = this.fieldval();","\t\t\t\t\tfor(var i in options){","\t\t\t\t\t\tif(value == options[i]){","\t\t\t\t\t\t\treturn i;","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t\treturn null;*/","\t\t\t\t}","\t\t\t},","\t\t\taddOption: function(__name, __value){","\t\t\t\tvar $select = this.find(\"select\");","\t\t\t\tvar value = $select.data(\"value\");","\t\t\t\t$select.append(\"<option value='\" + __value + \"'>\" + lng(__name) + \"</option>\")","\t\t\t\t\t.find(\"option:last\").attr(\"langkey\", __name);","\t\t\t\tif(!this.data(\"flags\").manualCorrection){","\t\t\t\t\t//Выставить начальное значение автоматически","\t\t\t\t\tvar value = $select.data(\"value\");","\t\t\t\t\tif(is.unset(value) || value == __value){","\t\t\t\t\t\tthis.fieldval(__value);","\t\t\t\t\t}","\t\t\t\t}","\t\t\t\treturn this;","\t\t\t},","\t\t\tcorrectValue: function(){","\t\t\t\t//Откорректировать в соотв. с начальным значением","\t\t\t\tvar $options = this.find(\"select option\");","\t\t\t\tvar value = this.find(\"select\").data(\"value\");","\t\t\t\tfor(var i=0; i<$options.length; i++){","\t\t\t\t\tif($options.eq(i).attr(\"value\") == value){","\t\t\t\t\t\tthis.fieldval(value);","\t\t\t\t\t\treturn this;","\t\t\t\t\t}","\t\t\t\t}","\t\t\t\treturn this;","\t\t\t},","\t\t\tcleanOptions: function(){","\t\t\t\tthis.find(\"select\").html(\"\");","\t\t\t},","\t\t\tupdateSelect: function(){","\t\t\t\tthis.html(this.html());","\t\t\t\treturn this;","\t\t\t},","\t\t\tisEmpty: function(){return false},","\t\t\tenable: enable,","\t\t\tdisable: disable,","\t\t\tisDisabled: isDisabled,","\t\t\tflags: function(){return this.data(\"flags\");},","\t\t\tclean: function(){return this},","\t\t\tshow: show,","\t\t\t__show__: this.show","\t\t});","","\t\t","\t\tvar $obj = pluginSelect(this);","\t\tbindEvents.call(this, $obj);","\t\tthis.data(\"light_ui_input\", $obj);","","\t\treturn $obj;","\t}","","","\t// Добавим плагин Checkbox к оригинальной копии jQuery","\tjQuery.fn.lightUICheckbox = function(flags){","\t\tif(is.unset(flags)) flags = {};","\t\tif(is.unset(flags.options)) flags.options = {};","","\t\tvar $input = this.append(\"<input type='checkbox'></checkbox\").find(\"input\");","\t\tif(flags.disabled) $input.attr(\"disabled\", true);","","\t\t$input.attr(\"id\", gID.get());","\t\tthis.data(\"flags\", flags);","","\t\t//-----------------------------------------------------------------------","\t\t// Расширим возможности полученной копии новыми методами плагина (public)","\t\t//-----------------------------------------------------------------------","\t\tpluginCheckbox.fn.extend({","\t\t\tvalidate: function(){","\t\t\t\treturn null;","\t\t\t},","\t\t\tfieldval: function(value){","\t\t\t\tvar $input = this.find(\"input\");","\t\t\t\tif(is.set(value)){","\t\t\t\t\tapplyAttrs.call(this, value);","\t\t\t\t\t$input.attr(\"checked\", value?true:false);","\t\t\t\t\treturn this;","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\treturn $input.attr(\"checked\")?true:false;","\t\t\t\t}","\t\t\t},","\t\t\tisEmpty: function(){return false},","\t\t\tenable: enable,","\t\t\tdisable: disable,","\t\t\tisDisabled: isDisabled,","\t\t\tflags: function(){return this.data(\"flags\");},","\t\t\tclean: function(){return this},","\t\t\tshow: show,","\t\t\t__show__: this.show","\t\t});","","\t\t","\t\tvar $obj = pluginCheckbox(this);","\t\tbindEvents.call(this, $obj);","","\t\treturn $obj;","\t}","})();","","","(function(){","","\t//-------------------------------------","\t// Делаем копию jQuery, используя sub()","\t//-------------------------------------","\tvar plugin = jQuery.sub();","\t","\t// Добавим наш плагин к оригинальной копии jQuery","\tjQuery.fn.lightUIUpload = function(action, filename, options){","\t\t","\t\tthis.iframename = gID.get();","\t\t","\t\toptions = $.extend({","\t\t\t'auto': true,","\t\t\t'method': 'post',","\t\t\t'browse': 'Browse',","\t\t\t'cancel': 'Cancel'","\t\t}, options);","\t\t","\t\taction = (action.indexOf('?')>=0)?action+'&proxy=y':action+'?proxy=y'","\t\t","\t\tvar $pattern = $(\"\\","\t\t\t<div class='upload normal'>\\","\t\t\t\t<div class='ustatus'></div>\\","\t\t\t\t<div class='ufile'>\\","\t\t\t\t\t<input type='text' class='path' readonly='readonly' value='' />\\","\t\t\t\t</div>\\","\t\t\t\t<div class='ubutton'>\\","\t\t\t\t\t<input type='button' class='browse' langkey='\" + options.browse + \"' value='\" + lng(options.browse) + \"' />\\","\t\t\t\t\t<input type='button' class='cancel' langkey='\" + options.cancel + \"' value='\" + lng(options.cancel) + \"' />\\","\t\t\t\t</div>\\","\t\t\t\t<div class='clear'></div>\\","\t\t\t\t<form action='\" + action + \"' id='\" + gID.get() + \"' enctype='multipart/form-data' target='\" + this.iframename + \"' method='\" + options.method + \"'>\\","\t\t\t\t\t<input type='file' name='\" + filename + \"' />\\","\t\t\t\t\t<input type='reset' />\\","\t\t\t\t</form>\\","\t\t\t\t<iframe frameborder='0' scrolling='no' name='\" + this.iframename + \"' id='\" + this.iframename + \"'></iframe>\\","\t\t\t</div>\\","\t\t\");","\t\t","\t\tthis.html($pattern);","\t\tthis.addClass(\"lightUI\");","\t\tthis.uploading = false;","\t\tthis.auto = options.auto;","\t\t","\t\tthis.find('>.upload input.browse').bind('click', callback(this, function(){","\t\t\tthis.find('>.upload input[type=file]').trigger('click');","\t\t\treturn false;","\t\t}));","\t\tthis.find('>.upload input.cancel').bind('click', callback(this, function(){","\t\t\tif (this.uploading) {","\t\t\t\tfor (var i = 0; i < window.frames.length; i++){","\t\t\t\t\tif (window.frames[i].name == this.iframename) {","\t\t\t\t\t\tif (jQuery.browser.msie) {","\t\t\t\t\t\t\twindow.frames[i].document.execCommand('Stop');","\t\t\t\t\t\t} else {","\t\t\t\t\t\t\twindow.frames[i].stop();","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t}","\t\t\t\tthis.find('>.upload').removeClass('uploading').trigger('clear');","\t\t\t\tthis.uploading = false;","\t\t\t\tthis.trigger('break.upload');","\t\t\t}","\t\t\treturn false;","\t\t}));","\t\tthis.find('>.upload iframe').bind('load', callback(this, function(e){","\t\t\tif (this.uploading) {","\t\t\t\tthis.find(\">.upload\").removeClass('uploading');","\t\t\t\tthis.uploading = false;","\t\t\t\tthis.trigger('end.upload', $(e.target).contents().find(\"body\").html());","\t\t\t}","\t\t\treturn false;","\t\t}));","\t\tthis.find('>.upload input[type=file]').bind('change', callback(this, function(e){","\t\t\tvar path = basename($(e.target).val());","\t\t\tthis.find('>.upload input.path').val(path);","\t\t\tif (this.auto) {","\t\t\t\tthis.find(\">.upload\").trigger('upload');","\t\t\t}","\t\t\tthis.trigger('change.upload');","\t\t\treturn false;","\t\t}));","\t\tthis.find(\">.upload\").bind({","\t\t\t'upload': callback(this, function(){","\t\t\t\tif (!this.uploading && this.find('>.upload input[type=file]').val() != '') {","\t\t\t\t\tthis.uploading = true;","\t\t\t\t\tthis.find(\">.upload\").addClass('uploading').find('form').submit();","\t\t\t\t\tthis.trigger('begin.upload');","\t\t\t\t}","\t\t\t\treturn false;","\t\t\t}),","\t\t\t'clear': callback(this, function(){","\t\t\t\tthis.find('>.upload input.path').val('');","\t\t\t\tthis.find('>.upload input[type=reset]').trigger('click');","\t\t\t\tthis.find('>.upload form').get(0).reset();","\t\t\t\treturn false;","\t\t\t})","\t\t});","","\t\t//Костыль для IE","\t\ttry{","\t\t\tvar ieversion = navigator.appVersion.match(/MSIE\\s+\\d+/)[0].replace('MSIE', '')","/*\t\t\tif(ieversion >= 8){","\t\t\t\tthis.find('>.upload').addClass('upload-ie8').find('input.browse').unbind('click');","\t\t\t}","\t\t\telse if(ieversion < 8){","\t\t\t\tthis.find('>.upload').addClass('upload-ie7').find('input.browse').unbind('click');","\t\t\t}*/","\t\t\tif(ieversion){","\t\t\t\tthis.find('>.upload').addClass('upload-ie');","\t\t\t}","\t\t\t","\t\t}","\t\tcatch(e){","\t\t}","\t\t//-----------------------------------------------------------------------","\t\t// Расширим возможности полученных копии новыми методами плагина (public)","\t\t//-----------------------------------------------------------------------","\t\tplugin.fn.extend({","\t\t\tenable: function(){","\t\t\t\tthis.find(\">.upload\").removeClass('disable').addClass('normal');","\t\t\t\tthis.find(\">.upload :input\").removeAttr('disabled');","\t\t\t\treturn this;","\t\t\t},","\t\t\tdisable: function(){","\t\t\t\tthis.find(\">.upload\").removeClass('normal').addClass('disable');","\t\t\t\tthis.find(\">.upload :input\").attr('disabled','disabled');","\t\t\t\treturn this;","\t\t\t},","\t\t\tupload: function(){","\t\t\t\tthis.find(\">.upload\").trigger('upload');","\t\t\t\treturn this;","\t\t\t},","\t\t\tcancel: function(){","\t\t\t\tthis.find(\">.upload input.cancel\").trigger('click');","\t\t\t\treturn this;","\t\t\t},","\t\t\tclear: function(){","\t\t\t\tthis.find(\">.upload\").trigger('clear');","\t\t\t\treturn this;","\t\t\t}","\t\t});","\t\treturn plugin(this);","\t}","})();","(function(){","","\t//-------------------------------------","\t// Делаем копию jQuery, используя sub()","\t//-------------------------------------","\tvar plugin = jQuery.sub();","\t","\t// Добавим наш плагин к оригинальной копии jQuery","\tjQuery.fn.lightUITrackbar = function(value, flags){","\t\t","\t\tvar objID = gID.get();","\t\t","\t\tflags = $.extend({","\t\t\t'minval': 0,","\t\t\t'maxval': 100,","\t\t\t'suffix': '%',","\t\t\t'direct': 'horizontal'","\t\t}, flags);","\t\t","\t\tthis.data('flags', flags);","\t\t","\t\tvar $pattern = $(\"\\","\t\t\t<div class='trackbar unselectable'>\\","\t\t\t\t<div class='shell'>\\","\t\t\t\t\t<div class='rail'>\\","\t\t\t\t\t\t<div class='tail'></div>\\","\t\t\t\t\t\t<div class='toddler'></div>\\","\t\t\t\t\t</div>\\","\t\t\t\t\t<div class='value' unselectable='unselectable'></div>\\","\t\t\t\t</div>\\","\t\t\t</div>\\","\t\t\");","\t\t","\t\tthis.html($pattern);","\t\tthis.addClass(\"lightUI\");","\t\t","\t\tthis.find('>.trackbar').attr(\"id\", objID).addClass(flags.direct=='horizontal'?'horizontal':'vertical');","\t\t","\t\tDRAGGER.add(this.find('.toddler').bind({","\t\t\t'up.dragger': callback(this, function(){","\t\t\t\tthis.trigger('change.trackbar');","\t\t\t\treturn false;","\t\t\t}),","\t\t\t'down.dragger': callback(this, function(){","\t\t\t\treturn false;","\t\t\t}),","\t\t\t'move.dragger': callback(this, function(e, info){","\t\t\t\tvar flags = this.data('flags');","\t\t\t\tvar $trackbar = this.find('>.trackbar');","\t\t\t\tvar $rail = $trackbar.find('.rail');","\t\t\t\tvar $tail = $rail.find('>.tail');","\t\t\t\tvar $toddler = $rail.find('>.toddler');","\t\t\t\tvar $value = $trackbar.find('.value');","\t\t\t\tif (flags.direct == 'horizontal') {","\t\t\t\t\tif (info.left >=0 && info.left < $rail.width()) {","\t\t\t\t\t\tvar offset = 100*info.left/$rail.width();","\t\t\t\t\t\t$toddler.css({","\t\t\t\t\t\t\tleft: offset + '%'","\t\t\t\t\t\t});","\t\t\t\t\t\t$tail.width(offset + '%');","\t\t\t\t\t\t$value.text(Math.ceil(offset*(flags.maxval-flags.minval)/100+flags.minval) + flags.suffix);","\t\t\t\t\t}","\t\t\t\t} else {","\t\t\t\t\tif (info.top >=0 && info.top < $rail.height()) {","\t\t\t\t\t\tinfo.bottom = $rail.height() - info.top - 1;","\t\t\t\t\t\tvar offset = 100*info.bottom/$rail.height();","\t\t\t\t\t\t$toddler.css({","\t\t\t\t\t\t\tbottom: offset + '%'","\t\t\t\t\t\t});","\t\t\t\t\t\t$tail.height(offset + '%');","\t\t\t\t\t\t$value.text(Math.ceil(offset*(flags.maxval-flags.minval)/100+flags.minval) + flags.suffix);","\t\t\t\t\t}","\t\t\t\t}","\t\t\t\treturn false;","\t\t\t})","\t\t}));","\t\t","\t\tvar\tfieldval = function(value){","\t\t\tvar flags = this.data('flags');","\t\t\tvar $trackbar = this.find('>.trackbar');","\t\t\tvar $rail = $trackbar.find('.rail');","\t\t\tvar $tail = $rail.find('>.tail');","\t\t\tvar $toddler = $rail.find('>.toddler');","\t\t\tvar $value = $trackbar.find('.value');","\t\t\tvar offset = null;","\t\t\tif(is.set(value)){","\t\t\t\tif (value < flags.minval) value = flags.minval;","\t\t\t\tif (value > flags.maxval) value = flags.maxval;","\t\t\t\toffset = (value - flags.minval)*100/(flags.maxval - flags.minval);","\t\t\t\tif (flags.direct == 'horizontal') {","\t\t\t\t\t$toddler.css({","\t\t\t\t\t\tleft: offset + '%'","\t\t\t\t\t});","\t\t\t\t\t$tail.width(offset + '%');","\t\t\t\t} else {","\t\t\t\t\t$toddler.css({","\t\t\t\t\t\tbottom: offset + '%'","\t\t\t\t\t});","\t\t\t\t\t$tail.height(offset + '%');","\t\t\t\t}","\t\t\t\t$value.text(value + flags.suffix);","\t\t\t\treturn this;","\t\t\t}","\t\t\tif (flags.direct == 'horizontal') {","\t\t\t\toffset = 100*$toddler.position().left/$rail.width();","\t\t\t} else {","\t\t\t\toffset = 100*$toddler.position().bottom/$rail.height();","\t\t\t}","\t\t\treturn Math.ceil(offset*(flags.maxval-flags.minval)/100+flags.minval);","\t\t};","\t\t","\t\tfieldval.call(this, is.number(value)?value:flags.minval);","","\t\t//-----------------------------------------------------------------------","\t\t// Расширим возможности полученных копии новыми методами плагина (public)","\t\t//-----------------------------------------------------------------------","\t\tplugin.fn.extend({","\t\t\tfieldval: fieldval,","\t\t\tflags: function(){return this.data(\"flags\");},","\t\t\tenable: function(){","\t\t\t\tthis.find('>.trackbar').removeClass('disable');","\t\t\t\tDRAGGER.add(this.find('.toddler'));","\t\t\t\treturn this;","\t\t\t},","\t\t\tdisable: function(){","\t\t\t\tthis.find('>.trackbar').addClass('disable');","\t\t\t\tDRAGGER.remove(this.find('.toddler'));","\t\t\t\treturn this;","\t\t\t}","\t\t});","\t\treturn plugin(this);","\t}","})();","(function(){","\tvar pluginComboGrid = jQuery.sub();","","\t// Добавим плагин Select к оригинальной копии jQuery","\tjQuery.fn.lightUIComboGrid = function(flags){","\t\tif(is.unset(flags)) flags = {};","","\t\t//-----------------------------------------------------------------------","\t\t// Расширим возможности полученной копии новыми методами плагина (public)","\t\t//-----------------------------------------------------------------------","\t\tpluginComboGrid.fn.extend({","\t\t\tvalidate: function(){","\t\t\t\treturn this.getGrid().validate();","\t\t\t},","\t\t\tfieldval: function(value){","\t\t\t\treturn this.getGrid().fieldval(value);","\t\t\t},","\t\t\taddOption: function(obj){","\t\t\t\tvar $row = this.getGrid().addRow().row(\"last\");","\t\t\t\tif(is(\"Object\", obj)){","\t\t\t\t\tfor(var i in obj){","\t\t\t\t\t\t$row.col(i).html(lng(obj[i])).attr(\"langkey\", obj[i]);","\t\t\t\t\t}","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\tfor(var i=0; i<arguments.length; i++){","\t\t\t\t\t\t$col = $row.col(i);","\t\t\t\t\t\tif($col.length){","\t\t\t\t\t\t\tvalue = arguments[i];","\t\t\t\t\t\t\tif(is.unset(value)) value = \"\";","\t\t\t\t\t\t\t$col.html(lng(value)).attr(\"langkey\", value);","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t}","\t\t\t\treturn this;","\t\t\t},","\t\t\tcleanOptions: function(){","\t\t\t\tthis.getGrid().cleanTable();","\t\t\t\treturn this;","\t\t\t},","\t\t\tcleanTable: function(){","\t\t\t\tthis.getGrid().cleanTable();","\t\t\t\treturn this;","\t\t\t},","\t\t\tisEmpty: function(){","\t\t\t\treturn !this.find(\"input\").val().length;","\t\t\t},","\t\t\tisDisabled: function(){","\t\t\t\treturn this.find(\"input\").attr(\"disabled\");","\t\t\t},","\t\t\tflags: function(){return this.data(\"flags\");},","\t\t\tclean: function(){","\t\t\t\tthis.fieldval(\"\");","\t\t\t\treturn this;","\t\t\t},","\t\t\tgetGrid: function(){","\t\t\t\treturn this.data(\"grid\");","\t\t\t}","\t\t});","","\t\tvar $grid = this.lightUIGrid(flags.header, 0, {","\t\t\tcombobox: {","\t\t\t\ttype: flags.type,","\t\t\t\tindex: flags.index,","\t\t\t\tblank: flags.blank,","\t\t\t\tflags: {","\t\t\t\t\tmaxLength: flags.maxLength,","\t\t\t\t\tmandatory: flags.mandatory,","\t\t\t\t\tre: flags.re","\t\t}}});","\t\t","\t\tthis.data(\"grid\", $grid);","","\t\tvar $obj = pluginComboGrid(this);","\t\tthis.data(\"light_ui_input\", $obj);","","\t\tvar optionArray = flags.optionArray;","\t\tif(is.array(optionArray)){","\t\t\tfor(var i=0; i<optionArray.length; i++){","\t\t\t\tvar opt = optionArray[i];","\t\t\t\tif(is.array(opt)){","\t\t\t\t\t$obj.addOption.apply($obj, opt);","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\t$obj.addOption(opt);","\t\t\t\t}","\t\t\t}","\t\t}","","\t\treturn $obj;","\t}","})();","(function(){","","\tvar plugin = jQuery.sub();","","\t// Добавим наш плагин к оригинальной копии jQuery","\tjQuery.fn.lightUITextComment = function(textComment){","","\t\tvar pattern\t=\t\"<div class='title'>\"","\t\t\t\t\t+\t\"<div class='name'><div></div></div>\"","\t\t\t\t\t+\t\"</div>\";","","\t\tthis.addClass(\"lightUI textComment\");","\t\tthis.html(pattern);\t\t","","\t\tthis.find(\".name>div\").attr(\"langkey\", textComment);","","\t\tplugin.fn.extend({","\t\t\tsetTextComment: function(textComment){","\t\t\t\tif(is.string(textComment)){","\t\t\t\t\tthis.find(\".title>.name>div\")","\t\t\t\t\t\t.html(lng(textComment))","\t\t\t\t\t\t.attr(\"langkey\", textComment);","\t\t\t\t}","\t\t\t\treturn this;","\t\t\t},","\t\t});","","\t\treturn plugin(this).setTextComment(textComment);","\t}","})();","(function(){","","\t//-------------------------------------","\t// Делаем копию jQuery, используя sub()","\t//-------------------------------------","\tvar plugin = jQuery.sub();","","\t// Добавим наш плагин к оригинальной копии jQuery","\tjQuery.fn.lightUIButton = function(name, options){","","\t\tif(is.unset(options)) options = {};","","\t\tvar pattern\t=\t\"<div class='button normal unselectable'>\";","\t","\t\tif(is.set(options.icon)){","\t\t\tpattern\t+=\t\"<div class='icon'>\";","\t\t\tpattern\t+=\t\"<img src='\" + options.icon + \"' />\";","\t\t\tpattern\t+=\t\"</div>\";","\t\t}","\t","\t\tpattern\t\t+=\t\"<div class='title' unselectable='on' langkey='\" + name + \"'>\" + lng(name) + \"</div>\";","\t\tpattern\t\t+=\t\"<div class='clear'></div>\";","\t\tpattern\t\t+=\t\"</div>\";","","\t\tthis.html(pattern);","\t\tthis.addClass(\"lightUI\");","","\t\tif(is.set(options.iconRightSide)){","\t\t\tthis.find(\".icon\").css('float', 'right');","\t\t}","","\t\tthis.find(\".button\").mouseenter(function(){","\t\t\t$(this).not('.disable').addClass('hover');","\t\t}).mouseleave(function(){","\t\t\t$(this).not('.disable').removeClass('hover');","\t\t}).mousedown(function(){","\t\t\t$(this).not('.disable').addClass('push');","\t\t}).mouseup(function(){","\t\t\t$(this).not('.disable').removeClass('push');","\t\t}).click(function(event){","\t\t\tif(!$(this).hasClass('disable')){","\t\t\t\t$(this).trigger(\"click.button\");","\t\t\t\t$(this).trigger(\"button.click\");","\t\t\t}","\t\t\tevent.stopPropagation();","\t\t});\t","","\t\t//-----------------------------------------------------------------------","\t\t// Расширим возможности полученных копии новыми методами плагина (public)","\t\t//-----------------------------------------------------------------------","\t\tplugin.fn.extend({","\t\t\tenable: function(){","\t\t\t\tthis.find(\".button\").removeClass('disable').addClass('normal');","\t\t\t\treturn this;","\t\t\t},","\t\t\tdisable: function(){","\t\t\t\tthis.find(\".button\").removeClass('normal push').addClass('disable');","\t\t\t\treturn this;","\t\t\t},","\t\t\ttitle: function(name){","\t\t\t\tif(is.string(name)){","\t\t\t\t\tthis.find(\".title\").text(lng(name));","\t\t\t\t\treturn this;","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\treturn this.find(\".title\").text();","\t\t\t\t}","\t\t\t},","\t\t\tclick: function(){","\t\t\t\tthis.find(\".button\").trigger(\"click\");","\t\t\t\treturn this;","\t\t\t}","\t\t});","\t\treturn plugin(this);","\t}","})();","(function(){","","\tvar plugin = jQuery.sub();","","\t// Добавим наш плагин к оригинальной копии jQuery","\tjQuery.fn.lightUISection = function(name, comment){","","\t\tvar pattern\t=\t\"<div class='title'>\"","\t\t\t\t\t+\t\"<div class='name'><div></div></div>\"","\t\t\t\t\t+\t\"<div class='comment' style='display: none'><div></div></div>\"","\t\t\t\t\t+\t\"</div>\"","\t\t\t\t\t+\t\"<div class='content'></div>\";","","\t\tthis.addClass(\"lightUI section\");","\t\tthis.html(pattern);","\t\t","\t\tif(comment) this.find(\".comment\").show();","\t\t","","\t\tthis.find(\".name>div\").attr(\"langkey\", name);","\t\tthis.find(\".comment>div\").attr(\"langkey\", comment);","","","\t\tplugin.fn.extend({","\t\t\tsetName: function(name){","\t\t\t\tif(is.string(name)){","\t\t\t\t\tthis.find(\".title>.name>div\")","\t\t\t\t\t\t.html(lng(name))","\t\t\t\t\t\t.attr(\"langkey\", name);","\t\t\t\t}","\t\t\t\treturn this;","\t\t\t},","\t\t\tsetComment: function(comment){","\t\t\t\tif(is.string(comment)){","\t\t\t\t\tthis.find(\".title>.comment>div\")","\t\t\t\t\t\t.html(lng(comment))","\t\t\t\t\t\t.attr(\"langkey\", comment);","\t\t\t\t\tthis.find(\".title>.comment\").show();","\t\t\t\t}","\t\t\t\treturn this;","\t\t\t},","\t\t\tsetContent: function(content){","\t\t\t\tif(is.string(content)){","\t\t\t\t\tthis.find(\".content\").html(content);","\t\t\t\t}","\t\t\t\treturn this;","\t\t\t}","\t\t});","","\t\treturn plugin(this).setName(name).setComment(comment);","\t}","})();","","(function(){","\t","\t//-------------------------------------","\t// Делаем копию jQuery, используя sub()","\t//-------------------------------------","\tvar plugin = jQuery.sub();","","\t//-----------------------------------------------------------------------","\t// Расширим возможности полученных копии новыми методами плагина (public)","\t//-----------------------------------------------------------------------","\tplugin.fn.extend({","\t\taddItem: function(name, html){","\t\t\tif(is.unset(html)) html = \"\";","\t\t\tif(name.match(/^[0-9a-zA-Z]+$/)){","\t\t\t\tvar nameClass = \"__iam__\" + name;","\t\t\t}","\t\t\telse{","\t\t\t\tvar id = gID.get();","\t\t\t\tvar nameClass = \"__iam__\" + id;","\t\t\t\tthis.data(\"__iam__\" + name, \"__iam__\" + id);","\t\t\t}","\t\t\tvar isEmpty = !this.find(\"li:last\").removeClass(\"last\").length;","\t\t\tif(isEmpty){","\t\t\t\tthis.append(\"<ul><li>\" + html + \"</li></ul>\");","\t\t\t\tif(this.is(\"li\")){","\t\t\t\t\tthis.prepend(\"<div class='hitarea'></div>\")","\t\t\t\t\t\t.addClass(\"collapsed\")","\t\t\t\t\t\t.find(\">ul\").hide();","","\t\t\t\t\tthis.find(\">.hitarea\").bind(\"click\", function(event){","\t\t\t\t\t\tif(event.target == this){","\t\t\t\t\t\t\t$(this).trigger(\"li.toggle\");","\t\t\t\t\t\t}","\t\t\t\t\t});","\t\t\t\t\tthis.bind(\"li.toggle\", function(event){","\t\t\t\t\t\tevent.stopPropagation();","\t\t\t\t\t\t$(this).lightUIList().toggleList();","\t\t\t\t\t});","\t\t\t\t\t\t","\t\t\t\t\t\t\t\t\t\t\t","\t\t\t\t\t\t\t\t\t\t\t","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\tthis.addClass(\"expanded\");","\t\t\t\t}","\t\t\t\tthis.find(\"li:last\").addClass(\"last\")","\t\t\t\t\t\t\t\t\t.addClass(nameClass)","\t\t\t\t\t\t\t\t\t.data(\"options\", this.data(\"options\"));","\t\t\t}","\t\t\telse{","\t\t\t\tthis.find(\"ul\").append(\"<li>\" + html + \"</li>\")","\t\t\t\t\t.find(\"li:last\").addClass(\"last\")","\t\t\t\t\t\t\t\t\t.addClass(nameClass)","\t\t\t\t\t\t\t\t\t.data(\"options\", this.data(\"options\"));","","\t\t\t}","\t\t\treturn this;","\t\t},","\t\tchildItem: function(name){","\t\t\tvar arr = name.split(\"/\");","\t\t\tvar s = \"\";","\t\t\tvar nameClass;","\t\t\tfor(var i=0;i<arr.length;i++){","\t\t\t\tnameClass = \"__iam__\" + arr[i];","\t\t\t\tif(!arr[i].match(/^[0-9a-zA-Z]+$/)){","\t\t\t\t\tnameClass = this.data(\"__iam__\" + arr[i]);","\t\t\t\t}","\t\t\t\ts += \">ul>li.\" + nameClass;","\t\t\t}","\t\t\t","\t\t\treturn this.find(s).lightUIList();","\t\t},","\t\tparentItem: function(){","\t\t\tif(this.is(\"li\")){","\t\t\t\treturn this.parents(\"ul\").eq(0).parent().lightUIList();","\t\t\t}","\t\t\telse{","\t\t\t\treturn $();","\t\t\t}","\t\t},","\t\texpandedItem: function(){","\t\t\treturn this.find(\">ul>li.expanded\").lightUIList();","\t\t},","\t\tcollapsedItem: function(){","\t\t\treturn $parent.find(\">ul>li.collapsed\").lightUIList();","\t\t},","\t\texpandList: function(){","\t\t\tvar $parent = this.parentItem();","\t\t\tif($parent.length && this.listOptions().unique){","\t\t\t\t$parent.expandedItem().collapseList();","\t\t\t}","\t\t\tthis.find(\">ul\").show(this.listOptions().speed);","\t\t\tthis.removeClass(\"collapsed\")","\t\t\t\t.addClass(\"expanded\");","\t\t\treturn this;","\t\t},","\t\tcollapseList: function(){","\t\t\tthis.find(\">ul\").hide(this.listOptions().speed);","\t\t\tthis.removeClass(\"expanded\")","\t\t\t\t.addClass(\"collapsed\");","\t\t\treturn this;","\t\t},","\t\ttoggleList: function(){","\t\t\tif(this.hasClass(\"expanded\")){","\t\t\t\tthis.collapseList();","\t\t\t}","\t\t\telse{","\t\t\t\tthis.expandList();","\t\t\t}","\t\t\treturn this;","\t\t},","\t\tlistOptions: function(options){","\t\t\tif(is.set(options)){","\t\t\t\tthis.data(\"options\", options);","\t\t\t\treturn this;","\t\t\t}","\t\t\telse{","\t\t\t\tvar options = this.data(\"options\");","\t\t\t\treturn options?options:{};","\t\t\t}","\t\t},","\t\tcleanList: function(){","\t\t\tthis.unbind(\"li.toggle\");","\t\t\tthis.find(\".hitarea\").remove();","\t\t\tthis.find(\"ul\").eq(0).remove();","\t\t\treturn this;","\t\t}","\t});","","\t// Добавим наш плагин к оригинальной копии jQuery","\tjQuery.fn.lightUIList = function(options){","","\t\tvar pluginInstance = this.data(\"lightUIList\")","\t\tif(pluginInstance) return pluginInstance;","\t\t","\t\tif(!this.is(\"li\")){","\t\t\tthis.addClass(\"lightUI list\");","","\t\t\tif(is.set(options)){","\t\t\t\tthis.data(\"options\", options);","\t\t\t}","","\t\t}","","\t\tthis.bind(\"click\", function(event){","\t\t\tif(event.target == this){","\t\t\t\tvar event0 = jQuery.Event(\"li.click\");","\t\t\t\tevent0.collapseMenu = function(){","\t\t\t\t\t$(this.target).parents(\".lightUI\").eq(0).hide(\"fast\");","\t\t\t\t}","\t\t\t\tevent0.menuTarget = function(){","\t\t\t\t\treturn $(this.target).parents(\".lightUI\").data(\"menuTarget\");","\t\t\t\t}","\t\t\t\t$(this).trigger(event0);","\t\t\t}","\t\t});","\t\t","\t\tpluginInstance = plugin(this)","\t\tthis.data(\"lightUIList\", pluginInstance);","\t\t","\t\treturn pluginInstance;","\t}","\t","","\tjQuery.fn.contextMenu = function(name){","","\t\tvar $list = this.data(\"contextMenu\");","\t\tif(!is.jquery($list) && is.unset(name)){","\t\t\tvar id = \"context_menu_\" + gID.get();","\t\t\t$(\"body\").append(\"<div id='\" + id + \"'></div>\");","\t","\t\t\t$list = $(\"#\" + id).lightUIList({unique: true})","\t\t\t\t\t\t\t\t.addClass(\"context\")","\t\t\t\t\t\t\t\t.hide();","\t\t\t\t\t\t\t\t","\t\t\t","\t\t\t$list.live(\"mouseleave\", function(event){","\t\t\t\tevent.stopPropagation();","\t\t\t\t$(this).find(\">li\").lightUIList().collapseList();","\t\t\t}).live(\"contextmenu\", function(event){","\t\t\t\tevent.preventDefault();","\t\t\t\tevent.stopImmediatePropagation();","\t\t\t\treturn false;\t\t\t\t\t\t\t\t","\t\t\t}).bind(\"click\", function(event){","\t\t\t\tevent.stopPropagation();","\t\t\t}).find(\"li\").live(\"mouseenter\", function(event){","\t\t\t\tevent.stopPropagation();","\t\t\t\tif($(this).is(\".collapsed\")){","\t\t\t\t\t$(this).lightUIList()","\t\t\t\t\t\t.expandList()","\t\t\t\t\t\t.find(\">ul\").css(\"left\", ($(this).parents(\"ul\").eq(0).width() - 20) + \"px\");","\t\t\t\t}","\t\t\t}).live(\"mouseleave\", function(event){","\t\t\t\tif($(this).is(\".expanded\")){","\t\t\t\t\t$(this).lightUIList()","\t\t\t\t\t\t.collapseList();","\t\t\t\t}","\t\t\t});","\t\t\t","\t\t\tthis.bind(\"contextmenu\", function(event){","\t\t\t\tevent.preventDefault();","\t\t\t\tevent.stopImmediatePropagation();","\t\t\t\tvar $menu = $(this).data(\"contextMenu\");","\t\t\t\tif($menu.is(\":hidden\")){","\t\t\t\t\t$menu.show(\"fast\")","\t\t\t\t\t\t.offset({top: event.pageY, left: event.pageX})","\t\t\t\t\t\t.data(\"menuTarget\", event.target);","\t\t\t\t\twindow.contextMenuActive = $menu;","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\t$menu.hide(\"fast\");","\t\t\t\t\twindow.contextMenuActive = null;","\t\t\t\t}","\t\t\t\treturn false;\t\t\t\t","\t\t\t}).data(\"contextMenu\", $list);","\t\t\t","\t\t\t$(\"body\").click(function(){","\t\t\t\tif(is.set(window.contextMenuActive)){","\t\t\t\t\twindow.contextMenuActive.hide(\"fast\");","\t\t\t\t\twindow.contextMenuActive = null;","\t\t\t\t}","\t\t\t}).bind(\"contextmenu\", function(event){","\t\t\t\tif(is.set(window.contextMenuActive)){","\t\t\t\t\twindow.contextMenuActive.hide(\"fast\");","\t\t\t\t\twindow.contextMenuActive = null;","\t\t\t\t}","\t\t\t});","\t\t\t\t","\t\t}","\t\telse if(is.set(name)){","\t\t\tif(is.jquery($list)){","\t\t\t\t$list = $list.childItem(name);","\t\t\t}","\t\t\telse{","\t\t\t\t$list = $();","\t\t\t}","\t\t}","","\t\treturn $list;","\t}","\t","})();","(function(){","\t\t","\t//-------------------------------------","\t// Делаем копии jQuery, используя sub()","\t//-------------------------------------","\tvar plugin = jQuery.sub();\t\t//для самого плагина ","","\t// Добавим наш плагин к оригинальной копии jQuery","\tjQuery.fn.lightUIWizard = function(inx, n){","\t\t","\t\tvar addStep = function(arg){","\t\t\tif(is.string(arg)){","\t\t\t\tvar arr = arg.split(\" \");","\t\t\t\tfor(var i=0; i<arr.length; i++){","\t\t\t\t\tthis.append(pattern)","\t\t\t\t\t\t.find(\"div:last\")","\t\t\t\t\t\t.addClass(nameClass + arr[i]);","\t\t\t\t}","\t\t\t}","\t\t\telse{","\t\t\t\tthis.append(pattern);","\t\t\t}","\t\t\treturn this;","\t\t}","\t\t","\t\tvar addFirstStep = function(arg){","\t\t\taddStep.call(this, arg);","\t\t\tif(!this.getActiveStep().length){","\t\t\t\tthis.switchStep(\"first\");","\t\t\t}","\t\t\tthis.addStep = addStep;","\t\t\treturn this;","\t\t}","\t\t","\t\t//-----------------------------------------------------------------------","\t\t// Расширим возможности полученных копий новыми методами плагина (public)","\t\t//-----------------------------------------------------------------------","\t\tplugin.fn.extend({","\t\t\taddStep: addStep = function(arg){","\t\t\t\tif(is.string(arg)){","\t\t\t\t\tvar arr = arg.split(\" \");","\t\t\t\t\tfor(var i=0; i<arr.length; i++){","\t\t\t\t\t\tthis.append(pattern)","\t\t\t\t\t\t\t.find(\"div:last\")","\t\t\t\t\t\t\t.addClass(nameClass + arr[i]);","\t\t\t\t\t}","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\tthis.append(pattern);","\t\t\t\t}","\t\t\t\tif(!this.getActiveStep().length){","\t\t\t\t\tthis.switchStep(\"first\");","\t\t\t\t}","\t\t\t\treturn this;","\t\t\t},","\t\t\tswitchStep: function(arg, effect){","\t\t\t\tvar $cur = this.find(\">div.active\");","\t\t\t\tvar $next;","","\t\t\t\tif(arg == \"next\"){","\t\t\t\t\t$next = this.getStep(\"next\");","\t\t\t\t}","\t\t\t\telse if(arg == \"prev\"){","\t\t\t\t\t$next = this.getStep(\"prev\");","\t\t\t\t}","\t\t\t\telse if(arg == \"last\" || is.unset(arg)){","//\t\t\t\t\t$next = this.find(\">(div:not(.skiped)):last\");","\t\t\t\t\t$next = this.getStep(\"last\");","\t\t\t\t}","\t\t\t\telse if(arg == \"first\"){","//\t\t\t\t\t$next = this.find(\">(div:not(.skiped)):first\");","\t\t\t\t\t$next = this.getStep(\"first\")\t;","\t\t\t\t}","\t\t\t\telse if(is.string(arg)){","\t\t\t\t\t$next = this.find(\".\" + nameClass + arg);","\t\t\t\t}","\t\t\t\telse if(is.number(arg)){","\t\t\t\t\t$next = this.find(\">div\").eq(arg);","\t\t\t\t}","","\t\t\t\tif(is.jquery($next) && $next.length){","\t\t\t\t\tif(is.func(effect)){","\t\t\t\t\t\teffect.call(this, $cur, $next);","\t\t\t\t\t}","\t\t\t\t\telse{","\t\t\t\t\t\t$cur.hide().removeClass(\"active\");","\t\t\t\t\t\t$next.show().addClass(\"active\");","\t\t\t\t\t}","\t\t\t\t}","\t\t\t\t","\t\t\t\treturn this;","\t\t\t},","\t\t\tremoveStep: function(arg){","\t\t\t\tif(arg == \"next\"){","\t\t\t\t\tthis.getStep(\"next\").remove();","\t\t\t\t}","\t\t\t\telse if(arg == \"prev\"){","\t\t\t\t\tthis.getStep(\"prev\").remove();","\t\t\t\t}","\t\t\t\telse if(arg == \"last\" || is.unset(arg)){","\t\t\t\t\tthis.getStep(\"last\").remove();","\t\t\t\t}","\t\t\t\telse if(arg == \"first\"){","\t\t\t\t\tthis.getStep(\"first\").remove();","\t\t\t\t}","\t\t\t\telse if(is.string(arg)){","\t\t\t\t\tthis.find(\".\" + nameClass + arg).remove();","\t\t\t\t}","\t\t\t\telse if(is.number(arg)){","\t\t\t\t\tthis.find(\">div\").eq(arg).remove();","\t\t\t\t}","\t\t\t\tif(!this.find(\">div\").length){","\t\t\t\t\tthis.addStep = addFirstStep;","\t\t\t\t}","\t\t\t\treturn this;","\t\t\t},","\t\t\tgetStep: function(arg){","\t\t\t\tif(arg == \"next\"){","\t\t\t\t\tvar $step = this.find(\">div.active\").next();","\t\t\t\t\twhile($step.hasClass(\"skiped\")){","\t\t\t\t\t\t$step = $step.next();","\t\t\t\t\t}","\t\t\t\t\treturn $step;","\t\t\t\t}","\t\t\t\telse if(arg == \"prev\"){","\t\t\t\t\tvar $step = this.find(\">div.active\").prev();","\t\t\t\t\twhile($step.hasClass(\"skiped\")){","\t\t\t\t\t\t$step = $step.prev();","\t\t\t\t\t}","\t\t\t\t\treturn $step;","\t\t\t\t}","\t\t\t\telse if(arg == \"last\" || is.unset(arg)){","\t\t\t\t\treturn this.find(\">div:not(.skiped):last\");","\t\t\t\t}","\t\t\t\telse if(arg == \"first\"){","\t\t\t\t\treturn this.find(\">div:not(.skiped):first\");","\t\t\t\t}","\t\t\t\telse if(is.string(arg)){","\t\t\t\t\treturn this.find(\".\" + nameClass + arg);","\t\t\t\t}","\t\t\t\telse if(is.number(arg)){","\t\t\t\t\treturn this.find(\">div\").eq(arg);","\t\t\t\t}","\t\t\t\treturn $();","\t\t\t},","\t\t\tgetStepIndex: function(arg){","\t\t\t\treturn this.getStep(arg).index();","\t\t\t},","\t\t\tgetActiveIndex: function(){","\t\t\t\treturn this.getActiveStep().index();","\t\t\t},","\t\t\tgetActiveStep: function(){","\t\t\t\treturn this.find(\">div.active\");","\t\t\t},","\t\t\tskipStepOn: function(arg){","\t\t\t\tthis.getStep(arg).addClass(\"skiped\").removeClass(\"active\").hide();","\t\t\t\treturn this;","\t\t\t},","\t\t\tskipStepOff: function(arg){","\t\t\t\tthis.getStep(arg).removeClass(\"skiped\");","\t\t\t\treturn this;","\t\t\t},","\t\t\tisStepLast: function(arg){","\t\t\t\tvar $step = this.getStep(arg).next();","\t\t\t\twhile($step.hasClass(\"skiped\")){","\t\t\t\t\t$step = $step.next();","\t\t\t\t}","\t\t\t\treturn !$step.length;","\t\t\t},","\t\t\tisStepFirst: function(arg){","\t\t\t\tvar $step = this.getStep(arg).prev();","\t\t\t\twhile($step.hasClass(\"skiped\")){","\t\t\t\t\t$step = $step.prev();","\t\t\t\t}","\t\t\t\treturn !$step.length;","\t\t\t}","\t\t});","\t\t","\t\tvar $plugin = plugin(this);","\t\t","\t\tvar pattern = \"<div style='display: none'></div>\";","\t\tvar nameClass = \"__iam__\";","\t\t","\t\tif(is.number(n)){","\t\t\tvar n0 = this.find(\">div\").length;","\t\t\tif(n0 < n){","\t\t\t\tfor(var i=0; i<(n-n0); i++){","\t\t\t\t\t$plugin.addStep();","\t\t\t\t}","\t\t\t}","\t\t}\t\t\t\t","\t\t","\t\tif(is.set(inx)){","\t\t\t$plugin.switchStep(inx);","\t\t}","\t\telse{","\t\t\tif(!$plugin.getActiveStep().length){","\t\t\t\t$plugin.switchStep(\"first\");","\t\t\t}","\t\t}","","\t\treturn $plugin;","\t}","","})();","","function node(options){","","\tthis.options = options?options:{};","","\tnode.prototype.add = function(obj, alias, arg3){","\t\tthis.children.push(obj);","\t\tobj.parent = this;","\t\tobj.root = this.root;","\t\tif(alias){","\t\t\tthis.childrenRefs[alias] = obj;","\t\t}","\t\tif(is.set(arg3)){","\t\t\tthis.locate(this.children.length - 1, arg3);","\t\t}","\t\treturn this;","\t}","","\tnode.prototype.child = function(i){","\t\tif(is.number(i)){","\t\t\treturn getChild.call(this, i);","\t\t}","\t\telse if(is.string(i)){","\t\t\tvar arr = i.split(\"/\");","\t\t\tvar begin = 0;","\t\t\tvar obj = this;","\t\t\tif(!arr[0].length){","\t\t\t\tbegin = 1;","\t\t\t\tobj = this.root;","\t\t\t}","\t\t\tvar num, item;","\t\t\tfor(var ii=begin;ii<arr.length;ii++){","\t\t\t\titem = arr[ii];","\t\t\t\tnum = Number(item);","\t\t\t\tif(num.toString() == arr[ii]){","\t\t\t\t\tobj = getChild.call(obj, num);","\t\t\t\t}","\t\t\t\telse if(item == \"..\"){","\t\t\t\t\tobj = obj.parent;","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\tobj = getChild.call(obj, arr[ii]);","\t\t\t\t}","\t\t\t}","\t\t\treturn obj;","\t\t}","\t\treturn null;","\t}","\t","\tnode.prototype.get = node.prototype.child;","\t","\tnode.prototype.setAlias = function(i, alias){","\t\tthis.childrenRefs[alias] = this.child(i);","\t\treturn this;","\t}","\t","\tnode.prototype.getAlias = function(){","\t\tvar brothers = this.parent.childrenRefs;","\t\tfor(var i in brothers){","\t\t\tif(brothers[i] === this){","\t\t\t\treturn i;","\t\t\t}","\t\t}","\t\treturn null;","\t}","\t","\tnode.prototype.replace = function(i, obj){","\t\tif(is.number(i)){","\t\t\tvar child = this.children[i];","\t\t\tvar parent = this;","\t\t\tfor(var j in this.childrenRefs){","\t\t\t\tif(this.childrenRefs[j] == child){","\t\t\t\t\tthis.childrenRefs[j] = obj;","\t\t\t\t\tbreak;","\t\t\t\t}","\t\t\t}","\t\t\tthis.children[i] = obj;","\t\t}","\t\telse if(is.string(i)){","\t\t\tvar child = this.get(i);","\t\t\tvar parent = child.get(\"..\");","\t\t\tvar alias = child.getAlias();","\t\t\tfor(var j in parent.children){","\t\t\t\tif(child == parent.children[j]){","\t\t\t\t\tparent.children[j] = obj;","\t\t\t\t\tbreak;","\t\t\t\t}","\t\t\t}","\t\t\tparent.childrenRefs[alias] = obj;","\t\t}","\t\tif(obj instanceof node && child instanceof node){","\t\t\tobj.parent = parent;","\t\t\tobj.boxid = child.boxid;","\t\t\t","\t\t\tif(child.$box.isRendered()){","\t\t\t\tobj.locate(child.$outerBox).deep.updateView();","\t\t\t}","\t\t}\t\t\t","\t\treturn this;","\t}","","\tnode.prototype.set = function(obj, i, arg3){","\t\tif(is.set(this.get(i))){","\t\t\tthis.replace(i, obj);","\t\t}","\t\telse if(is.string(i)){","\t\t\tthis.add(obj, i, arg3);","\t\t}","\t\treturn this;","\t}","\t","\tnode.prototype.index = function(){","\t\tvar arr = this.parent.children;","\t\tfor(var i=0; i<arr.length; i++){","\t\t\tif(arr[i] == this){","\t\t\t\treturn i;","\t\t\t}","\t\t}","\t\treturn -1;","\t}","\t","\tnode.prototype.emit = function(arg){","\t\tif(is.object(arg)){","\t\t\tvar status = arg;","\t\t\tstatus.target = this;","\t\t\tvar type = status.type;","\t\t}","\t\telse{","\t\t\tvar type = arg;","\t\t\tvar status = {","\t\t\t\ttarget: this,","\t\t\t\ttype: type,","\t\t\t\tbubbling: true","\t\t\t}","\t\t}","\t\tif(is.set(type)){","\t\t\tvar event = this.events[type];","\t\t\tvar args = [status];","\t\t\targs = args.concat(Array.prototype.slice.call(arguments, 1));","\t\t\tcallHandlers.apply(this, args);","\t\t}","\t\treturn this;","\t}","\t","\tnode.prototype.bind = function(typeList, handler){","\t\tif(is.unset(typeList)) return this;","\t\tvar arr = typeList.split(\" \");","\t\tfor(var i=0; i<arr.length; i++){","\t\t\tvar type = arr[i];","\t\t\tif(!is.object(this.events[type])){","\t\t\t\tvar event = this.events[type] = {};","\t\t\t\tevent.handlers = [];","\t\t\t}","\t\t\tthis.events[type].handlers.push(handler);","\t\t}","\t\treturn this;","\t}","\t","\tnode.prototype.unbind = function(type, handler){","\t\tif(is.string(type)){","\t\t\tif(is.func(handler)){","\t\t\t\tvar event = this.events[type];","\t\t\t\tfor(var i in event.handlers){","\t\t\t\t\tif(event.handlers[i] == handler){","\t\t\t\t\t\tevent.handlers[i] = null;","\t\t\t\t\t\tbreak;","\t\t\t\t\t}","\t\t\t\t}","\t\t\t}","\t\t\telse{","\t\t\t\tdelete this.events[type];","\t\t\t}","\t\t}","\t\telse{","\t\t\tthis.events = {};","\t\t}","\t\treturn this;","\t}","","\tnode.prototype.listen = function(path, type, handler){","\t\tvar callback = context(this).callback(handler);","\t\tthis.listeners.push({handler: handler, callback: callback});","\t\tthis.get(path).bind(type, callback);","\t\treturn this;","\t}","","\tnode.prototype.unbindListener = function(path, type, handler){","\t\tvar listeners = this.listeners;","\t\tvar obj;","\t\tfor(var i in listeners){","\t\t\tobj = listeners[i];","\t\t\tif(is.set(obj) && obj.handler == handler){","\t\t\t\tthis.get(path).unbind(type, obj.callback);","\t\t\t\tdelete obj;","\t\t\t\tbreak;","\t\t\t}","\t\t}","\t}","\t","\tnode.prototype.updateView = function(phase){","\t\tif(phase == \"forward\"){","","\t\t\tif(!this.$outerBox.isRendered()){","\t\t\t\tif(this.parent && this.parent.$box.length){","\t\t\t\t\tvar $pbox = this.parent.$box;","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\tvar $pbox = $(\"body\");","\t\t\t\t}","\t\t\t\tthis.$outerBox = $pbox.append(\"<div class='nodebox'></div>\").find(\"div.nodebox:last\");","\t\t\t}","\t\t\t","\t\t\tvar id = this.$outerBox.attr(\"id\");","\t\t\tif(is.set(id) && id.length){","\t\t\t\tthis.boxid = this.$outerBox.attr(\"id\");","\t\t\t}","\t\t\telse{","\t\t\t\tthis.$outerBox.attr(\"id\", this.id);","\t\t\t}","\t\t\t","\t\t\tthis.$outerBox.html(\"<div class='nodecontent'></div>\");","\t\t\tif(!this.$buttonBar.isRendered()){","\t\t\t\tthis.$outerBox.append(\"<div class='buttonbar' id='\" + this.boxid + \"ButtonBar'></div>\");","\t\t\t\tthis.$buttonBar = $(\"#\" + this.boxid + \"ButtonBar\");","\t\t\t}","","\t\t\tif(!this.parent) this.$outerBox.data(\"rootNode\", this).attr(\"rootNode\", \"yes\");","\t\t\t","\t\t\t//Текущий бокс для содержимого. Он может быть перезаписан производным классом","\t\t\tthis.$box = this.$innerBox = this.$outerBox.find(\">.nodecontent\");","","\t\t\tif(this.options.hidden) this.hide();","\t\t\t","\t\t}","\t\treturn this;","\t};","\t","\tnode.prototype.toHTML = function(){","\t\tif(!this.$box.isRendered()){","\t\t\tthis.deep.updateView();","\t\t}","\t\treturn \"<div class='nodebox'>\" + this.$outerBox.html() + \"</div>\";","\t}","\t","\tnode.prototype.jQuery = function(i){","\t\tif(is.set(i)){","\t\t\treturn this.child(i).$box;","\t\t}","\t\telse{","\t\t\treturn this.$box;","\t\t}","\t}","\t","\tnode.prototype.locate = function(arg1, arg2){","\t\tif(is.set(arg2)){","\t\t\tif(is.number(arg1) || is.string(arg1)){","\t\t\t\tif(is.jquery(arg2)){","\t\t\t\t\tthis.child(arg1).$outerBox = arg2;","\t\t\t\t}","\t\t\t\telse if(is.string(arg2)){","\t\t\t\t\tthis.child(arg1).$outerBox = this.$box.find(arg2);","\t\t\t\t}","\t\t\t\t","\t\t\t}","\t\t\telse if(is.object(arg1)){","\t\t\t\tfor(var i in arg1){","\t\t\t\t\tif(is.jquery(arg2)){","\t\t\t\t\t\tthis.child(i).$outerBox = arg1[i];","\t\t\t\t\t}","\t\t\t\t\telse if(is.string(arg2)){","\t\t\t\t\t\tthis.child(i).$outerBox = this.$box.find(arg1[i]);","\t\t\t\t\t}","\t\t\t\t}","\t\t\t}","\t\t}","\t\telse{","\t\t\tif(is.jquery(arg1)){","\t\t\t\tthis.$outerBox = arg1;","\t\t\t}","\t\t\telse if(is.string(arg1)){","\t\t\t\tthis.$outerBox = $(arg1);","\t\t\t}","\t\t}","\t\treturn this;","\t}","\t","\tnode.prototype.addButton = function(name, options){","\t\tvar $buttonBar = this.$buttonBar;","\t\tif(is.jquery($buttonBar)){","\t\t\tthis.buttons[name] = $buttonBar.append(\"<div class='buttonbox'></div>\")","\t\t\t\t\t\t\t\t\t\t\t.find(\"div.buttonbox:last\")","\t\t\t\t\t\t\t\t\t\t\t.lightUIButton(name, options);","\t\t}","\t\treturn this;","\t}","\t","\tnode.prototype.getButton = function(name){","\t\treturn this.buttons[name];","\t}","\t","\tnode.prototype.cleanButtonBar = function(){","\t\tthis.buttons = [];","\t\tthis.$buttonBar.find(\"*\").remove();","\t\treturn this;","\t}","","\tnode.prototype.initForm = function(){","\t\tthis.children = [];","\t\tthis.childrenRefs = {};","\t\treturn this;","\t}","","\tnode.prototype.startForm = node.prototype.initForm;","\t","\tnode.prototype.endForm = function(){","\t\tvar child;","\t\tfor(var i=0; i<this.children.length; i++){","\t\t\tchild = this.get(i);","\t\t\tchild.emit({type: \"endform\", bubbling: false}, child.val());","\t\t}","\t\treturn this;","\t}","\t\t","\tnode.prototype.buttonBar = function($obj){","\t\tif(is.jquery($obj)){","\t\t\tthis.$buttonBar = $obj;","\t\t\treturn this;","\t\t}","\t\telse{","\t\t\treturn this.$buttonBar;","\t\t}","\t}","\t","\tnode.prototype.hide = function(){","\t\tthis.options.hidden = true;","\t\tthis.$outerBox.hide();","\t\treturn this;","\t}","","\tnode.prototype.show = function(){","\t\tthis.options.hidden = false;","\t\tthis.$outerBox.show();","\t\treturn this;","\t}","\t","\tnode.prototype.nchild = function(){","\t\treturn this.children.length;","\t}","","\tnode.prototype.self = this;","\t","\tnode.prototype.val = function(){};","\t","\tthis.jq = null;","\tthis.model = {};","\tthis.s = null;","\tthis.parent = null;","\tthis.events = {};","\tthis.listeners = [];","\tthis.bubbling = true;","\tthis.$box = this.$outerBox = this.$innerBox = $();","\tthis.boxid = gID.get();\t//id DOM объекта (может отличаться от this.id если заданный this.$box уже имеет id)","\tthis.id = this.boxid;\t//id объекта","\tthis.buttons = {};","\tthis.$buttonBar = $();","\tthis.root = this;","\t","\tthis.initForm();","\t","\tvar callHandlers = function(status){","\t\tvar event = this.events[status.type];","\t\tif(is.object(event)){","\t\t\tfor(var i in event.handlers){","\t\t\t\tif(is.func(event.handlers[i])){","\t\t\t\t\tevent.handlers[i].apply(this, arguments);","\t\t\t\t}","\t\t\t}","\t\t}","\t\tif(status.bubbling){","\t\t\tif(this.parent instanceof node) callHandlers.apply(this.parent, arguments);","\t\t}","\t}","\t","\tvar getChild = function(i){","\t\tif(is.number(i)){","\t\t\treturn this.children[i];","\t\t}","\t\telse if(is.string(i)){","\t\t\treturn this.childrenRefs[i];","\t\t}","\t\treturn null;","\t}","\t","\t","\tthis.deep = function(methodName, arg1){","\t\tvar method = this[methodName];","\t\tmethod = is.func(method)?method:function(){};","\t\t","\t\tif(is.object(arg1)){","\t\t\tvar status = arg1;","\t\t\tvar phase = status.phase?status.phase:\"back\"","\t\t}","\t\telse if(is.string(arg1)){","\t\t\tvar phase = arg1;","\t\t\tvar status = arg1 = {phase: phase};","\t\t}","\t\telse{","\t\t\tvar phase = \"back\";","\t\t\tvar status = arg1 = {phase: phase};","\t\t}","","\t\tvar methodArgs = Array.prototype.slice.call(arguments, 2).concat([status]);","\t\tswitch(phase){","\t\t\tcase \"both\":","\t\t\t\tmethod.apply(this, [\"forward\"].concat(methodArgs));","\t\t\t\tif(!status.stop){","\t\t\t\t\tthis.deepInner.apply(this, arguments);","\t\t\t\t\tmethod.apply(this, [\"back\"].concat(methodArgs));","\t\t\t\t}","\t\t\tbreak;","\t\t\tcase \"forward\":","\t\t\t\tmethod.apply(this, methodArgs);","\t\t\t\tif(!status.stop){","\t\t\t\t\tthis.deepInner.apply(this, arguments);","\t\t\t\t}","\t\t\tbreak;","\t\t\tcase \"back\":","\t\t\t\tthis.deepInner.apply(this, arguments);","\t\t\t\tmethod.apply(this, methodArgs);","\t\t\tbreak;","\t\t}","\t\treturn this;","\t}","","\tthis.deepInner = function(){","\t\tvar args = arguments;","\t\tthis.each(function(i, child){","\t\t\tchild.deep.apply(child, args);","\t\t});","\t\treturn this;","\t}","\t","\tthis.each = function(c){","\t\tif(is.func(c)){","\t\t\tfor(var i in this.children){","\t\t\t\tc(i, this.child(i));","\t\t\t}","\t\t}","\t\telse if(is.string(c)){","\t\t\tvar methodArgs = Array.prototype.slice.call(arguments, 1);","\t\t\tvar child, method;","\t\t\tfor(var i in this.children){","\t\t\t\tchild = this.child(i);","\t\t\t\tmethod = child[c];","\t\t\t\tif(is.func(method)) method.apply(child, methodArgs);","\t\t\t}","\t\t}","\t\treturn this;","\t}","\t","\tvar ext = node.extensions;","\tfor(var i in ext){","\t\tfor(var j in ext[i]){","\t\t\tthis[i][j] = ext[i][j];","\t\t\tthis[i].self = this;","\t\t}","\t}","};","","node.extensions = {};","node.extendMethod = function(methodName, extName, extension){","\tvar ext = node.extensions;","\tif(!is.object(ext[methodName])) ext[methodName] = {};","\text[methodName][extName] = extension;","} ","","node.extendMethod(\"deep\", \"updateModel\", function(status){","\tvar status = {error: false, nodes: []};","\tthis.self.deep(\"updateModel\", \"back\", status);","\treturn !status.error;","});","node.extendMethod(\"deep\", \"updateView\", function($box){","\tif(is.jquery($box)) this.self.$outerBox = $box;","\treturn this.self.deep(\"updateView\", \"both\");","});","","function nodeInputBase(name, value, options){","\tthis.value = value;","\tthis.name = name;\t","\tnodeInputBase.superclass.constructor.call(this, options);","\t","","\tthis.enable = function(){","\t\tvar options = this.options;","\t\tif(is.unset(options.accessMode) || options.accessMode != 4){","\t\t\toptions.disabled = false;","\t\t\tif(this.pluginEdit) this.pluginEdit.enable();","\t\t}","\t\treturn this;","\t}","\t","\tthis.disable = function(){","\t\tthis.options.disabled = true;","\t\tif(this.pluginEdit) this.pluginEdit.disable();","\t\treturn this;","\t}","\t","\tthis.show = function(){","\t\tvar options = this.options;","\t\tif(is.unset(options.accessMode) || options.accessMode != 0){","\t\t\tnodeInputBase.superclass.show.call(this);","\t\t}","\t\treturn this;","\t}","\t","\tthis.isDisabled\t = function(){","\t\treturn this.pluginEdit.isDisabled();","\t}","\t","\tthis.setError = function(message){","\t\tthis.pluginEdit.setError(message);","\t\treturn this;","\t}","\t","\tthis.cleanError = function(){","\t\tthis.pluginEdit.cleanError();","\t\treturn this;","\t}","\t","\tthis.setComment = function(message){","\t\tthis.options.comment = message;","\t\tif(this.$box.isRendered()){","\t\t\tthis.pluginEdit.setComment(message);","\t\t}","\t\treturn this;","\t}","\t","\tthis.cleanComment = function(){","\t\tdelete this.options.comment;","\t\tif(this.$box.isRendered()){","\t\t\tthis.pluginEdit.cleanComment();","\t\t}","\t\treturn this;","\t}","\t","\tthis.label = function(name){","\t\tif(is.set(name)){","\t\t\tif(this.$box.isRendered()){","\t\t\t\tthis.pluginEdit.label(name);","\t\t\t}","\t\t\telse{","\t\t\t\tthis.name = name;","\t\t\t}","\t\t}","\t\telse{","\t\t\tif(this.$box.isRendered()){","\t\t\t\treturn this.pluginEdit.label();","\t\t\t}","\t\t\telse{","\t\t\t\treturn this.name;","\t\t\t}","\t\t}","\t\treturn this;","\t}","","\tthis.bind(\"fieldchange\", function(){","\t\t//this.valXSS();","\t\tthis.modified = (this.value != this.val());","\t});","\t","\t","\tthis.fieldchange = function(){","\t\tthis.emit(\"fieldchange\", this.val());","\t\treturn this;","\t}","","// временно не используем функцию, ломает уходилку со страниц","\t//~ this.valXSS = function() {","\t\t//~ var str = this.val();","\t\t//~ if (is.string(str)) {","\t\t\t//~ str = str.replace(/</g,\"&lt;\");","\t\t\t//~ str = str.replace(/>/g,\"&gt;\");","\t\t\t//~ this.val(str);","\t\t//~ }","\t\t//~ return null;","\t//~ }","\t","\tthis.mandatory = function(value){","\t\tif(is.set(value)){","\t\t\tif(this.pluginEdit)\tthis.pluginEdit.mandatory(value);","\t\t\tthis.options.mandatory = value;","\t\t\treturn this;","\t\t}","\t\telse{","\t\t\treturn this.options.mandatory;","\t\t}","\t}","\t","\tnodeInputBase.prototype.toString = function(){","\t\tvar value = this.val();","\t\tif(this.isDisabled()){","\t\t\treturn \"[<span langkey='notreq'>\" + lng(\"notreq\") + \"</span>]\";","\t\t}","\t\telse{","\t\t\tif((is.string(value) && value != \"\") || (!is.string(value) && is.set(value))){","\t\t\t\treturn value;","\t\t\t}","\t\t\telse{","\t\t\t\treturn \"[<span langkey='notspec'>\" + lng(\"notspec\") + \"</span>]\";","\t\t\t}","\t\t}","\t}","\t","\tnodeInputBase.prototype.getSummary = function($box){","\t\tvar $summary = $();","\t\tvar options = this.options;","\t\tvar disabled = this.isDisabled();","\t\tif(!$box || options.forceSummary || (this.modified && !this.options.password && !disabled && !options.hidden)){","\t\t\tvar $obj = $(\"<div></div>\").html(this.toHTML());","\t\t\t$obj.find(\".edit\").removeClass(\"editDisabled\");","\t\t\tvar value = this.toString();","\t\t\tvar $input = $obj.find(\".input\").addClass(\"static\").html(value);","\t\t\t$obj.find(\".mandatory\").remove();","\t\t\t$obj.find(\".comment\").hide();","\t\t\t$summary = $obj;","\t\t\tif(is.jquery($box)) $box.append($summary);","\t\t}","\t\treturn $summary;","\t}","\t","\tnodeInputBase.prototype.applyAttrs = function(value){","\t\tfunction toDefaultMode(){","\t\t\tdelete this.options.accessMode;","\t\t\tif(!this.options.disabled) this.enable();","\t\t\tif(!this.options.hidden) this.show();","\t\t}","","\t\ttry{","\t\t\tvar mode = this.options.accessMode = value.__attrs__.mode;","\t\t\tswitch(mode){","\t\t\t\tcase 4:","\t\t\t\t\tif(this.pluginEdit) this.pluginEdit.disable();","\t\t\t\tbreak;","\t\t\t\tcase 0:","\t\t\t\t\tthis.$outerBox.hide();","\t\t\t\tbreak;","\t\t\t\tdefault:","\t\t\t\t\ttoDefaultMode.call(this);","\t\t\t\tbreak;","\t\t\t}","\t\t}","\t\tcatch(e){","\t\t\ttoDefaultMode.call(this);","\t\t}","\t}","\t","\tnodeInputBase.prototype.isModified = function(status){","\t\tif(this.$box.isRendered()","\t\t\t&& !this.isDisabled()","\t\t\t&& this.$box.is(\":visible\")","\t\t\t&& !this.isEqual(this.value, this.val())){","","\t\t\tstatus.modified = true;","\t\t\tstatus.nodes.push(this);","\t\t}","\t}","\t","\tnodeInputBase.prototype.isEqual = function(value1, value2){","\t\tif(is.number(value1)) value1 = value1.toString();","\t\tif(is.number(value2)) value2 = value2.toString();","\t\tif(is.unset(value1) || value1 == \"\") value1 = null;","\t\tif(is.unset(value2) || value2 == \"\") value2 = null;","\t\treturn value1 == value2;","\t}","\t","}","extend(nodeInputBase, node);","","node.extendMethod(\"deep\", \"isModified\", function(status){","\tvar status = {modified: false, nodes: []};","\tthis.self.deep(\"isModified\", \"back\", status);","//\tif(status.modified){","//\t\tfor(var i=0; i< status.nodes.length; i++){","//\t\t\tdebug(status.nodes[i], \"; value = \", status.nodes[i].value, \"; val() = \", status.nodes[i].val());","//\t\t}","//\t}","\treturn status.modified;","});","","function nodeInput(name, value, options){","\tnodeInput.superclass.constructor.call(this, name, value,  options);","","\tthis.bindEvents = function(){","\t\tthis.pluginInput.find(\"input\").bind(\"change\", context(this).callback(function(event){","\t\t\tthis.pluginEdit.cleanError();","\t\t\tthis.fieldchange();","\t\t\tevent.stopPropagation();","\t\t\treturn true;","\t\t}));","\t\tthis.pluginInput.bind(\"error.input\", context(this).callback(function(event, errorCode){","\t\t\tthis.pluginEdit.setError(errorCode);","\t\t}));","\t\tthis.pluginInput.bind(\"onfocus.input\", context(this).callback(function(event){","\t\t\tthis.pluginEdit.cleanError();","\t\t}));","\t\treturn this;","\t}","\t","\tnodeInput.prototype.val = function(value){","\t\tif(is.set(value)){","\t\t\tthis.applyAttrs(value);","\t\t\tif(this.pluginInput){","\t\t\t\tthis.pluginInput.fieldval(value);","\t\t\t}","\t\t\tthis.value = value;","\t\t\treturn this;","\t\t}","\t\telse{","\t\t\tif(this.pluginInput){","\t\t\t\treturn this.pluginInput.fieldval();","\t\t\t}","\t\t\telse{","\t\t\t\treturn this.value;","\t\t\t}","\t\t}","\t}","\t","\tthis.updateModel = function(status){","","\t\tif(this.pluginEdit.isDisabled() || this.pluginEdit.is(\":hidden\")){","\t\t\treturn;","\t\t}","","\t\tvar errorCode;","\t\tif(this.options.mandatory){","\t\t\terrorCode = this.pluginInput.isEmpty()?\"fieldEmpty\":null;","\t\t}","\t\tif(is.unset(errorCode)){","\t\t\terrorCode = this.validate();","\t\t}","\t\tif(is.set(errorCode)){","\t\t\tthis.pluginEdit.setError(errorCode);","\t\t\tstatus.error = true;","\t\t\tstatus.nodes.push(this);","\t\t}","\t\telse{","\t\t\tthis.value = this.val();","\t\t}","\t\treturn this;","\t}","","\tthis.validate = function(){","\t\tthis.pluginInput.flags().re = this.options.re;","\t\tvar errorCode = this.pluginInput.validate();","\t\tif(errorCode){","\t\t\tthis.pluginEdit.setError(errorCode);","\t\t}","\t\telse{","\t\t\tthis.pluginEdit.cleanError();","\t\t}","\t\treturn errorCode;","\t}","\t","}","extend(nodeInput, nodeInputBase);","","function nodeip(name, value, options){","\tnodeip.superclass.constructor.apply(this, arguments);","\t","\tthis.updateView = function(phase){","\t\tnodeip.superclass.updateView.apply(this, arguments);","","\t\tif(phase == \"forward\"){","\t\t\tvar options = this.options;","\t\t\tthis.pluginEdit = this.$box.lightUIEdit(this.name, options.comment, {mandatory: options.mandatory});","\t\t\tvar version = options.version;","\t\t\tswitch(version){","\t\t\t\tcase 46:","\t\t\t\t\tthis.pluginInput = this.pluginEdit.find(\".input\").lightUIIPv4IPv6({mandatory: options.mandatory, maxLength: 43, re: options.re});","\t\t\t\tbreak;","\t\t\t\tcase 6:","\t\t\t\t\tthis.pluginInput = this.pluginEdit.find(\".input\").lightUIIPv6({mandatory: options.mandatory, maxLength: 43, re: options.re});","\t\t\t\tbreak;","\t\t\t\tcase 4:","\t\t\t\tdefault:","\t\t\t\t\tthis.pluginInput = this.pluginEdit.find(\".input\").lightUIIPv4({mandatory: options.mandatory, maxLength: 18, re: options.re});","\t\t\t\tbreak;\t\t\t","\t\t\t}","\t\t\tthis.val(this.value);","\t\t\tthis.bindEvents();","\t\t\tif(options.disabled) this.disable();","\t\t}","\t\t","\t\treturn this;","\t}","\t\t","\tthis.setVersion = function(version){","\t\tthis.options.version = version;","\t\tvalue = this.val();","\t\tthis.updateView(\"forward\");","\t\treturn this;","\t}","","}","extend(nodeip, nodeInput);","","function nodemac(name, value, options){","\tnodemac.superclass.constructor.apply(this, arguments);","\t","\tthis.updateView = function(phase){","\t\tnodemac.superclass.updateView.apply(this, arguments);","","\t\tif(phase == \"forward\"){","\t\t\tvar options = this.options;","\t\t\tthis.pluginEdit = this.$box.lightUIEdit(this.name, options.comment, {mandatory: options.mandatory});","\t\t\tthis.pluginInput = this.pluginEdit.find(\".input\").lightUIMAC({mandatory: options.mandatory, maxLength: 17, re: options.re});","\t\t\tthis.val(this.value);","\t\t\tthis.bindEvents();","\t\t\tif(options.disabled) this.disable();","\t\t}","","\t\treturn this;","\t}","}","extend(nodemac, nodeInput);","","function nodeDomainName(name, value, options){","\tnodeDomainName.superclass.constructor.apply(this, arguments);","\t","\tthis.updateView = function(phase){","\t\tnodeDomainName.superclass.updateView.apply(this, arguments);","","\t\tif(phase == \"forward\"){","\t\t\tvar options = this.options;","\t\t\tthis.pluginEdit = this.$box.lightUIEdit(this.name, options.comment, {mandatory: options.mandatory});","\t\t\tthis.pluginInput = this.pluginEdit.find(\".input\").lightUIDomainName({mandatory: options.mandatory, re: options.re, isip: options.isip, ipv6: options.ipv6});","\t\t\tthis.val(this.value);","\t\t\tthis.bindEvents();","\t\t\tif(options.disabled) this.disable();","\t\t}","\t\t","\t\treturn this;","\t}","}","extend(nodeDomainName, nodeInput);","","function nodetext(name, value, options){","\tnodetext.superclass.constructor.apply(this, arguments);","\t","\tthis.updateView = function(phase){","\t\tnodetext.superclass.updateView.apply(this, arguments);","","\t\tif(phase == \"forward\"){","\t\t\tvar options = this.options;","\t\t\tthis.pluginEdit = this.$box.lightUIEdit(this.name, options.comment, {mandatory: options.mandatory});","\t\t\tthis.pluginInput = this.pluginEdit.find(\".input\").lightUIText({mandatory: options.mandatory, password: options.password, re: options.re, maxLength: options.maxLength});","\t\t\tthis.val(this.value);","\t\t\tthis.bindEvents();","\t\t\tif(options.disabled) this.disable();","\t\t}","","\t\treturn this;","\t}","}","extend(nodetext, nodeInput);","","function nodestatic(name, value, options){","\tnodestatic.superclass.constructor.apply(this, arguments);","\t","\tthis.updateView = function(phase){","\t\tnodestatic.superclass.updateView.apply(this, arguments);","","\t\tif(phase == \"forward\"){","\t\t\tvar options = this.options;","\t\t\tthis.pluginEdit = this.$box.lightUIEdit(this.name, options.comment, {mandatory: options.mandatory, re: options.re});","\t\t\tthis.pluginInput = this.pluginEdit.find(\".input\").lightUIStatic();","\t\t\tif(options.translate){","\t\t\t\tthis.pluginEdit.find(\".input\").html(lng(this.value)).attr(\"langkey\", this.value);","\t\t\t}","\t\t\telse{","\t\t\t\tthis.pluginEdit.find(\".input\").html(this.value);","\t\t\t}","\t\t\t","\t\t\tif(options.disabled) this.disable();","\t\t}","","\t\treturn this;","\t}","\t","\tthis.isModified = function(){};","","/*\tthis.val = function(value){","\t\tif(is.set(value)){","\t\t\tif(this.pluginEdit){","\t\t\t\tthis.pluginEdit.find(\".input\").html(value);","\t\t\t}","\t\t\telse{","\t\t\t\tthis.value = value;","\t\t\t}","\t\t\treturn this;","\t\t}","\t\telse{","\t\t\tif(this.pluginEdit){","\t\t\t\treturn this.pluginEdit.find(\".input\").html();;","\t\t\t}","\t\t\telse{","\t\t\t\treturn this.value;","\t\t\t}","\t\t}","\t}","\t","\tthis.updateModel = function(status){","\t\treturn this;","\t}","\t","\tthis.fieldchange = function(){","\t\tthis.emit(\"fieldchange\", this.pluginEdit.find(\".input\").html());","\t\treturn this;","\t}","","\tthis.validate = function(){","\t\treturn this;","\t}*/","}","extend(nodestatic, nodeInput);","","function nodenum(name, value, options){","\tnodenum.superclass.constructor.apply(this, arguments);","\t","\tthis.updateView = function(phase){","\t\tnodenum.superclass.updateView.apply(this, arguments);","","\t\tif(phase == \"forward\"){","\t\t\tvar options = this.options;","\t\t\tthis.pluginEdit = this.$box.lightUIEdit(this.name, options.comment, {mandatory: options.mandatory});","\t\t\tthis.pluginInput = this.pluginEdit.find(\".input\").lightUINumber({mandatory: options.mandatory, minval: options.minval, maxval: options.maxval, re: options.re});","\t\t\tthis.val(this.value);","\t\t\tthis.bindEvents();","\t\t\tif(options.disabled) this.disable();","\t\t}","","\t\treturn this;","\t}","\t","\tthis.val = function(value){","\t\tif(is.set(value)){","\t\t\treturn nodenum.superclass.val.call(this, (new Number(value)).valueOf());","\t\t}","\t\telse{","\t\t\treturn nodenum.superclass.val.call(this)","\t\t}","\t}","\t","\tthis.minval = function(value){","\t\tif(is.set(value)){","\t\t\tthis.options.minval = value;","\t\t\tif(this.$box.isRendered()){","\t\t\t\tthis.pluginInput.flags().minval = value;","\t\t\t}","\t\t\treturn this;","\t\t}","\t\telse{","\t\t\treturn this.options.minval;","\t\t}","\t}","\t","\tthis.maxval = function(value){","\t\tif(is.set(value)){","\t\t\tthis.options.maxval = value;","\t\t\tif(this.$box.isRendered()){","\t\t\t\tthis.pluginInput.flags().maxval = value;","\t\t\t}","\t\t\treturn this;","\t\t}","\t\telse{","\t\t\treturn this.options.maxval;","\t\t}","\t}","","}","extend(nodenum, nodeInput);","","function nodeport(name, value, options){","\tnodeport.superclass.constructor.apply(this, arguments);","\t","\tthis.updateView = function(phase){","\t\tnodemac.superclass.updateView.apply(this, arguments);","","\t\tif(phase == \"forward\"){","\t\t\tvar options = this.options;","\t\t\tthis.pluginEdit = this.$box.lightUIEdit(this.name, options.comment, {mandatory: options.mandatory});","\t\t\tthis.pluginInput = this.pluginEdit.find(\".input\").lightUIPort({mandatory: options.mandatory, re: options.re, isRange: options.isRange, isSeveral: options.isSeveral, use_ports: options.use_ports});","\t\t\tthis.val(this.value);","\t\t\tthis.bindEvents();","\t\t\tif(options.disabled) this.disable();","\t\t}","","\t\treturn this;","\t}","}","extend(nodeport, nodeInput);","","function nodeportold(name, value, options){","\tnodeport.superclass.constructor.apply(this, arguments);","","\tthis.updateView = function(phase){","\t\tnodemac.superclass.updateView.apply(this, arguments);","","\t\tif(phase == \"forward\"){","\t\t\tvar options = this.options;","\t\t\tthis.pluginEdit = this.$box.lightUIEdit(this.name, options.comment, {mandatory: options.mandatory});","\t\t\tthis.pluginInput = this.pluginEdit.find(\".input\").lightUIPortOld({mandatory: options.mandatory, re: options.re, isRange: options.isRange, isSeveral: options.isSeveral});","\t\t\tthis.val(this.value);","\t\t\tthis.bindEvents();","\t\t\tif(options.disabled) this.disable();","\t\t}","","\t\treturn this;","\t}","}","extend(nodeportold, nodeInput);","","(function(){","\tjQuery.fn.isModified = function(){","\t\tvar $obj = this.find(\"[rootnode]\")","\t\tvar modified = false;","\t\tfor(var i=0; i<$obj.length; i++){","\t\t\tif($obj.eq(i).data(\"rootNode\").deep.isModified()){","\t\t\t\tmodified = true;","\t\t\t\tbreak;","\t\t\t}","\t\t}","\t\treturn modified;","\t}","\treturn this;","})();","function nodeCheckBox(name, value, options){","\tnodeCheckBox.superclass.constructor.call(this, name, value, options);","\t","\tthis.updateView = function(phase){","\t\tnodeCheckBox.superclass.updateView.apply(this, arguments);","","\t\tif(phase == \"forward\"){","\t\t\tvar options = this.options;","\t\t\tthis.pluginEdit = this.$box.lightUIEdit(this.name, options.comment, {mandatory: options.mandatory, altname: options.optionName});","\t\t\tthis.pluginInput = this.pluginEdit.find(\".input\").lightUICheckbox();","\t\t\t\t","\t\t\tthis.pluginInput.bind(\"change\", context(this).callback(function(event){","\t\t\t\tthis.pluginEdit.cleanError();","\t\t\t\tthis.fieldchange();","\t\t\t\tevent.stopPropagation();","\t\t\t\treturn true;","\t\t\t}));","","\t\t\tthis.val(this.value);","\t\t\tif(options.disabled) this.disable();","\t\t}","","\t\treturn this;","\t}","\t","\tthis.val = function(value){","\t\tif(is.set(value)){","\t\t\tthis.applyAttrs(value);","\t\t\tif(this.pluginInput){","\t\t\t\tthis.pluginInput.fieldval(value);","\t\t\t}","\t\t\tthis.value = value;","\t\t\treturn this;","\t\t}","\t\telse{","\t\t\tif(this.pluginInput){","\t\t\t\treturn this.pluginInput.fieldval();","\t\t\t}","\t\t\telse{","\t\t\t\treturn this.value;","\t\t\t}","\t\t}","\t}","\t","\tthis.toString = function(){","\t\treturn this.val()?\"[<span langkey='yes'>\" + lng(\"yes\") + \"</span>]\":\"[<span langkey='no'>\" + lng(\"no\") + \"</span>]\";","\t}","\t","\tthis.updateModel = function(status){","\t\tthis.value = this.val();","\t}\t","}","extend(nodeCheckBox, nodeInputBase);","","","function nodeComboGrid(name, value, options){","\tnodeComboGrid.superclass.constructor.call(this, name, value, options);","\t","\tthis.bindEvents = function(){","\t\tif(is.string(this.options.blank)){","/*\t\t\tthis.pluginCombo.bind(\"unfocus.input enter.input tab.input\", context(this).callback(function(event){","\t\t\t\tthis.pluginEdit.cleanError();","\t\t\t\tthis.fieldchange()","\t\t\t\tevent.stopPropagation();","\t\t\t\treturn true;","\t\t\t}));*/","\t\t\tthis.pluginCombo.find(\"input\").bind(\"change\", context(this).callback(function(event){","\t\t\t\tthis.pluginEdit.cleanError();","\t\t\t\tthis.fieldchange()","\t\t\t\tevent.stopPropagation();","\t\t\t\treturn true;","\t\t\t}));","\t\t\tthis.pluginCombo.bind(\"rowclick.grid\", context(this).callback(function(event, $row){","\t\t\t\tthis.pluginEdit.cleanError();","\t\t\t\tthis.emit(\"ruleselect\", $row);","\t\t\t\tevent.stopPropagation();","\t\t\t\treturn true;","\t\t\t}));","\t\t}","\t\telse{","/*\t\t\tthis.pluginCombo.bind(\"unfocus.input enter.input tab.input rowclick.grid\", context(this).callback(function(event){","\t\t\t\tthis.pluginEdit.cleanError();","\t\t\t\tthis.fieldchange()","\t\t\t\tevent.stopPropagation();","\t\t\t\treturn true;","\t\t\t}));*/","\t\t\tthis.pluginCombo.find(\"input\").bind(\"change\", context(this).callback(function(event){","\t\t\t\tthis.pluginEdit.cleanError();","\t\t\t\tthis.fieldchange()","\t\t\t\tevent.stopPropagation();","\t\t\t\treturn true;","\t\t\t}));","\t\t}","\t\tthis.pluginCombo.bind(\"error.input\", context(this).callback(function(event, errorCode){","\t\t\tthis.pluginEdit.setError(errorCode);","\t\t}));","\t\tthis.pluginCombo.bind(\"onfocus.input\", context(this).callback(function(event){","\t\t\tthis.pluginEdit.cleanError();","\t\t}));","\t\treturn this;","\t}","","\tnodeComboGrid.prototype.updateView = function(phase){","\t\tnodeComboGrid.superclass.updateView.apply(this, arguments);","","\t\tif(phase == \"forward\"){","\t\t\tvar options = this.options;","\t\t\tthis.pluginEdit = this.$box.lightUIEdit(this.name, options.comment, {mandatory: options.mandatory});","\t\t\tvar $input = this.pluginEdit.find(\".input\");","\t\t\tvar flags = {header: options.header, type: options.type, index: options.index, blank: options.blank, optionArray: options.optionArray,","\t\t\t\t\t\t\tflags: {maxLength: options.maxLength, mandatory: options.mandatory, re: options.re}};","\t\t\tthis.pluginCombo = $input.lightUIComboGrid(flags);","\t\t\tthis.pluginCombo.find(\".icon\").css(\"display\", \"none\");","","\t\t\tthis.bindEvents();","\t\t\t","\t\t\tthis.val(this.value);","\t\t\tif(options.disabled) this.disable();","\t\t}","\t\treturn this;","\t}","\t","\tthis.val = function(value){","\t\tif(is.set(value)){","\t\t\tthis.applyAttrs(value);","\t\t\tif(this.pluginCombo){","\t\t\t\tthis.pluginCombo.fieldval(value);","\t\t\t}","\t\t\tthis.value = value;","\t\t\treturn this;","\t\t}","\t\telse{","\t\t\tif(this.pluginCombo){","\t\t\t\treturn this.pluginCombo.fieldval();","\t\t\t}","\t\t\telse{","\t\t\t\treturn this.value;","\t\t\t}","\t\t}","\t}","\t","\tnodeComboGrid.prototype.addRow = function( header ){\t\t","\t\tvar options = this.options;","\t\t","\t\tif(is('Object', header)){","\t\t\toptions.optionArray.push(header);","\t\t}","","\t\tif(this.pluginCombo){","\t\t\tthis.pluginCombo.addOption.apply(this.pluginCombo, arguments);","\t\t}","\t\t","\t\treturn this;","\t}","\t","\tnodeComboGrid.prototype.cleanRows = function(){","\t\tthis.pluginCombo.cleanTable();","\t\treturn this;","\t}","\t","\tnodeComboGrid.prototype.updateModel = function(status){","","\t\tif(this.pluginEdit.isDisabled() || this.pluginEdit.is(\":hidden\")) return;","","\t\tvar errorCode;","\t\tif(this.options.mandatory){","\t\t\terrorCode = this.pluginCombo.isEmpty()?\"fieldEmpty\":null;","\t\t}","\t\tif(is.unset(errorCode)){","\t\t\terrorCode = this.validate();","\t\t}","\t\tif(is.set(errorCode)){","\t\t\tthis.pluginEdit.setError(errorCode);","\t\t\tstatus.error = true;","\t\t\tstatus.nodes.push(this);","\t\t}","\t\telse{","\t\t\tthis.value = this.val();","\t\t}","\t\treturn this;","\t}","\t","\tthis.fieldchange = function(){","\t\tthis.emit(\"fieldchange\", this.pluginCombo.fieldval());","\t\treturn this;","\t}","\t","\tthis.validate = function(){","\t\tthis.pluginCombo.flags().re = this.options.re;","\t\tvar errorCode = this.pluginCombo.validate();","\t\tif(errorCode){","\t\t\tthis.pluginEdit.setError(errorCode);","\t\t}","\t\telse{","\t\t\tthis.pluginEdit.cleanError();","\t\t}","\t\treturn errorCode;","\t}\t\t","","\tthis.isModified = function(){","\t\tif(!this.options.blank) nodeComboGrid.superclass.isModified.apply(this, arguments);","\t}","\t","\tif(!options.optionArray) options.optionArray = [];","}","extend(nodeComboGrid, nodeInputBase);","","function nodeComboIP(name, value, options){","\t","\tthis.setVersion = function(version){","\t\tif (version) {","\t\t\tvar ver = new String(version)","\t\t\toptions.type = \"\";","\t\t\tfor (var i = 0; i < ver.length; i++) {","\t\t\t\toptions.type = options.type + \"ipv\" + ver.charAt(i);","\t\t\t}","\t\t} else {","\t\t\toptions.type = \"ipv4\";","\t\t}","\t\tvalue = this.val();","\t\tthis.updateView(\"forward\");","\t\treturn this;","\t}","","\tif(is.unset(options)) options = {};","\t","\tif (options.version) {","\t\tvar ver = new String(options.version)","\t\toptions.type = \"\";","\t\tfor (var i = 0; i < ver.length; i++) {","\t\t\toptions.type = options.type + \"ipv\" + ver.charAt(i);","\t\t}","\t} else {","\t\toptions.type = \"ipv4\";","\t}","\t","\tdelete options.version;","\t","\t","\toptions.index = \"ip\";","","\tnodeComboIP.superclass.constructor.call(this, name, value, options);","}","extend(nodeComboIP, nodeComboGrid);","","function nodeComboMAC(name, value, options){","\tif(is.unset(options)) options = {};","\toptions.type = \"mac\";","\toptions.index = \"mac\";","\tnodeComboMAC.superclass.constructor.call(this, name, value, options);","\t","\tnodeComboMAC.prototype.updateView = function(phase){","\t\tnodeComboMAC.superclass.updateView.apply(this, arguments);","","\t\tif(phase == \"forward\"){","\t\t\tvar userip = this.options.userip;","\t\t\tif(is.set(userip)){","\t\t\t\tthis.pluginCombo","\t\t\t\t\t.addClass(\"node-combo-mac\")","\t\t\t\t\t.bind(\"iconclick.grid\", context(this).callback(function(){","\t\t\t\t\t\tvar $grid = this.pluginCombo;","\t\t\t\t\t\tvar userip = this.options.userip;","\t\t\t\t\t\tvar $row;","\t\t\t\t\t\tfor(var i=0; i<$grid.nrow(); i++){","\t\t\t\t\t\t\t$row = $grid.row(i);","\t\t\t\t\t\t\tif($row.col(\"ip\").html() == userip){","\t\t\t\t\t\t\t\tthis.val($row.col(\"mac\").html());","\t\t\t\t\t\t\t\tbreak;","\t\t\t\t\t\t\t}","\t\t\t\t\t\t}","\t\t\t\t\t}))","\t\t\t\t\t.find(\".icon\")","\t\t\t\t\t.show()","\t\t\t\t\t.html(\"<span></span>\")","\t\t\t\t\t.find(\"span\")","\t\t\t\t\t.html(lng(\"clonemac\"))","\t\t\t\t\t.attr(\"langkey\", \"clonemac\");","\t\t\t\t\t","\t\t\t\tthis.pluginCombo","\t\t\t\t\t.bind(\"iconResetclick.grid\", context(this).callback(function(){","\t\t\t\t\t\tvar $grid = this.pluginCombo;","\t\t\t\t\t\tvar userip = this.options.userip;","\t\t\t\t\t\tvar $row;","\t\t\t\t\t\tfor(var i=0; i<$grid.nrow(); i++){","\t\t\t\t\t\t\t$row = $grid.row(i);","\t\t\t\t\t\t\tif($row.col(\"ip\").html() == userip){","\t\t\t\t\t\t\t\tthis.val($row.col(\"mac\").html());","\t\t\t\t\t\t\t\tbreak;","\t\t\t\t\t\t\t}","\t\t\t\t\t\t}","\t\t\t\t\t}))","\t\t\t\t\t.find(\".iconReset\")","\t\t\t\t\t.show()","\t\t\t\t\t.html(\"<span></span>\")","\t\t\t\t\t.find(\"span\")","\t\t\t\t\t.html(lng(\"cloneMACReset\"))","\t\t\t\t\t.attr(\"langkey\", \"cloneMACReset\");","\t\t\t}","\t\t}","\t\treturn this;","\t}","","\tthis.addRow = function(){","\t\tnodeComboMAC.superclass.addRow.apply(this, arguments);","\t\t","\t\tif(this.pluginCombo){","\t\t\tvar $grid = this.pluginCombo.getGrid();","\t\t\tvar $span = $grid.find(\".icon span\");","\t\t\tif($span.is(\":hidden\")){","\t\t\t\tif($grid.row(\"last\").col(\"ip\").html() == this.options.userip){","\t\t\t\t\t$span.show();","\t\t\t\t}","\t\t\t}","\t\t}","","\t\treturn this;","\t}","\t","\tthis.cleanRows = function(){","\t\tnodeComboMAC.superclass.cleanRows.apply(this, arguments);","\t\tthis.pluginCombo.find(\".icon span\").hide();","\t\treturn this;","\t}","\t","}","extend(nodeComboMAC, nodeComboGrid);","","function nodeComboHost(name, value, options){","\tif(is.unset(options)) options = {};","\toptions.type = \"host\";","\toptions.index = \"host\";","\tnodeComboHost.superclass.constructor.call(this, name, value, options);","}","extend(nodeComboHost, nodeComboGrid);","","function nodeComboText(name, value, options){","\tif(is.unset(options)) options = {};","\toptions.type = \"text\";","\tnodeComboText.superclass.constructor.call(this, name, value, options);","}","extend(nodeComboText, nodeComboGrid);","function nodeSelect(name, value, options){","\tnodeSelect.superclass.constructor.call(this, name, value, options);","\t","\tnodeSelect.prototype.updateView = function(phase){","\t\tnodeSelect.superclass.updateView.apply(this, arguments);","","\t\tif(phase == \"forward\"){","\t\t\tvar options = this.options;","\t\t\tthis.pluginEdit = this.$box.lightUIEdit(this.name, options.comment, {mandatory: options.mandatory});","\t\t\tthis.pluginInput  = this.pluginEdit.find(\".input\").lightUISelect({size: options.size, multiple: options.multiple, optionArray: options.optionArray, options: options.options, manualCorrection: options.manualCorrection});","\t\t\t\t","\t\t\tthis.pluginInput.bind(\"change\", context(this).callback(function(event){","\t\t\t\tthis.pluginEdit.cleanError();","\t\t\t\tthis.fieldchange();","\t\t\t\tevent.stopPropagation();","\t\t\t\treturn true;","\t\t\t}));","","\t\t\tthis.correctValue();","\t\t\t","\t\t\tthis.val(this.value);","\t\t\tif(options.disabled) this.disable();","\t\t}","","\t\treturn this;","\t}","\t","\tthis.val = function(value){","\t\tif(is.set(value)){","\t\t\tthis.applyAttrs(value);","\t\t\tif(this.pluginInput){","\t\t\t\tthis.pluginInput.fieldval(value);","\t\t\t}","\t\t\tthis.value = value;","\t\t\treturn this;","\t\t}","\t\telse{","\t\t\tif(this.pluginInput){","\t\t\t\treturn this.pluginInput.fieldval();","\t\t\t}","\t\t\telse{","\t\t\t\treturn this.value;","\t\t\t}","\t\t}","\t}","\t","\tthis.toString = function(){","\t\tvar value = this.val();","\t\tvar alias = value;","\t\tvar options = this.options.options;","\t\tif(options){","\t\t\tfor(var i in options){","\t\t\t\tif(options[i] == value){","\t\t\t\t\talias = i;","\t\t\t\t\tbreak;","\t\t\t\t}","\t\t\t}","\t\t}","\t\treturn \"<span langkey='\" + alias + \"'>\" + lng(alias) + \"</span>\";","\t}","\t","\tthis.addOption = function(name, value){","\t\tif(is.unset(value)) value = name;","\t\tif(is.unset(this.value)) this.value = value;","\t\t","\t\tvar options = this.options;","\t\toptions.options[name] = value;","\t\toptions.optionArray.push({name: name, value: value});","\t\t","\t\tif(this.pluginInput){","\t\t\tthis.pluginInput.addOption(name, value);","\t\t}","\t\treturn this;","\t}","\t","\tthis.cleanOptions = function(){","\t\tthis.options.options = {};","\t\tthis.options.optionArray = [];","\t\tif(this.pluginInput){","\t\t\tthis.pluginInput.cleanOptions();","\t\t}","\t\treturn this;","\t}","","\tthis.correctValue = function(){","\t\tvar options = this.options;","\t\tvar isInList = false;","\t\tvar defValue;","\t\tvar optionArray = options.optionArray;","\t\tvar optionObject = options.options;","\t\tvar value = this.value;","\t\tif(optionArray && optionArray.length){","\t\t\tdefValue = optionArray[0].value;","\t\t\tfor(var i=0; i<optionArray.length; i++){","\t\t\t\tif(value == optionArray[i].value){","\t\t\t\t\tisInList = true;","\t\t\t\t\tbreak;","\t\t\t\t}","\t\t\t}","\t\t}","\t\telse if(optionObject){","\t\t\tvar j = 0;","\t\t\tfor(var i in optionObject){","\t\t\t\tif(!j++) defValue = optionObject[i];","\t\t\t\tif(value == optionObject[i]){","\t\t\t\t\tisInList = true;","\t\t\t\t\tbreak;","\t\t\t\t}","\t\t\t}","\t\t}","\t\tif(!isInList && is.set(defValue)) this.val(defValue);","","\t\treturn this;","\t}","\t\t","\tthis.updateModel = function(status){","\t\tthis.value = this.val();","\t}\t","","\tthis.isModified = function(status){","\t\tif(this.$box.isRendered()","\t\t\t&& !this.isDisabled()","\t\t\t&& this.$box.is(\":visible\")){","\t\t\t\t","\t\t\tvar optionArray = this.options.optionArray;","\t\t\tfor(var i=0; i<optionArray.length; i++){","\t\t\t\tif(this.isEqual(this.value, optionArray[i].value)){","\t\t\t\t\tif(!this.isEqual(this.value, this.val())){","\t\t\t\t\t\tstatus.modified = true;","\t\t\t\t\t\tstatus.nodes.push(this);","\t\t\t\t\t}","\t\t\t\t\treturn;","\t\t\t\t}","\t\t\t}","\t\t}","\t}","","\tthis.bind(\"fieldchange\", this.onfieldchange);","","\t","\tvar options = this.options;","\tvar opt;","\tif(!options.options) options.options = {};","\tif(options.optionArray){","\t\tfor(var i=0; i<options.optionArray.length; i++){","\t\t\topt = options.optionArray[i];","\t\t\toptions.options[opt.name] = opt.value?opt.value:opt.name;","//\t\t\tthis.addOption(opt.name, opt.value);","\t\t}","\t}","\telse{","\t\toptions.optionArray = [];","\t\tfor(var i in options.options){","\t\t\topt = options.options[i];","\t\t\toptions.optionArray.push({name: opt.name, value: opt.value?opt.value:opt.name});","//\t\t\tthis.addOption(i, options.options[i]);","\t\t}","\t}","\t\t","}","extend(nodeSelect, nodeInputBase);","","","function nodemask(name, value, options){","\tif(is.unset(options)) options = {};","\toptions.manualCorrection = true;","\tnodemask.superclass.constructor.apply(this, arguments);","","\tthis.bind(\"endform\", function(){","\t\tvar ipath = this.options.bind;","\t\tthis.listen(ipath, \"fieldchange\", function(status, value){","\t\t\tvar version = status.target.options.version;","","\t\t\t// IPv4 Only ","\t\t\tif(is.set(version) && version != 4) return;","\t\t\t","\t\t\tfunction getClass(ip){","\t\t\t\tif (is.unset(ip)) return null;","\t\t\t\tif (ip.indexOf('.') > 0) {","\t\t\t\t\tvar classX = parseInt(ip.substring(0, ip.indexOf('.')));","\t\t\t\t","\t\t\t\t\tif (classX >= 1 && classX <= 126) {","\t\t\t\t\t\treturn 'A';","\t\t\t\t\t}","\t\t\t\t\tif (classX >= 128 && classX <= 191) {","\t\t\t\t\t\treturn 'B';","\t\t\t\t\t}","\t\t\t\t\tif (classX >= 192 && classX <= 223) {","\t\t\t\t\t\treturn 'C';","\t\t\t\t\t}","\t\t\t\t\tif (classX >= 224 && classX <= 239) {","\t\t\t\t\t\treturn 'D';","\t\t\t\t\t}","\t\t\t\t\tif (classX >= 240 && classX <= 247) {","\t\t\t\t\t\treturn 'E';","\t\t\t\t\t}","\t\t\t\t\treturn null;","\t\t\t\t}","\t\t\t}","","\t\t\tthis.setClass(getClass(value));","\t\t}).get(ipath).fieldchange();","\t});","\t","\tthis.setClass = function(ipClass){","\t\t","\t\tvar oldValue = this.val();","\t\t","\t\tswitch(ipClass){","\t\t\tcase 'A':","\t\t\t\tthis.cleanMasks()","\t\t\t\t\t.addClass('A');","\t\t\t\tif($.browser.msie && this.pluginInput){","\t\t\t\t\tthis.pluginInput.updateSelect();","\t\t\t\t}","\t\t\t\tif(this.checkMask(oldValue)){","\t\t\t\t\tthis.val(oldValue);","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\tthis.val('255.0.0.0');","\t\t\t\t}","\t\t\tbreak;","\t\t\tcase 'B':","\t\t\t\tthis.cleanMasks()","\t\t\t\t\t.addClass('B');","\t\t\t\tif($.browser.msie && this.pluginInput){","\t\t\t\t\tthis.pluginInput.updateSelect();","\t\t\t\t}","\t\t\t\tif(this.checkMask(oldValue)){","\t\t\t\t\tthis.val(oldValue);","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\tthis.val('255.255.0.0');","\t\t\t\t}","\t\t\tbreak;","\t\t\tcase 'C':","\t\t\t\tthis.cleanMasks()","\t\t\t\t\t.addClass('C');","\t\t\t\tif($.browser.msie && this.pluginInput){","\t\t\t\t\tthis.pluginInput.updateSelect();","\t\t\t\t}","\t\t\t\tif(this.checkMask(oldValue)){","\t\t\t\t\tthis.val(oldValue);","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\tthis.val('255.255.255.0');","\t\t\t\t}","\t\t\tbreak;","\t\t\tdefault:","\t\t\t\tthis.cleanMasks()","\t\t\t\t\t.addClass('A')","\t\t\t\t\t.addClass('B')","\t\t\t\t\t.addClass('C')","\t\t\t\tif($.browser.msie && this.pluginInput){","\t\t\t\t\tthis.pluginInput.updateSelect();","\t\t\t\t}","\t\t\t\tif(this.checkMask(oldValue)){","\t\t\t\t\tthis.val(oldValue);","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\tthis.val('255.255.255.0');","\t\t\t\t}","\t\t}","\t\tthis.ipClass = ipClass;","\t\treturn this;","\t}","","\tthis.addMask = function(mask){","\t\tthis.addOption(mask);","\t\tthis.maskCheckList[mask] = true;","\t\treturn this;","\t}","","\tthis.cleanMasks = function(){","\t\tthis.maskCheckList = {};","\t\tthis.cleanOptions();","\t\treturn this;","\t}","","\tthis.addClass = function(ipClass){","\t\tswitch(ipClass){","\t\t\tcase 'A':","\t\t\t\tthis.addMask('255.0.0.0')","\t\t\t\t\t.addMask('254.0.0.0')","\t\t\t\t\t.addMask('252.0.0.0')","\t\t\t\t\t.addMask('248.0.0.0')","\t\t\t\t\t.addMask('240.0.0.0')","\t\t\t\t\t.addMask('224.0.0.0')","\t\t\t\t\t.addMask('192.0.0.0')","\t\t\t\t\t.addMask('128.0.0.0');","\t\t\tbreak;","\t\t\tcase 'B':","\t\t\t\tthis.addMask('255.255.0.0')","\t\t\t\t\t.addMask('255.254.0.0')","\t\t\t\t\t.addMask('255.252.0.0')","\t\t\t\t\t.addMask('255.248.0.0')","\t\t\t\t\t.addMask('255.240.0.0')","\t\t\t\t\t.addMask('255.224.0.0')","\t\t\t\t\t.addMask('255.192.0.0')","\t\t\t\t\t.addMask('255.128.0.0');","\t\t\tbreak;","\t\t\tcase 'C':","\t\t\t\tthis.addMask('255.255.255.255')","\t\t\t\t\t.addMask('255.255.255.254')","\t\t\t\t\t.addMask('255.255.255.252')","\t\t\t\t\t.addMask('255.255.255.248')","\t\t\t\t\t.addMask('255.255.255.240')","\t\t\t\t\t.addMask('255.255.255.224')","\t\t\t\t\t.addMask('255.255.255.192')","\t\t\t\t\t.addMask('255.255.255.128')","\t\t\t\t\t.addMask('255.255.255.0')","\t\t\t\t\t.addMask('255.255.254.0')","\t\t\t\t\t.addMask('255.255.252.0')","\t\t\t\t\t.addMask('255.255.248.0')","\t\t\t\t\t.addMask('255.255.240.0')","\t\t\t\t\t.addMask('255.255.224.0')","\t\t\t\t\t.addMask('255.255.192.0')","\t\t\t\t\t.addMask('255.255.128.0');","\t\t\tbreak;","\t\t}","\t\treturn this;","\t}","\t","\tthis.checkMask = function(value){","\t\treturn this.maskCheckList[value]","\t}","\t","\tthis.maskCheckList = {};","\t","}","extend(nodemask, nodeSelect);","","function nodeTextArea(name, value, options){","\tnodeTextArea.superclass.constructor.call(this, name, value, options);","\t","\tthis.updateView = function(phase){","\t\tnodeTextArea.superclass.updateView.apply(this, arguments);","","\t\tif(phase == \"forward\"){","\t\t\tvar options = this.options;","\t\t\tthis.pluginEdit = this.$box.lightUIEdit(this.name, options.comment, {mandatory: options.mandatory});","\t\t\tvar $textarea = this.pluginEdit.find(\".input\").html(\"<textarea></textarea>\").find(\"textarea\");","\t\t\tif(is.set(options.cols)){","\t\t\t\t$textarea.attr(\"cols\", options.cols);","\t\t\t}","\t\t\tif(is.set(options.rows)){","\t\t\t\t$textarea.attr(\"rows\", options.rows);","\t\t\t}","\t\t\tif(is.set(options.readonly)){","\t\t\t\t$textarea.attr(\"readonly\", options.readonly);","\t\t\t}","\t\t\t\t","\t\t\t$textarea.bind(\"change\", context(this).callback(function(event){","\t\t\t\tvar errorCode = this.validate();","\t\t\t\tif(errorCode){","\t\t\t\t\tthis.pluginEdit.setError(errorCode);","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\tthis.pluginEdit.cleanError();","\t\t\t\t\tthis.fieldchange();","\t\t\t\t}","\t\t\t\tevent.stopPropagation();","\t\t\t\treturn true;","\t\t\t}));","","\t\t\tthis.val(this.value);","\t\t\tif(options.disabled) this.disable();","\t\t}","\t\treturn this;","\t}","\t","\tthis.val = function(value){","\t\tvar $textarea = this.$box.find(\"textarea\");","\t\tif(is.set(value)){","\t\t\tthis.applyAttrs(value);","\t\t\tif($textarea.length){","\t\t\t\t$textarea.val(value);","\t\t\t}","\t\t\tthis.value = value;","\t\t\treturn this;","\t\t}","\t\telse{","\t\t\tif(this.pluginEdit){","\t\t\t\treturn $textarea.val();","\t\t\t}","\t\t\telse{","\t\t\t\treturn this.value;","\t\t\t}","\t\t}","\t}","\t","\tthis.isEmpty = function(){","\t\treturn !this.val().length;","\t}","\t","\tthis.validate = function(){","\t\tvar errorCode = null;","\t\tvar re = this.options.re;","\t\tvar validater;","\t\tvar value = this.val();","\t\tif(is.array(re)){","\t\t\tfor(var i=0; i<re.length; i++){","\t\t\t\tvalidater = re[i];","\t\t\t\tif(is.func(validater)){","\t\t\t\t\terrorCode = validater(value);","\t\t\t\t\tif(errorCode){","\t\t\t\t\t\tbreak;","\t\t\t\t\t}","\t\t\t\t}","\t\t\t}","\t\t}","\t\telse if(is.func(re)){","\t\t\terrorCode = re(value);","\t\t}","\t\tif(errorCode){","\t\t\tthis.pluginEdit.setError(errorCode);","\t\t}","\t\telse{","\t\t\tthis.pluginEdit.cleanError(errorCode);","\t\t}","\t\treturn errorCode;","\t}\t\t","","\tthis.updateModel = function(status){","","\t\tif(this.pluginEdit.isDisabled() || this.pluginEdit.is(\":hidden\")) return;","","\t\tvar errorCode = (this.options.mandatory && this.isEmpty())?\"fieldEmpty\":null;","","\t\tif(is.unset(errorCode)){","\t\t\terrorCode = this.validate();","\t\t}","\t\tif(is.set(errorCode)){","\t\t\tthis.pluginEdit.setError(errorCode);","\t\t\tstatus.error = true;","\t\t\tstatus.nodes.push(this);","\t\t}","\t\telse{","\t\t\tthis.value = this.val();","\t\t}","","\t\treturn this;","\t}","\t","\tthis.toString = function(){","\t\tvar value = this.val();","\t\tif(is.set(value)){","\t\t\treturn value.replace('\\n', ',');","\t\t}","\t\telse{","\t\t\treturn nodeTextArea.superclass.toString.call(this);","\t\t}","\t\t\t\t","\t}","}","extend(nodeTextArea, nodeInputBase);","","function nodeCaption(name, comment){","\tthis.name = name;","\tthis.comment = comment;","\tnodeCaption.superclass.constructor.call(this);","\t","\tthis.updateView = function(phase){","\t\tnodeCaption.superclass.updateView.apply(this, arguments);","","\t\tif(phase == \"forward\"){","\t\t\tthis.pluginSection = this.$innerBox.lightUISection(this.name, this.comment);","\t\t\tthis.$box = this.pluginSection.find(\".content\");","\t\t}","","\t\treturn this;","\t}","","\tthis.setName = function(name){","\t\tthis.name = name;","\t\tif(this.pluginSection){","\t\t\tthis.pluginSection.setName(name);","\t\t}","\t\treturn this;","\t}","","\tthis.setContent = function(value){","\t\tif(this.pluginSection){","\t\t\tthis.pluginSection.setContent(value);","\t\t}","\t\treturn this;","\t}","","\tthis.setComment = function(value){","\t\tthis.comment = value;","\t\tif(this.pluginSection){","\t\t\tthis.pluginSection.setComment(value);","\t\t}","\t\treturn this;","\t}","}","extend(nodeCaption, node);","","function nodeComment(textComment){","\tthis.textComment = textComment;","\tnodeComment.superclass.constructor.call(this);","","\tthis.updateView = function(phase){","\t\tnodeComment.superclass.updateView.apply(this, arguments);","","\t\tif(phase == \"forward\"){","\t\t\tthis.pluginTextComment = this.$innerBox.lightUITextComment(this.textComment);","\t\t}","","\t\treturn this;","\t}","","\tthis.setTextComment = function(textComment){","\t\tthis.textComment = textComment;","\t\tif(this.pluginTextComment){","\t\t\tthis.pluginTextComment.setTextComment(textComment);","\t\t}","\t\treturn this;","\t}","}","extend(nodeComment, node);","","","","function nodeUpload(name, action, filename, options){","\t","\tif(is.unset(options)) options = {};","\t","\tthis.name = name;","\tthis.action = action;","\tthis.filename = filename;","\tthis.options = options;","","\tnodeUpload.superclass.constructor.call(this, options);","\t","\tthis.$upload = null;","\t","\tthis.updateView = function(phase){","\t\tnodeUpload.superclass.updateView.apply(this, arguments);","","\t\tif(phase == \"forward\"){","\t\t\tvar options = this.options;","\t\t\tthis.pluginEdit = this.$box.lightUIEdit(this.name, options.comment, {mandatory: options.mandatory});","\t\t\tthis.$upload = this.pluginEdit.find(\".input\").lightUIUpload(this.action, this.filename, options).bind({","\t\t\t\t'begin.upload': callback(this, function(){","\t\t\t\t\tthis.emit(\"uploading\", this.val());","\t\t\t\t}),","\t\t\t\t'end.upload': callback(this, function(e, data){","\t\t\t\t\tthis.emit(\"uploaded\", this.val(), data);","\t\t\t\t}),","\t\t\t\t'change.upload': callback(this, function(){","\t\t\t\t\tthis.fieldchange();","\t\t\t\t}),","\t\t\t\t'break.upload': callback(this, function(){","\t\t\t\t\tthis.emit(\"cancel\", this.val());","\t\t\t\t})","\t\t\t});","","\t\t\tif(options.disabled) this.disable();","\t\t}","\t\treturn this;","\t}","\t","\tthis.val = function(value){","\t\tif(this.$upload){","\t\t\treturn this.$upload.find(\"form input[type='file']\").val();","\t\t}","\t\telse{","\t\t\treturn \"\";","\t\t}","\t}","\t","\tthis.isEmpty = function(){","\t\treturn !this.val().length;","\t}","\t","\tthis.validate = function(){","\t\tvar errorCode = null;","\t\tvar re = this.options.re;","\t\tvar validater;","\t\tvar value = this.val();","\t\tif(is.array(re)){","\t\t\tfor(var i=0; i<re.length; i++){","\t\t\t\tvalidater = re[i];","\t\t\t\tif(is.func(validater)){","\t\t\t\t\terrorCode = validater(value);","\t\t\t\t\tif(errorCode){","\t\t\t\t\t\tbreak;","\t\t\t\t\t}","\t\t\t\t}","\t\t\t}","\t\t}","\t\telse if(is.func(re)){","\t\t\terrorCode = re(value);","\t\t}","\t\tif(errorCode){","\t\t\tthis.pluginEdit.setError(errorCode);","\t\t}","\t\telse{","\t\t\tthis.pluginEdit.cleanError(errorCode);","\t\t}","\t\treturn errorCode;","\t}\t\t","","\tthis.updateModel = function(status){","","\t\tif(this.pluginEdit.isDisabled() || this.pluginEdit.is(\":hidden\")) return;","","\t\tvar errorCode = (this.options.mandatory && this.isEmpty())?\"fieldEmpty\":null;","","\t\tif(is.unset(errorCode)){","\t\t\terrorCode = this.validate();","\t\t}","\t\tif(is.set(errorCode)){","\t\t\tthis.pluginEdit.setError(errorCode);","\t\t\tstatus.error = true;","\t\t\tstatus.nodes.push(this);","\t\t}","","\t\treturn this;","\t}","\t","\tthis.fieldchange = function(){","\t\tthis.emit(\"fieldchange\", this.val());","\t\treturn this;","\t}","\t","\tthis.upload = function(){","\t\tthis.$upload.upload();","\t\treturn this;","\t}","\t","\tthis.cancel = function(){","\t\tthis.$upload.cancel();","\t\treturn this;","\t}","\t","\tthis.clear = function(){","\t\tthis.$upload.clear();","\t\treturn this;","\t}","","\tthis.enable = function(){","\t\tthis.options.disabled = false;","\t\tif(this.pluginEdit) this.pluginEdit.enable();","\t\tif(this.$upload) this.$upload.enable();","\t\treturn this;","\t}","\t","\tthis.disable = function(){","\t\tthis.options.disabled = true;","\t\tif(this.pluginEdit) this.pluginEdit.disable();","\t\tif(this.$upload) this.$upload.disable();","\t\treturn this;","\t}","\t","\tthis.isDisabled\t = function(){","\t\treturn this.pluginEdit.isDisabled();","\t}","\t","\tthis.setError = function(message){","\t\tthis.pluginEdit.setError(message);","\t\treturn this;","\t}","\t","\tthis.cleanError = function(){","\t\tthis.pluginEdit.cleanError();","\t\treturn this;","\t}","\t","\tthis.setComment = function(message){","\t\tthis.options.comment = message;","\t\tthis.pluginEdit.setComment(message);","\t\treturn this;","\t}","\t","\tthis.cleanComment = function(){","\t\tdelete this.options.comment;","\t\tthis.pluginEdit.cleanComment();","\t\treturn this;","\t}","\t","\tthis.label = function(name){","\t\tif(is.set(name)) this.name = name;","\t\treturn this.pluginEdit.label(name);","\t}","","\tthis.onfieldchange = function(){","\t\tthis.modified = true;","\t}","\t","\tthis.mandatory = function(value){","\t\tif(is.set(value)){","\t\t\tif(this.pluginEdit)\tthis.pluginEdit.mandatory(value);","\t\t\tthis.options.mandatory = value;","\t\t\treturn this;","\t\t}","\t\telse{","\t\t\treturn this.options.mandatory;","\t\t}","\t}","\t","\tthis.bind(\"fieldchange\", this.onfieldchange);","}","extend(nodeUpload, node);","function nodeRadioBox(name, value, options){","\tnodeRadioBox.superclass.constructor.call(this, name, value, options);","","\tthis.updateView = function(phase){","\t\tnodeRadioBox.superclass.updateView.apply(this, arguments);","","\t\tif(phase == \"forward\"){","\t\t\tvar options = this.options;","\t\t\tthis.pluginEdit = this.$box.lightUIEdit(this.name, options.comment, {mandatory: options.mandatory, altname: options.optionName});","\t\t\tvar $input = this.pluginEdit.find(\".input\").html(\"<input type='radio' name='\" + options.groupName + \"' value='\" + options.optionValue + \"'/>\").find(\"input\");","\t\t\t\t","\t\t\t$input.bind(\"change\", context(this).callback(function(event){","\t\t\t\tthis.pluginEdit.cleanError();","\t\t\t\tthis.emit(\"fieldchange\", this.val());","\t\t\t\tevent.stopPropagation();","\t\t\t\treturn true;","\t\t\t}));","","\t\t\tthis.val(this.value);","\t\t\tif(options.disabled) this.disable();","\t\t}","","\t\treturn this;","\t}","\t","\tthis.val = function(value){","\t\tvar $input = this.$box.find(\"input\");","\t\tif(is.bool(value)){","\t\t\tthis.applyAttrs(value);","\t\t\tif($input.length){","\t\t\t\t$input.attr(\"checked\", value);","\t\t\t}","\t\t\tthis.value = value;","\t\t\treturn this;","\t\t}","\t\telse{","\t\t\tif(this.pluginEdit){","\t\t\t\treturn $input.attr(\"checked\")?true:false;","\t\t\t}","\t\t\telse{","\t\t\t\treturn this.value;","\t\t\t}","\t\t}","\t}","\t","\tthis.optionValue = function(value){","\t\tvar $input = this.$box.find(\"input\");\t\t","\t\tif(is.set(value)){","\t\t\t$input.attr(\"value\", value);","\t\t\treturn this;","\t\t}","\t\telse{\t\t\t","\t\t\tif(this.pluginEdit && $input.attr(\"value\")){","\t\t\t\treturn $input.attr(\"value\");","\t\t\t}","\t\t\telse{","\t\t\t\treturn this.options.optionValue;","\t\t\t}","\t\t}","\t}","\t","\tthis.updateModel = function(status){","\t\tthis.value = this.val();","\t}\t","\t","}","extend(nodeRadioBox, nodeInputBase);","","","","function nodeOptionsBase(name, options){","\tnodeOptionsBase.superclass.constructor.call(this, name, null, options);","\tif(!this.options.options) this.options.options = {};","\toptions = this.options;","\t","\tthis.updateView = function(phase){","\t\tnodeOptionsBase.superclass.updateView.call(this, phase);","\t\t","\t\tif(phase == \"forward\"){","\t\t\tthis.$box.addClass(\"node-options\");","\t\t}","\t}","\t","\tthis.cleanOptions = function(){","\t\tthis.initForm();","\t\tif(this.$box.isRendered()){","\t\t\tthis.deep.updateView();","\t\t}","\t\treturn this;","\t}","","\tthis.enable = function(){","\t\tfor(var i=0; i<this.nchild(); i++){","\t\t\tthis.child(i).enable();","\t\t}","\t\treturn this;","\t}","\t","\tthis.disable = function(){","\t\tfor(var i=0; i<this.nchild(); i++){","\t\t\tthis.child(i).disable();","\t\t}","\t\treturn this;","\t}","\t","\tthis.isDisabled\t = function(){","\t\tvar child0 = this.child(0);","\t\tif(child0) return child0.isDisabled();","\t\treturn false;","\t}","\t","\tthis.setError = function(message){","\t\treturn this;","\t}","\t","\tthis.cleanError = function(){","\t\treturn this;","\t}","\t","\tthis.setComment = function(message){","\t\treturn this;","\t}","\t","\tthis.cleanComment = function(){","\t\treturn this;","\t}","\t","\tthis.label = function(name){","\t\tvar child0 = this.child(0);","\t\tif(child0) child0.label(name);","\t\treturn this;","\t}","\t","\tdelete this.isModified;","","\tthis.name = name;","\tthis.options = options;","\t","\tvar arr = options.options;","\tif(is.array(arr)){","\t\tfor(var i=0; i<arr.length; i++){","\t\t\tthis.addOption(arr[i].name, arr[i].value, arr[i].checked, arr[i].comment);","\t\t}","\t}","\t","}","extend(nodeOptionsBase, nodeInputBase);","","function nodeOptions(name){","\t","\tthis.addOption = function(name, value, checked, comment){","\t\tvar label = null;","\t\tif(!this.nchild()){","\t\t\tvar label = this.name;","\t\t}","\t\tthis.add(new nodeCheckBox(label, checked, {optionName: name, comment: comment}), name);","\t\tif(this.$box.isRendered()){","\t\t\tthis.child(this.nchild() - 1).deep.updateView();","\t\t}","\t\treturn this;","\t}","","\tif(is.array(arguments[1])){","\t\tvar options = {","\t\t\toptions: arguments[1]","\t\t};","\t}","\telse if(is.object(arguments[1])){","\t\tvar options = arguments[1];","\t}","\telse if(is.object(arguments[2])){","\t\tvar options = arguments[2];","\t}","\t","\tnodeOptions.superclass.constructor.call(this, name, options);","\t","\tthis.val = function(value){","\t\tif(is.set(value)){","\t\t\treturn this;","\t\t}","\t\telse{","\t\t\treturn null;","\t\t}","\t}","\t","\tthis.toString = function(){","\t\tvar child, name;","\t\tvar str = \"\";","\t\tvar delim = \"\";","\t\tfor(var i=0; i<this.children.length; i++){","\t\t\tchild = this.get(i);","\t\t\tname = child.options.optionName;","\t\t\tif(child.val()){","\t\t\t\tstr += delim + \"<span langkey='\" + name + \"'>\" + lng(name) + \"</span>\";","\t\t\t\tdelim = \",\";","\t\t\t}","\t\t}","\t\treturn str;","\t}","}","extend(nodeOptions, nodeOptionsBase);","","function nodeOptionsRadio(name, value, options){","\t","\tthis.addOption = function(name, value, checked, comment){","\t\tvar label = null;","\t\tif(!this.nchild()){","\t\t\tvar label = this.name;","\t\t\tif(is.unset(this.value)){","\t\t\t\tthis.value = value;","\t\t\t\tchecked = true;","\t\t\t}","\t\t}","\t\tif(checked){","\t\t\tthis.value = value;","\t\t}","\t\telse if(this.value == value){","\t\t\tchecked = true;","\t\t}","\t\t\t","\t\tthis.add(new nodeRadioBox(label, checked, {optionName: name, groupName: this.groupName, optionValue: value, comment: comment}), value);","","\t\tthis.listen(value, \"fieldchange\", function(status){","\t\t\tstatus.bubbling = false;","\t\t\tthis.emit(\"fieldchange\", status.target.options.optionValue);","\t\t});","","\t\tif(this.$box.isRendered()){","\t\t\tthis.child(this.nchild() - 1).deep.updateView();","\t\t}","\t\treturn this;","\t}","","\tif(name){","\t\tthis.groupName = name;","\t}","\telse{","\t\tthis.groupName = gID.get();","\t}","","\tnodeOptionsRadio.superclass.constructor.call(this, name, options);","\t","\tthis.val = function(value){","\t\tif(is.set(value)){","\t\t\tthis.applyAttrs(value);","\t\t\tvar child;","\t\t\tfor(var i=0; i<this.nchild(); i++){","\t\t\t\tchild = this.child(i);","\t\t\t\tif(child.optionValue() == value){","\t\t\t\t\tthis.value = value;","\t\t\t\t\tchild.val(true);","\t\t\t\t}","\t\t\t\telse{","\t\t\t\t\tchild.val(false);","\t\t\t\t}","\t\t\t}","\t\t\treturn this;","\t\t}","\t\telse{","\t\t\tvar child;","\t\t\tfor(var i=0; i<this.nchild(); i++){","\t\t\t\tchild = this.child(i);","\t\t\t\tif(child.val()){","\t\t\t\t\treturn child.optionValue();","\t\t\t\t\tbreak;","\t\t\t\t}","\t\t\t}","\t\t\treturn null;","\t\t}","\t}","","\t","\tthis.toString = function(){","\t\tvar child;","\t\tvar str = \"\";","\t\tfor(var i=0; i<this.children.length; i++){","\t\t\tvar child = this.get(i);","\t\t\tvar name = child.options.optionName;","\t\t\tif(child.val()) return \"<span langkey='\" + name + \"'>\" + lng(name) + \"</span>\";","\t\t}","\t\treturn \"\";","\t}","","\t","\tthis.updateModel = function(status){","\t\tthis.value = this.val();","\t}\t","","\tthis.value = value;","}","extend(nodeOptionsRadio, nodeOptionsBase);","function nodeStepWizard(){","\tnodeStepWizard.superclass.constructor.call(this);","","\tnodeStepWizard.prototype.updateView = function(phase, status){","\t\tnodeStepWizard.superclass.updateView.apply(this, arguments);","","\t\tif(phase == \"forward\"){","\t\t\tstatus.stop = true;","\t\t\tif(is.set(this.lastActiveInx)){","\t\t\t\tthis.switchStep(this.lastActiveInx);","\t\t\t}","\t\t\telse{","\t\t\t\tthis.switchStep(\"first\");","\t\t\t}","\t\t}","\t\treturn this;","\t}","","\tnodeStepWizard.prototype.addStep = function(obj, alias){","\t\tthis.add(obj, alias);","\t\treturn this;","\t}","\t","\tnodeStepWizard.prototype.removeStep = function(arg){","\t\tthis.skipStepOn(arg);","\t\treturn this;","\t}","\t","\tnodeStepWizard.prototype.switchStep = function(arg){","\t\tvar step = this.getStep(arg);","\t\tif(step) step.deep.updateView(this.$box);","\t\t\t","\t\treturn this;","\t}","\t","\tnodeStepWizard.prototype.getStep = function(arg){\t\t","\t\tvar step;","\t\t","\t\tfunction seekForward(inx){","\t\t\tdo{","\t\t\t\tstep = this.get(inx++);","\t\t\t}","\t\t\twhile(step && step.options.skip)","\t\t\treturn step;","\t\t}","\t\t","\t\tfunction seekBackward(inx){","\t\t\tdo{","\t\t\t\tstep = this.get(inx--);","\t\t\t}","\t\t\twhile(step && step.options.skip)","\t\t\treturn step;","\t\t}","\t\t","\t\tif(arg == \"next\"){","\t\t\treturn seekForward.call(this, this.getActiveIndex() + 1);","\t\t}","\t\telse if(arg == \"prev\"){","\t\t\treturn seekBackward.call(this, this.getActiveIndex() - 1);","\t\t}","\t\telse if(arg == \"last\"){","\t\t\treturn seekBackward.call(this, this.children.length - 1);","\t\t}","\t\telse if(arg == \"first\"){","\t\t\treturn seekForward.call(this, 0);","\t\t}","\t\telse if(arg == \"active\" || is.unset(arg)){","\t\t\treturn this.getActiveStep();","\t\t}","\t\telse if(is.string(arg) || is.number(arg)){","\t\t\treturn this.get(arg);","\t\t}","\t\t","\t\treturn null;","\t}","\t","\tnodeStepWizard.prototype.getActiveIndex = function(){","\t\tvar i;","\t\tfor(var i=0; i<this.children.length; i++){","\t\t\tif(this.get(i).$box.isRendered()) break;","\t\t}","\t\tthis.lastActiveInx = i;","","\t\treturn i;","\t}","","\tnodeStepWizard.prototype.getActiveStep = function(){","\t\treturn this.get(this.getActiveIndex());;","\t}","\t","\tnodeStepWizard.prototype.skipStepOn = function(arg){","\t\tthis.getStep(arg).options.skip = true;","\t\treturn this;","\t}","\t","\tnodeStepWizard.prototype.skipStepOff = function(arg){","\t\tdelete this.getStep(arg).options.skip;","\t\treturn this;","\t}","\t","\tnodeStepWizard.prototype.isStepFirst = function(inx){","\t\treturn this.getStep(\"first\") == this.getStep(inx);","\t}","\t","\tnodeStepWizard.prototype.isStepLast = function(inx){","\t\treturn this.getStep(\"last\") == this.getStep(inx);","\t}","","\tfunction __next(stepDone, inx, __return){","\t\tif(!is.func(__return)) __return = function(){};","\t\tfunction __stepUp(__return){","\t\t\tthis.switchStep(\"next\");","\t\t\tif(is.func(this.doAfter)) this.doAfter(this.getActiveStep(), callbackEx(this, __return, true));","\t\t\telse __return(true);","\t\t}","\t\t","\t\tif(!stepDone && !this.isStepLast(inx)){","\t\t\tif(is.func(this.doBefore)) this.doBefore(this.getActiveStep(), callbackEx(this, __stepUp, __return));","\t\t\telse __stepUp.call(this, __return)","\t\t}","\t\telse{","\t\t\tif(is.func(__return)) __return(stepDone);","\t\t}","\t\treturn this;","\t}","","\tfunction __previous(stepDone, inx, __return){","\t\tif(!is.func(__return)) __return = function(){};","\t\tif(!stepDone && !this.isStepFirst(inx)){","\t\t\tthis.switchStep(\"prev\");","\t\t\tif(is.func(this.doAfter)) this.doAfter(this.getActiveStep(), callbackEx(this, __return, true));","\t\t\telse __return(true);","\t\t}","\t\telse{","\t\t\t__return(stepDone);","\t\t}","\t\treturn this;","\t}","","\tfunction __doStep(method, __return){","\t\tvar inx = this.getActiveIndex();","\t\tvar step = this.get(inx);","","\t\tif(step instanceof nodeStepWizard){","\t\t\t__doStep.call(step, method, callbackEx(this, method, inx, __return));","\t\t}","\t\telse method.call(this, false, inx, __return);","\t\t","\t\treturn this;","\t}","\t","\t//Логика такая: методы doBefore и doAfter исполняются только теми мастерами которые реально делают шаг","\t//Вложенные и родительские мастера doBefore и doAfter не испольняют","","\tnodeStepWizard.prototype.next = function(__return){","\t\treturn __doStep.call(this, __next, __return);","\t}","","\tnodeStepWizard.prototype.previous = function(__return){","\t\treturn __doStep.call(this, __previous, __return);","\t}","","\tnodeStepWizard.prototype.checkNext = function(){","\t\tvar inx = this.getActiveIndex();","\t\tvar step = this.get(inx);","","\t\tif(!this.isStepLast(inx)){","\t\t\treturn true;","\t\t}","\t\telse{","\t\t\tif(step instanceof nodeStepWizard){","\t\t\t\treturn step.checkNext();","\t\t\t}","\t\t\telse{","\t\t\t\treturn false;","\t\t\t}","\t\t}","\t}","","\tnodeStepWizard.prototype.checkPrevious = function(){","\t\tvar inx = this.getActiveIndex();","\t\tvar step = this.get(inx);","","\t\tif(!this.isStepFirst(inx)){","\t\t\treturn true;","\t\t}","\t\telse{","\t\t\tif(step instanceof nodeStepWizard){","\t\t\t\treturn step.checkPrevious();","\t\t\t}","\t\t\telse{","\t\t\t\treturn false;","\t\t\t}","\t\t}","\t}","","\tthis.activeIndex = 0;","}","extend(nodeStepWizard, node);","","//deprecated class","","function nodeWizard(){","\tnodeWizard.superclass.constructor.call(this);","","\tnodeWizard.prototype.updateView = function(phase){","\t\tnodeWizard.superclass.updateView.apply(this, arguments);","","\t\tif(phase == \"forward\"){","\t\t\tvar options = this.options;","\t\t\tvar child;","\t\t\tthis.pluginWizard = this.$box.lightUIWizard();","\t\t\tfor(var i=0; i<this.children.length; i++){","\t\t\t\tchild = this.child(i)","\t\t\t\tchild.$outerBox = this.pluginWizard.addStep(this.child(i).getAlias()).getStep(i);","\t\t\t\tif(child.options.skip) this.pluginWizard.skipStepOn(i);","\t\t\t}","\t\t}","\t\treturn this;","\t}","","\tnodeWizard.prototype.addStep = function(obj, alias){","\t\tthis.add(obj, alias);","\t\tif(is.jquery(this.pluginWizard)){","\t\t\tvar $obj = this.pluginWizard.addStep(alias).getStep(alias);","\t\t\tif(is.set(alias)){","\t\t\t\tthis.child(alias).$outerBox = $obj;","\t\t\t\tthis.child(alias).deep.updateView();","\t\t\t}","\t\t\telse{","\t\t\t\tthis.child(this.children.length-1).$outerBox = $obj;","\t\t\t\tthis.child(this.children.length-1).deep.updateView();","\t\t\t}","\t\t}","\t\treturn this;","\t}","\t","\tnodeWizard.prototype.removeStep = function(arg){","\t\tthis.pluginWizard.removeStep(arg);","\t\tfor(var i=0; i<this.children.length; i++){","\t\t\tif(!this.jQuery(i).length){","\t\t\t\tthis.replace(i);","\t\t\t}","\t\t}","\t\treturn this;","\t}","\t","\tnodeWizard.prototype.switchStep = function(arg){","\t\tthis.pluginWizard.switchStep(arg);","\t\treturn this;","\t}","\t","\tnodeWizard.prototype.getActiveIndex = function(){","\t\treturn this.pluginWizard.getActiveIndex();","\t}","","\tnodeWizard.prototype.getActiveStep = function(){","\t\tvar inx = this.getActiveIndex();","\t\treturn this.get(inx);","\t}","\t","\tnodeWizard.prototype.skipStepOn = function(arg){","\t\tvar step = this.get(arg);","\t\tvar index = step.index();","\t\tstep.options.skip = true;","\t\tif(is.jquery(this.pluginWizard)) this.pluginWizard.skipStepOn(index);","\t\treturn this;","\t}","\t","\tnodeWizard.prototype.skipStepOff = function(arg){","\t\tvar step = this.get(arg);","\t\tvar index = step.index();","\t\tdelete step.options.skip;","\t\tif(is.jquery(this.pluginWizard)) this.pluginWizard.skipStepOff(index);","\t\treturn this;","\t}","\t","\tfunction __next(stepDone, inx, __return){","\t\tif(!is.func(__return)) __return = function(){};","\t\tfunction __stepUp(__return){","\t\t\tthis.switchStep(\"next\");","\t\t\tif(is.func(this.doAfter)) this.doAfter(this.getActiveStep(), callbackEx(this, __return, true));","\t\t\telse __return(true);","\t\t}","\t\t","\t\tif(!stepDone && !this.pluginWizard.isStepLast(inx)){","\t\t\tif(is.func(this.doBefore)) this.doBefore(this.getActiveStep(), callbackEx(this, __stepUp, __return));","\t\t\telse __stepUp.call(this, __return)","\t\t}","\t\telse{","\t\t\tif(is.func(__return)) __return(stepDone);","\t\t}","\t\treturn this;","\t}","","\tfunction __previous(stepDone, inx, __return){","\t\tif(!is.func(__return)) __return = function(){};","\t\tif(!stepDone && !this.pluginWizard.isStepFirst(inx)){","\t\t\tthis.switchStep(\"prev\");","\t\t\tif(is.func(this.doAfter)) this.doAfter(this.getActiveStep(), callbackEx(this, __return, true));","\t\t\telse __return(true);","\t\t}","\t\telse{","\t\t\t__return(stepDone);","\t\t}","\t\treturn this;","\t}","","\tfunction __doStep(method, __return){","\t\tvar inx = this.getActiveIndex();","\t\tvar step = this.get(inx);","","\t\tif(step instanceof nodeWizard){","\t\t\t__doStep.call(step, method, callbackEx(this, method, inx, __return));","\t\t}","\t\telse method.call(this, false, inx, __return);","\t\t","\t\treturn this;","\t}","\t","\t//Логика такая: методы doBefore и doAfter исполняются только теми мастерами которые реально делают шаг","\t//Вложенные и родительские мастера doBefore и doAfter не испольняют","","\tnodeWizard.prototype.next = function(__return){","\t\treturn __doStep.call(this, __next, __return);","\t}","","\tnodeWizard.prototype.previous = function(__return){","\t\treturn __doStep.call(this, __previous, __return);","\t}","","\tnodeWizard.prototype.checkNext = function(){","\t\tvar inx = this.getActiveIndex();","\t\tvar step = this.get(inx);","","\t\tif(!this.pluginWizard.isStepLast(inx)){","\t\t\treturn true;","\t\t}","\t\telse{","\t\t\tif(step instanceof nodeWizard){","\t\t\t\treturn step.checkNext();","\t\t\t}","\t\t\telse{","\t\t\t\treturn false;","\t\t\t}","\t\t}","\t}","","\tnodeWizard.prototype.checkPrevious = function(){","\t\tvar inx = this.getActiveIndex();","\t\tvar step = this.get(inx);","","\t\tif(!this.pluginWizard.isStepFirst(inx)){","\t\t\treturn true;","\t\t}","\t\telse{","\t\t\tif(step instanceof nodeWizard){","\t\t\t\treturn step.checkPrevious();","\t\t\t}","\t\t\telse{","\t\t\t\treturn false;","\t\t\t}","\t\t}","\t}","","\tthis.activeIndex = 0;","}","extend(nodeWizard, node);","","","","","function nodeTrackbar(name, value, options){","\t","\tif(is.unset(options)) options = {};","\t","\tthis.name = name;","\tthis.options = options;","","\tnodeTrackbar.superclass.constructor.call(this, options);","\t","\tthis.$trackbar = null;","\t","\tthis.updateView = function(phase){","\t\tnodeTrackbar.superclass.updateView.apply(this, arguments);","","\t\tif(phase == \"forward\"){","\t\t\tvar options = this.options;","\t\t\tthis.pluginEdit = this.$box.lightUIEdit(this.name, options.comment, {mandatory: options.mandatory});","\t\t\tthis.$trackbar = this.pluginEdit.find(\".input\").lightUITrackbar(value, options).bind({","\t\t\t\t'change.trackbar': callback(this, function(){","\t\t\t\t\tthis.fieldchange();","\t\t\t\t})","\t\t\t});","","\t\t\tif(options.disabled) this.disable();","\t\t}","\t\treturn this;","\t}","\t","\tthis.val = function(value){","\t\tif (is.set(value)) {","\t\t\tthis.applyAttrs(value);","\t\t\tthis.$trackbar.fieldval(value);","\t\t\treturn this;","\t\t}","\t\treturn this.$trackbar.fieldval();","\t}\t\t","","\tthis.updateModel = function(status){","\t\tif(this.pluginEdit.isDisabled() || this.pluginEdit.is(\":hidden\")) return;","\t\treturn this;","\t}","\t","\tthis.fieldchange = function(){","\t\tthis.emit(\"fieldchange\", this.val());","\t\treturn this;","\t}","","\tthis.enable = function(){","\t\tthis.options.disabled = false;","\t\tif(this.pluginEdit) this.pluginEdit.enable();","\t\tif(this.$trackbar) this.$trackbar.enable();","\t\treturn this;","\t}","\t","\tthis.disable = function(){","\t\tthis.options.disabled = true;","\t\tif(this.pluginEdit) this.pluginEdit.disable();","\t\tif(this.$trackbar) this.$trackbar.disable();","\t\treturn this;","\t}","\t","\tthis.isDisabled\t = function(){","\t\treturn this.pluginEdit.isDisabled();","\t}","\t","\tthis.setComment = function(message){","\t\tthis.options.comment = message;","\t\tthis.pluginEdit.setComment(message);","\t\treturn this;","\t}","\t","\tthis.cleanComment = function(){","\t\tdelete this.options.comment;","\t\tthis.pluginEdit.cleanComment();","\t\treturn this;","\t}","\t","\tthis.label = function(name){","\t\tif(is.set(name)) this.name = name;","\t\treturn this.pluginEdit.label(name);","\t}","","\tthis.onfieldchange = function(){","\t\tthis.modified = true;","\t}","\t","\tthis.bind(\"fieldchange\", this.onfieldchange);","}","extend(nodeTrackbar, nodeInputBase);","//})(window);",""],"id":10},{"start":{"row":0,"column":0},"end":{"row":0,"column":77},"action":"insert","lines":["var obj = $(this).children(\"input\"); obj.attr(\"checked\", true); obj.change();"]}]]},"ace":{"folds":[],"scrolltop":183595,"scrollleft":0,"selection":{"start":{"row":0,"column":0},"end":{"row":13128,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":28764,"mode":"ace/mode/text"}},"timestamp":1472480209153,"hash":"449894a5a82775b5b2188a6fa6242e12a5b063e2"}